<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
  <Token>
    <TokenIdentifier>
      <Name>todo</Name>
      <APILanguage>unknown</APILanguage>
    </TokenIdentifier>
    <Path>todo.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AppDelegate</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>AppDelegate</Scope>
    </TokenIdentifier>
    <Path>interface_app_delegate.html</Path>
    <DeclaredIn>AppDelegate.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addLog:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>AppDelegate</Scope>
    </TokenIdentifier>
    <Path>interface_app_delegate.html</Path>
    <Anchor>a9a348d44d3e218b03b8c948cfd198db7</Anchor>
    <DeclaredIn>AppDelegate.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>chooseInputDir:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>AppDelegate</Scope>
    </TokenIdentifier>
    <Path>interface_app_delegate.html</Path>
    <Anchor>a521680c297dd9d46988137c16add33bd</Anchor>
    <DeclaredIn>AppDelegate.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>chooseOutputDir:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>AppDelegate</Scope>
    </TokenIdentifier>
    <Path>interface_app_delegate.html</Path>
    <Anchor>a3b3d3a4f2fb8591b61bf06e906502735</Anchor>
    <DeclaredIn>AppDelegate.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>run:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>AppDelegate</Scope>
    </TokenIdentifier>
    <Path>interface_app_delegate.html</Path>
    <Anchor>ac4d8ab9ad411eeab580631d31e700885</Anchor>
    <Abstract>Lets an INClassGenerator instance run over all XSDs it finds.</Abstract>
    <DeclaredIn>AppDelegate.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doOverwrite</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>AppDelegate</Scope>
    </TokenIdentifier>
    <Path>interface_app_delegate.html</Path>
    <Anchor>abb5557983ce56be182236773ce241fe5</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>inDirField</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>AppDelegate</Scope>
    </TokenIdentifier>
    <Path>interface_app_delegate.html</Path>
    <Anchor>a323ec2e69fae2f7ce338486815ab9b87</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outDirField</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>AppDelegate</Scope>
    </TokenIdentifier>
    <Path>interface_app_delegate.html</Path>
    <Anchor>a5c81935195cd757418c7dce37a43460d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>output</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>AppDelegate</Scope>
    </TokenIdentifier>
    <Path>interface_app_delegate.html</Path>
    <Anchor>a9aaf3ff1a988b0eedc70919aa4a91bcb</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>window</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>AppDelegate</Scope>
    </TokenIdentifier>
    <Path>interface_app_delegate.html</Path>
    <Anchor>acdf10c46711b4d6a8d95def15620afb6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>INAddress</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>INAddress</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_address.html</Path>
    <Abstract>A generic address object.</Abstract>
    <DeclaredIn>INAddress.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>city</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INAddress</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_address.html</Path>
    <Anchor>aef635a5662c53a8f17f1d3d6710a1f08</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>country</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INAddress</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_address.html</Path>
    <Anchor>a86aea99f1b37f31cf5779ec369ca7e8e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postalCode</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INAddress</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_address.html</Path>
    <Anchor>a1ad923bfcd1ae0f24d3daaa8ee22f838</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>region</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INAddress</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_address.html</Path>
    <Anchor>a490cde2a1f11efadf54a383278665b89</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>street</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INAddress</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_address.html</Path>
    <Anchor>a45962da32bd36750404222bfce400d82</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>asAttribute</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a75c5d68b06350558099044ce3a9d699e</Anchor>
    <Abstract>Returns the value of this node usable as attribute to another node.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributeValue</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a9709e6fee409dd3f7807e8221b5e69e4</Anchor>
    <Abstract>Returns the string that goes into the attribute value.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flatXMLPartsWithPrefix:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ab13beda92d1082fbdd10a3b21c4cfbb7</Anchor>
    <Abstract>Indivo 2.0&amp;#39;s ugly flat XML format needs this.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initFromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>adeead863b5cfa8a5d5e67b972856548b</Anchor>
    <Abstract>The designated initializer.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>innerXML</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>abd3cd1007fc6a53c021c768d8683f59c</Anchor>
    <Abstract>Returns the XML of all child nodes.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNull</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a6e7a7b930974303ba1b8ac4991967d24</Anchor>
    <Abstract>An object can decide that it is null, i.e.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFromFlatParent:prefix:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a1eb0c99c8d591f3a58b588363e4d2565</Anchor>
    <Abstract>Handling incoming Indivo 2.0 flat XML IndivoAbstractDocument, a subclass of INObject, uses a slightly more diverse implementation of this method.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ad4932e0b05bc9d5ef23b89b8d4509400</Anchor>
    <Abstract>The INObject implementation sets the node name and node type (if a &amp;quot;type&amp;quot; attribute is found in the X...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWithAttr:fromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>af329d1bf14adb4c69f32148c418ca4cb</Anchor>
    <Abstract>Tries to interpret the attribute string as representing our value.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tagString</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a6526a4c774e928adecf4d0efad4758ee</Anchor>
    <Abstract>Returns the tag name and, if mustDeclareType is YES, the xsi:type-attribute, ready to be used as tag ...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>xml</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a217d51d9b40673b5009665c3923b12a6</Anchor>
    <Abstract>Return an XML representation of the object.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributeNames</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a6b32a6cd314574c9ba03e188722bd7ea</Anchor>
    <Abstract>The properties whose names are returned here are expected to be XML node attributes rather than compl...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flatXMLNameForPropertyName:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a045def193f53f5547de4d27cb594eccc</Anchor>
    <Abstract>Objects have the ability to use a different name from the property name for flat XML &amp;quot;name&amp;quot; attribute...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>newWithNodeName:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>aeed9099cc8ad55d64b1b3225365b48e0</Anchor>
    <Abstract>Returns a fresh node with nodeName set.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeName</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a884c5eedff050615b24d1a8b6866631f</Anchor>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeType</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a442303ee5dee7d6a24013da204753aec</Anchor>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>objectFromAttribute:inNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a499c48080c52224d6e7650c7d7fa9ab8</Anchor>
    <Abstract>This method returns an object created from the string contents of a node attribute.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>objectFromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ad6122063a8025ee62db1469397527b5d</Anchor>
    <Abstract>This method returns an object created representing the the node.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_nodeName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ade43c92af65af424ab16f717ad4d8287</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>INAnyURI</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>INAnyURI</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_any_u_r_i.html</Path>
    <Abstract>A class to represent &amp;quot;xs:anyURI&amp;quot; elements.</Abstract>
    <DeclaredIn>INAnyURI.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>newWithURIString:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INAnyURI</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_any_u_r_i.html</Path>
    <Anchor>ac246edf088cfbeae94f56ef79f0aaa86</Anchor>
    <DeclaredIn>INAnyURI.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributeNames</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a6b32a6cd314574c9ba03e188722bd7ea</Anchor>
    <Abstract>The properties whose names are returned here are expected to be XML node attributes rather than compl...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flatXMLNameForPropertyName:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a045def193f53f5547de4d27cb594eccc</Anchor>
    <Abstract>Objects have the ability to use a different name from the property name for flat XML &amp;quot;name&amp;quot; attribute...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>newWithNodeName:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>aeed9099cc8ad55d64b1b3225365b48e0</Anchor>
    <Abstract>Returns a fresh node with nodeName set.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeName</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a884c5eedff050615b24d1a8b6866631f</Anchor>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeType</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a442303ee5dee7d6a24013da204753aec</Anchor>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>objectFromAttribute:inNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a499c48080c52224d6e7650c7d7fa9ab8</Anchor>
    <Abstract>This method returns an object created from the string contents of a node attribute.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>objectFromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ad6122063a8025ee62db1469397527b5d</Anchor>
    <Abstract>This method returns an object created representing the the node.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uri</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INAnyURI</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_any_u_r_i.html</Path>
    <Anchor>a53a2b8afec9413f323a3ab8d4b0e2e02</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mustDeclareType</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a728fb03d744e577a283abd8de40f963f</Anchor>
    <Abstract>NO by default. If YES, the XML output should contain &amp;quot;xsi:type&amp;quot;.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeName</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a973a63722bd2a9ff7637f47530f04d36</Anchor>
    <Abstract>The object&amp;#39;s nodeName.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeType</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a771138093fcd1db3243a4b8c5b8cf04e</Anchor>
    <Abstract>The type, e.g. &amp;quot;indivo:ValueAndUnit&amp;quot; or &amp;quot;xs:date&amp;quot;.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>asAttribute</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a75c5d68b06350558099044ce3a9d699e</Anchor>
    <Abstract>Returns the value of this node usable as attribute to another node.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributeValue</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a9709e6fee409dd3f7807e8221b5e69e4</Anchor>
    <Abstract>Returns the string that goes into the attribute value.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flatXMLPartsWithPrefix:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ab13beda92d1082fbdd10a3b21c4cfbb7</Anchor>
    <Abstract>Indivo 2.0&amp;#39;s ugly flat XML format needs this.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initFromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>adeead863b5cfa8a5d5e67b972856548b</Anchor>
    <Abstract>The designated initializer.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>innerXML</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>abd3cd1007fc6a53c021c768d8683f59c</Anchor>
    <Abstract>Returns the XML of all child nodes.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNull</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a6e7a7b930974303ba1b8ac4991967d24</Anchor>
    <Abstract>An object can decide that it is null, i.e.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFromFlatParent:prefix:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a1eb0c99c8d591f3a58b588363e4d2565</Anchor>
    <Abstract>Handling incoming Indivo 2.0 flat XML IndivoAbstractDocument, a subclass of INObject, uses a slightly more diverse implementation of this method.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ad4932e0b05bc9d5ef23b89b8d4509400</Anchor>
    <Abstract>The INObject implementation sets the node name and node type (if a &amp;quot;type&amp;quot; attribute is found in the X...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWithAttr:fromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>af329d1bf14adb4c69f32148c418ca4cb</Anchor>
    <Abstract>Tries to interpret the attribute string as representing our value.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tagString</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a6526a4c774e928adecf4d0efad4758ee</Anchor>
    <Abstract>Returns the tag name and, if mustDeclareType is YES, the xsi:type-attribute, ready to be used as tag ...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>xml</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a217d51d9b40673b5009665c3923b12a6</Anchor>
    <Abstract>Return an XML representation of the object.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_nodeName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ade43c92af65af424ab16f717ad4d8287</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>INAttr</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>INAttr</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_attr.html</Path>
    <DeclaredIn>INAttr.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attr:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INAttr</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_attr.html</Path>
    <Anchor>a6ff7cbd7f336bbe33c17da8790b4baee</Anchor>
    <DeclaredIn>INAttr.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>asAttribute</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a75c5d68b06350558099044ce3a9d699e</Anchor>
    <Abstract>Returns the value of this node usable as attribute to another node.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributeValue</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a9709e6fee409dd3f7807e8221b5e69e4</Anchor>
    <Abstract>Returns the string that goes into the attribute value.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flatXMLPartsWithPrefix:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ab13beda92d1082fbdd10a3b21c4cfbb7</Anchor>
    <Abstract>Indivo 2.0&amp;#39;s ugly flat XML format needs this.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initFromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>adeead863b5cfa8a5d5e67b972856548b</Anchor>
    <Abstract>The designated initializer.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>innerXML</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>abd3cd1007fc6a53c021c768d8683f59c</Anchor>
    <Abstract>Returns the XML of all child nodes.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNull</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a6e7a7b930974303ba1b8ac4991967d24</Anchor>
    <Abstract>An object can decide that it is null, i.e.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFromFlatParent:prefix:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a1eb0c99c8d591f3a58b588363e4d2565</Anchor>
    <Abstract>Handling incoming Indivo 2.0 flat XML IndivoAbstractDocument, a subclass of INObject, uses a slightly more diverse implementation of this method.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ad4932e0b05bc9d5ef23b89b8d4509400</Anchor>
    <Abstract>The INObject implementation sets the node name and node type (if a &amp;quot;type&amp;quot; attribute is found in the X...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWithAttr:fromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>af329d1bf14adb4c69f32148c418ca4cb</Anchor>
    <Abstract>Tries to interpret the attribute string as representing our value.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tagString</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a6526a4c774e928adecf4d0efad4758ee</Anchor>
    <Abstract>Returns the tag name and, if mustDeclareType is YES, the xsi:type-attribute, ready to be used as tag ...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>xml</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a217d51d9b40673b5009665c3923b12a6</Anchor>
    <Abstract>Return an XML representation of the object.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributes</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INAttr</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_attr.html</Path>
    <Anchor>a7ab50e834ec0d31ebc7f9ef8d81e284a</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mustDeclareType</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a728fb03d744e577a283abd8de40f963f</Anchor>
    <Abstract>NO by default. If YES, the XML output should contain &amp;quot;xsi:type&amp;quot;.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeName</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a973a63722bd2a9ff7637f47530f04d36</Anchor>
    <Abstract>The object&amp;#39;s nodeName.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeType</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a771138093fcd1db3243a4b8c5b8cf04e</Anchor>
    <Abstract>The type, e.g. &amp;quot;indivo:ValueAndUnit&amp;quot; or &amp;quot;xs:date&amp;quot;.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributeNames</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a6b32a6cd314574c9ba03e188722bd7ea</Anchor>
    <Abstract>The properties whose names are returned here are expected to be XML node attributes rather than compl...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flatXMLNameForPropertyName:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a045def193f53f5547de4d27cb594eccc</Anchor>
    <Abstract>Objects have the ability to use a different name from the property name for flat XML &amp;quot;name&amp;quot; attribute...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>newWithNodeName:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>aeed9099cc8ad55d64b1b3225365b48e0</Anchor>
    <Abstract>Returns a fresh node with nodeName set.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeName</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a884c5eedff050615b24d1a8b6866631f</Anchor>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeType</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a442303ee5dee7d6a24013da204753aec</Anchor>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>objectFromAttribute:inNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a499c48080c52224d6e7650c7d7fa9ab8</Anchor>
    <Abstract>This method returns an object created from the string contents of a node attribute.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>objectFromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ad6122063a8025ee62db1469397527b5d</Anchor>
    <Abstract>This method returns an object created representing the the node.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_nodeName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ade43c92af65af424ab16f717ad4d8287</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>INBloodPressure</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>INBloodPressure</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_blood_pressure.html</Path>
    <DeclaredIn>INBloodPressure.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>diastolic</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INBloodPressure</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_blood_pressure.html</Path>
    <Anchor>ad61679d3c0adb314a18e46e32f2646c7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>method</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INBloodPressure</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_blood_pressure.html</Path>
    <Anchor>ad5cc265aa3757e6102dec06174f7c5ec</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>position</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INBloodPressure</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_blood_pressure.html</Path>
    <Anchor>ae6c6485595cb0cf8a17289752d1ee0a9</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>site</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INBloodPressure</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_blood_pressure.html</Path>
    <Anchor>a9590b4b24eaa5f0d032c4ae057b72014</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>systolic</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INBloodPressure</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_blood_pressure.html</Path>
    <Anchor>ab7843c87caf016a1a31956591233d002</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>asAttribute</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a75c5d68b06350558099044ce3a9d699e</Anchor>
    <Abstract>Returns the value of this node usable as attribute to another node.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributeValue</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a9709e6fee409dd3f7807e8221b5e69e4</Anchor>
    <Abstract>Returns the string that goes into the attribute value.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flatXMLPartsWithPrefix:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ab13beda92d1082fbdd10a3b21c4cfbb7</Anchor>
    <Abstract>Indivo 2.0&amp;#39;s ugly flat XML format needs this.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initFromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>adeead863b5cfa8a5d5e67b972856548b</Anchor>
    <Abstract>The designated initializer.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>innerXML</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>abd3cd1007fc6a53c021c768d8683f59c</Anchor>
    <Abstract>Returns the XML of all child nodes.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNull</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a6e7a7b930974303ba1b8ac4991967d24</Anchor>
    <Abstract>An object can decide that it is null, i.e.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFromFlatParent:prefix:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a1eb0c99c8d591f3a58b588363e4d2565</Anchor>
    <Abstract>Handling incoming Indivo 2.0 flat XML IndivoAbstractDocument, a subclass of INObject, uses a slightly more diverse implementation of this method.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ad4932e0b05bc9d5ef23b89b8d4509400</Anchor>
    <Abstract>The INObject implementation sets the node name and node type (if a &amp;quot;type&amp;quot; attribute is found in the X...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWithAttr:fromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>af329d1bf14adb4c69f32148c418ca4cb</Anchor>
    <Abstract>Tries to interpret the attribute string as representing our value.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tagString</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a6526a4c774e928adecf4d0efad4758ee</Anchor>
    <Abstract>Returns the tag name and, if mustDeclareType is YES, the xsi:type-attribute, ready to be used as tag ...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>xml</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a217d51d9b40673b5009665c3923b12a6</Anchor>
    <Abstract>Return an XML representation of the object.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributeNames</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a6b32a6cd314574c9ba03e188722bd7ea</Anchor>
    <Abstract>The properties whose names are returned here are expected to be XML node attributes rather than compl...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flatXMLNameForPropertyName:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a045def193f53f5547de4d27cb594eccc</Anchor>
    <Abstract>Objects have the ability to use a different name from the property name for flat XML &amp;quot;name&amp;quot; attribute...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>newWithNodeName:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>aeed9099cc8ad55d64b1b3225365b48e0</Anchor>
    <Abstract>Returns a fresh node with nodeName set.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeName</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a884c5eedff050615b24d1a8b6866631f</Anchor>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeType</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a442303ee5dee7d6a24013da204753aec</Anchor>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>objectFromAttribute:inNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a499c48080c52224d6e7650c7d7fa9ab8</Anchor>
    <Abstract>This method returns an object created from the string contents of a node attribute.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>objectFromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ad6122063a8025ee62db1469397527b5d</Anchor>
    <Abstract>This method returns an object created representing the the node.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_nodeName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ade43c92af65af424ab16f717ad4d8287</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>INBool</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>INBool</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_bool.html</Path>
    <DeclaredIn>INBool.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>newNo</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INBool</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_bool.html</Path>
    <Anchor>ab67523dea49504a9c20f071c46599749</Anchor>
    <DeclaredIn>INBool.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>newYes</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INBool</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_bool.html</Path>
    <Anchor>a4e74f8c76cb1904974bdfd9b51f75e7a</Anchor>
    <DeclaredIn>INBool.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributeNames</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a6b32a6cd314574c9ba03e188722bd7ea</Anchor>
    <Abstract>The properties whose names are returned here are expected to be XML node attributes rather than compl...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flatXMLNameForPropertyName:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a045def193f53f5547de4d27cb594eccc</Anchor>
    <Abstract>Objects have the ability to use a different name from the property name for flat XML &amp;quot;name&amp;quot; attribute...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>newWithNodeName:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>aeed9099cc8ad55d64b1b3225365b48e0</Anchor>
    <Abstract>Returns a fresh node with nodeName set.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeName</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a884c5eedff050615b24d1a8b6866631f</Anchor>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeType</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a442303ee5dee7d6a24013da204753aec</Anchor>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>objectFromAttribute:inNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a499c48080c52224d6e7650c7d7fa9ab8</Anchor>
    <Abstract>This method returns an object created from the string contents of a node attribute.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>objectFromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ad6122063a8025ee62db1469397527b5d</Anchor>
    <Abstract>This method returns an object created representing the the node.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flag</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INBool</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_bool.html</Path>
    <Anchor>ad3325eaeb2c7ef174276bd40335474ad</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mustDeclareType</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a728fb03d744e577a283abd8de40f963f</Anchor>
    <Abstract>NO by default. If YES, the XML output should contain &amp;quot;xsi:type&amp;quot;.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeName</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a973a63722bd2a9ff7637f47530f04d36</Anchor>
    <Abstract>The object&amp;#39;s nodeName.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeType</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a771138093fcd1db3243a4b8c5b8cf04e</Anchor>
    <Abstract>The type, e.g. &amp;quot;indivo:ValueAndUnit&amp;quot; or &amp;quot;xs:date&amp;quot;.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>asAttribute</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a75c5d68b06350558099044ce3a9d699e</Anchor>
    <Abstract>Returns the value of this node usable as attribute to another node.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributeValue</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a9709e6fee409dd3f7807e8221b5e69e4</Anchor>
    <Abstract>Returns the string that goes into the attribute value.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flatXMLPartsWithPrefix:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ab13beda92d1082fbdd10a3b21c4cfbb7</Anchor>
    <Abstract>Indivo 2.0&amp;#39;s ugly flat XML format needs this.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initFromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>adeead863b5cfa8a5d5e67b972856548b</Anchor>
    <Abstract>The designated initializer.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>innerXML</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>abd3cd1007fc6a53c021c768d8683f59c</Anchor>
    <Abstract>Returns the XML of all child nodes.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNull</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a6e7a7b930974303ba1b8ac4991967d24</Anchor>
    <Abstract>An object can decide that it is null, i.e.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFromFlatParent:prefix:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a1eb0c99c8d591f3a58b588363e4d2565</Anchor>
    <Abstract>Handling incoming Indivo 2.0 flat XML IndivoAbstractDocument, a subclass of INObject, uses a slightly more diverse implementation of this method.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ad4932e0b05bc9d5ef23b89b8d4509400</Anchor>
    <Abstract>The INObject implementation sets the node name and node type (if a &amp;quot;type&amp;quot; attribute is found in the X...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWithAttr:fromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>af329d1bf14adb4c69f32148c418ca4cb</Anchor>
    <Abstract>Tries to interpret the attribute string as representing our value.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tagString</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a6526a4c774e928adecf4d0efad4758ee</Anchor>
    <Abstract>Returns the tag name and, if mustDeclareType is YES, the xsi:type-attribute, ready to be used as tag ...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>xml</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a217d51d9b40673b5009665c3923b12a6</Anchor>
    <Abstract>Return an XML representation of the object.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_nodeName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ade43c92af65af424ab16f717ad4d8287</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>INClassGenerator</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>INClassGenerator</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_class_generator.html</Path>
    <Abstract>A class that can generate Objective-C classes from Indivo XML schemas.</Abstract>
    <DeclaredIn>INClassGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ignoresType:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INClassGenerator</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_class_generator.html</Path>
    <Anchor>a13c54f94794e5050835cdec489a1c9cb</Anchor>
    <DeclaredIn>INClassGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>runFrom:into:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INClassGenerator</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_class_generator.html</Path>
    <Anchor>a6dbce024e3f3073f63afdc335ac3c05e</Anchor>
    <Abstract>Run all the XSD schemas we find.</Abstract>
    <DeclaredIn>INClassGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>schemaParser:classNameForType:effectiveType:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>INSchemaParserDelegate-p</Scope>
    </TokenIdentifier>
    <Path>protocol_i_n_schema_parser_delegate-p.html</Path>
    <Anchor>a38fbced08cd26548b419aca834790e45</Anchor>
    <DeclaredIn>INSchemaParser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>schemaParser:didParseClass:forName:superclass:forType:properties:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>INSchemaParserDelegate-p</Scope>
    </TokenIdentifier>
    <Path>protocol_i_n_schema_parser_delegate-p.html</Path>
    <Anchor>a4086fc82416e2ff9c96e279ae3a13df4</Anchor>
    <DeclaredIn>INSchemaParser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>schemaParser:existingClassNameForType:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>INSchemaParserDelegate-p</Scope>
    </TokenIdentifier>
    <Path>protocol_i_n_schema_parser_delegate-p.html</Path>
    <Anchor>a5486b9ca92a6f0d4a807ab6d07598cdd</Anchor>
    <DeclaredIn>INSchemaParser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>schemaParser:isProcessingFileAtPath:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>INSchemaParserDelegate-p</Scope>
    </TokenIdentifier>
    <Path>protocol_i_n_schema_parser_delegate-p.html</Path>
    <Anchor>a54d8a4650a43d1b0e959990fdde073fa</Anchor>
    <DeclaredIn>INSchemaParser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>schemaParser:sendsMessage:ofType:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>INSchemaParserDelegate-p</Scope>
    </TokenIdentifier>
    <Path>protocol_i_n_schema_parser_delegate-p.html</Path>
    <Anchor>acb63ee1454186095beb2cbd3bb9fd098</Anchor>
    <DeclaredIn>INSchemaParser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applySubstitutions:toTemplate:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INClassGenerator</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_class_generator.html</Path>
    <Anchor>a66e355f6c40dc6236f982a24b24131fe</Anchor>
    <Abstract>This method applies substitutions found in a dictionary to a template.</Abstract>
    <DeclaredIn>INClassGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyToBodyTemplate:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INClassGenerator</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_class_generator.html</Path>
    <Anchor>aea678e74d681931b5fd21d0ed2b6b1a3</Anchor>
    <DeclaredIn>INClassGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyToHeaderTemplate:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INClassGenerator</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_class_generator.html</Path>
    <Anchor>a00ff9c53c0cfaeeab78849b828859e2c</Anchor>
    <DeclaredIn>INClassGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mayOverwriteExisting</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INClassGenerator</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_class_generator.html</Path>
    <Anchor>a27656569cfc80c94c86f3197edc0ba77</Anchor>
    <Abstract>NO by default, if YES will overwrite existing classes.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numClassesGenerated</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INClassGenerator</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_class_generator.html</Path>
    <Anchor>a5a66384bcb17ca20e2ef655e7ba71e5c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numClassesNotOverwritten</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INClassGenerator</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_class_generator.html</Path>
    <Anchor>a6699a4c9a967a0cb3e7cf4f9cf0a2d1a</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numSchemasParsed</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INClassGenerator</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_class_generator.html</Path>
    <Anchor>a86b9c5b9cb3a51d8f7c2c0ef89d6ffff</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>INCodedValue</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>INCodedValue</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_coded_value.html</Path>
    <Abstract>Represents an &amp;quot;indivo:CodedValue&amp;quot; XML node.</Abstract>
    <DeclaredIn>INCodedValue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>identifier</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INCodedValue</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_coded_value.html</Path>
    <Anchor>a5cde986d9cda07c9a82cc7f8bf4332ee</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>system</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INCodedValue</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_coded_value.html</Path>
    <Anchor>a5bf5dcc90fa312e9047ece1f8e667275</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>title</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INCodedValue</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_coded_value.html</Path>
    <Anchor>ab389ba6b024461ccad28fb0a55808c0b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>asAttribute</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a75c5d68b06350558099044ce3a9d699e</Anchor>
    <Abstract>Returns the value of this node usable as attribute to another node.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributeValue</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a9709e6fee409dd3f7807e8221b5e69e4</Anchor>
    <Abstract>Returns the string that goes into the attribute value.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flatXMLPartsWithPrefix:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ab13beda92d1082fbdd10a3b21c4cfbb7</Anchor>
    <Abstract>Indivo 2.0&amp;#39;s ugly flat XML format needs this.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initFromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>adeead863b5cfa8a5d5e67b972856548b</Anchor>
    <Abstract>The designated initializer.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>innerXML</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>abd3cd1007fc6a53c021c768d8683f59c</Anchor>
    <Abstract>Returns the XML of all child nodes.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNull</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a6e7a7b930974303ba1b8ac4991967d24</Anchor>
    <Abstract>An object can decide that it is null, i.e.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFromFlatParent:prefix:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a1eb0c99c8d591f3a58b588363e4d2565</Anchor>
    <Abstract>Handling incoming Indivo 2.0 flat XML IndivoAbstractDocument, a subclass of INObject, uses a slightly more diverse implementation of this method.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ad4932e0b05bc9d5ef23b89b8d4509400</Anchor>
    <Abstract>The INObject implementation sets the node name and node type (if a &amp;quot;type&amp;quot; attribute is found in the X...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWithAttr:fromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>af329d1bf14adb4c69f32148c418ca4cb</Anchor>
    <Abstract>Tries to interpret the attribute string as representing our value.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tagString</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a6526a4c774e928adecf4d0efad4758ee</Anchor>
    <Abstract>Returns the tag name and, if mustDeclareType is YES, the xsi:type-attribute, ready to be used as tag ...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>xml</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a217d51d9b40673b5009665c3923b12a6</Anchor>
    <Abstract>Return an XML representation of the object.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributeNames</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a6b32a6cd314574c9ba03e188722bd7ea</Anchor>
    <Abstract>The properties whose names are returned here are expected to be XML node attributes rather than compl...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flatXMLNameForPropertyName:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a045def193f53f5547de4d27cb594eccc</Anchor>
    <Abstract>Objects have the ability to use a different name from the property name for flat XML &amp;quot;name&amp;quot; attribute...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>newWithNodeName:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>aeed9099cc8ad55d64b1b3225365b48e0</Anchor>
    <Abstract>Returns a fresh node with nodeName set.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeName</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a884c5eedff050615b24d1a8b6866631f</Anchor>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeType</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a442303ee5dee7d6a24013da204753aec</Anchor>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>objectFromAttribute:inNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a499c48080c52224d6e7650c7d7fa9ab8</Anchor>
    <Abstract>This method returns an object created from the string contents of a node attribute.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>objectFromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ad6122063a8025ee62db1469397527b5d</Anchor>
    <Abstract>This method returns an object created representing the the node.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_nodeName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ade43c92af65af424ab16f717ad4d8287</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>INDate</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>INDate</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_date.html</Path>
    <Abstract>Represents &amp;quot;xs:date&amp;quot; elements.</Abstract>
    <DeclaredIn>INDate.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isoString</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INDate</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_date.html</Path>
    <Anchor>a6924e320b6a22e1a714a308313bdafc4</Anchor>
    <DeclaredIn>INDate.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>asAttribute</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a75c5d68b06350558099044ce3a9d699e</Anchor>
    <Abstract>Returns the value of this node usable as attribute to another node.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributeValue</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a9709e6fee409dd3f7807e8221b5e69e4</Anchor>
    <Abstract>Returns the string that goes into the attribute value.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flatXMLPartsWithPrefix:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ab13beda92d1082fbdd10a3b21c4cfbb7</Anchor>
    <Abstract>Indivo 2.0&amp;#39;s ugly flat XML format needs this.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initFromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>adeead863b5cfa8a5d5e67b972856548b</Anchor>
    <Abstract>The designated initializer.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>innerXML</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>abd3cd1007fc6a53c021c768d8683f59c</Anchor>
    <Abstract>Returns the XML of all child nodes.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNull</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a6e7a7b930974303ba1b8ac4991967d24</Anchor>
    <Abstract>An object can decide that it is null, i.e.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFromFlatParent:prefix:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a1eb0c99c8d591f3a58b588363e4d2565</Anchor>
    <Abstract>Handling incoming Indivo 2.0 flat XML IndivoAbstractDocument, a subclass of INObject, uses a slightly more diverse implementation of this method.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ad4932e0b05bc9d5ef23b89b8d4509400</Anchor>
    <Abstract>The INObject implementation sets the node name and node type (if a &amp;quot;type&amp;quot; attribute is found in the X...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWithAttr:fromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>af329d1bf14adb4c69f32148c418ca4cb</Anchor>
    <Abstract>Tries to interpret the attribute string as representing our value.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tagString</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a6526a4c774e928adecf4d0efad4758ee</Anchor>
    <Abstract>Returns the tag name and, if mustDeclareType is YES, the xsi:type-attribute, ready to be used as tag ...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>xml</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a217d51d9b40673b5009665c3923b12a6</Anchor>
    <Abstract>Return an XML representation of the object.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dateFromISOString:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INDate</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_date.html</Path>
    <Anchor>a5e4d10deb4fe72a1b246f361be4fce53</Anchor>
    <Abstract>Allocate and initialize an INDate instance from a date string.</Abstract>
    <DeclaredIn>INDate.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dateWithDate:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INDate</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_date.html</Path>
    <Anchor>ab3231d988353e8d5a2049576785d79fd</Anchor>
    <Abstract>Allocate and initialize an INDate from an NSDate.</Abstract>
    <DeclaredIn>INDate.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isoStringFrom:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INDate</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_date.html</Path>
    <Anchor>a3e4253d79285e8785195bbd48613ef83</Anchor>
    <DeclaredIn>INDate.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>now</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INDate</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_date.html</Path>
    <Anchor>a7a819d14a39d162fa14be4d3181eccfb</Anchor>
    <DeclaredIn>INDate.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parseDateFromISOString:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INDate</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_date.html</Path>
    <Anchor>a227a63d1d0f905b40fc45ce2f966445c</Anchor>
    <DeclaredIn>INDate.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributeNames</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a6b32a6cd314574c9ba03e188722bd7ea</Anchor>
    <Abstract>The properties whose names are returned here are expected to be XML node attributes rather than compl...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flatXMLNameForPropertyName:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a045def193f53f5547de4d27cb594eccc</Anchor>
    <Abstract>Objects have the ability to use a different name from the property name for flat XML &amp;quot;name&amp;quot; attribute...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>newWithNodeName:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>aeed9099cc8ad55d64b1b3225365b48e0</Anchor>
    <Abstract>Returns a fresh node with nodeName set.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeName</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a884c5eedff050615b24d1a8b6866631f</Anchor>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeType</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a442303ee5dee7d6a24013da204753aec</Anchor>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>objectFromAttribute:inNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a499c48080c52224d6e7650c7d7fa9ab8</Anchor>
    <Abstract>This method returns an object created from the string contents of a node attribute.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>objectFromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ad6122063a8025ee62db1469397527b5d</Anchor>
    <Abstract>This method returns an object created representing the the node.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>date</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INDate</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_date.html</Path>
    <Anchor>a24587fe311d4a0294273e8e97e298fb1</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mustDeclareType</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a728fb03d744e577a283abd8de40f963f</Anchor>
    <Abstract>NO by default. If YES, the XML output should contain &amp;quot;xsi:type&amp;quot;.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeName</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a973a63722bd2a9ff7637f47530f04d36</Anchor>
    <Abstract>The object&amp;#39;s nodeName.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeType</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a771138093fcd1db3243a4b8c5b8cf04e</Anchor>
    <Abstract>The type, e.g. &amp;quot;indivo:ValueAndUnit&amp;quot; or &amp;quot;xs:date&amp;quot;.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_nodeName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ade43c92af65af424ab16f717ad4d8287</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>INDateRangeFormatter</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>INDateRangeFormatter</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_date_range_formatter.html</Path>
    <Abstract>This class tries to find the best display format for a date range.</Abstract>
    <DeclaredIn>INDateRangeFormatter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>formattedRange</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INDateRangeFormatter</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_date_range_formatter.html</Path>
    <Anchor>ab69f543eed444126d9bf2fd27dd44e34</Anchor>
    <Abstract>Calls &amp;quot;formattedRangeForMaxWith:withFont:&amp;quot; with a width of CGFLOAT_MAX and no font.</Abstract>
    <DeclaredIn>INDateRangeFormatter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>formattedRangeForLabel:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INDateRangeFormatter</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_date_range_formatter.html</Path>
    <Anchor>a7c5545f7b4a030b2c7e7426062a32b06</Anchor>
    <Abstract>Calls &amp;quot;formattedRangeForMaxWidth:withFont:&amp;quot; with the label&amp;#39;s bounds and font.</Abstract>
    <DeclaredIn>INDateRangeFormatter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>formattedRangeForMaxWidth:withFont:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INDateRangeFormatter</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_date_range_formatter.html</Path>
    <Anchor>a17f39d083ed8839c73c0ac61e178d553</Anchor>
    <Abstract>Formats the date range according to the given dates and tries to find the optimal format to fit into ...</Abstract>
    <DeclaredIn>INDateRangeFormatter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rangeFormatterFrom:to:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INDateRangeFormatter</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_date_range_formatter.html</Path>
    <Anchor>aa3cb2ad381d0e10cfb741ce7738abaa3</Anchor>
    <DeclaredIn>INDateRangeFormatter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>from</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INDateRangeFormatter</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_date_range_formatter.html</Path>
    <Anchor>add75f386a07c9f066222dd64ba39fcb6</Anchor>
    <Abstract>The range start date, may be nil.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>locale</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INDateRangeFormatter</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_date_range_formatter.html</Path>
    <Anchor>a0a76207d9cf859813fa281c90c1b2f9d</Anchor>
    <Abstract>Defaults to current locale.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sinceString</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INDateRangeFormatter</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_date_range_formatter.html</Path>
    <Anchor>a354207d0437c9da7820d155f71bb193e</Anchor>
    <Abstract>Defaults to &amp;quot;Since&amp;quot;, used if no &amp;quot;to&amp;quot; date is given.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>to</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INDateRangeFormatter</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_date_range_formatter.html</Path>
    <Anchor>ae4de6808ffdd2906e96ce5cf4f77e5ad</Anchor>
    <Abstract>The range end date, may be nil.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>untilString</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INDateRangeFormatter</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_date_range_formatter.html</Path>
    <Anchor>ae62e40f00f098891f34367654a46b67e</Anchor>
    <Abstract>Defaults to &amp;quot;Until&amp;quot;, used if no &amp;quot;from&amp;quot; date is given.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>INDateRangeFormatterTest</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>INDateRangeFormatterTest</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_date_range_formatter_test.html</Path>
    <DeclaredIn>INDateRangeFormatterTest.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>INDateTime</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>INDateTime</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_date_time.html</Path>
    <Abstract>An &amp;quot;xs:dateTime&amp;quot; representing object, note that it currently always returns UTC time zone...</Abstract>
    <DeclaredIn>INDateTime.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isoString</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INDate</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_date.html</Path>
    <Anchor>a6924e320b6a22e1a714a308313bdafc4</Anchor>
    <DeclaredIn>INDate.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dateFromISOString:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INDate</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_date.html</Path>
    <Anchor>a5e4d10deb4fe72a1b246f361be4fce53</Anchor>
    <Abstract>Allocate and initialize an INDate instance from a date string.</Abstract>
    <DeclaredIn>INDate.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dateWithDate:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INDate</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_date.html</Path>
    <Anchor>ab3231d988353e8d5a2049576785d79fd</Anchor>
    <Abstract>Allocate and initialize an INDate from an NSDate.</Abstract>
    <DeclaredIn>INDate.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isoStringFrom:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INDate</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_date.html</Path>
    <Anchor>a3e4253d79285e8785195bbd48613ef83</Anchor>
    <DeclaredIn>INDate.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>now</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INDate</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_date.html</Path>
    <Anchor>a7a819d14a39d162fa14be4d3181eccfb</Anchor>
    <DeclaredIn>INDate.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parseDateFromISOString:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INDate</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_date.html</Path>
    <Anchor>a227a63d1d0f905b40fc45ce2f966445c</Anchor>
    <DeclaredIn>INDate.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_nodeName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ade43c92af65af424ab16f717ad4d8287</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>date</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INDate</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_date.html</Path>
    <Anchor>a24587fe311d4a0294273e8e97e298fb1</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>INDecimal</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>INDecimal</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_decimal.html</Path>
    <Abstract>Can represent any numerical node but specifically represents &amp;quot;xs:decimal&amp;quot;.</Abstract>
    <DeclaredIn>INDecimal.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>newWithDouble:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INDecimal</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_decimal.html</Path>
    <Anchor>a585c6eecad11f25ff3fb38d3291077bb</Anchor>
    <DeclaredIn>INDecimal.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributeNames</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a6b32a6cd314574c9ba03e188722bd7ea</Anchor>
    <Abstract>The properties whose names are returned here are expected to be XML node attributes rather than compl...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flatXMLNameForPropertyName:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a045def193f53f5547de4d27cb594eccc</Anchor>
    <Abstract>Objects have the ability to use a different name from the property name for flat XML &amp;quot;name&amp;quot; attribute...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>newWithNodeName:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>aeed9099cc8ad55d64b1b3225365b48e0</Anchor>
    <Abstract>Returns a fresh node with nodeName set.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeName</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a884c5eedff050615b24d1a8b6866631f</Anchor>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeType</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a442303ee5dee7d6a24013da204753aec</Anchor>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>objectFromAttribute:inNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a499c48080c52224d6e7650c7d7fa9ab8</Anchor>
    <Abstract>This method returns an object created from the string contents of a node attribute.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>objectFromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ad6122063a8025ee62db1469397527b5d</Anchor>
    <Abstract>This method returns an object created representing the the node.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>number</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INDecimal</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_decimal.html</Path>
    <Anchor>a69d5a1b1343c89f7bee1c8dcd0e5d4e8</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mustDeclareType</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a728fb03d744e577a283abd8de40f963f</Anchor>
    <Abstract>NO by default. If YES, the XML output should contain &amp;quot;xsi:type&amp;quot;.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeName</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a973a63722bd2a9ff7637f47530f04d36</Anchor>
    <Abstract>The object&amp;#39;s nodeName.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeType</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a771138093fcd1db3243a4b8c5b8cf04e</Anchor>
    <Abstract>The type, e.g. &amp;quot;indivo:ValueAndUnit&amp;quot; or &amp;quot;xs:date&amp;quot;.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>asAttribute</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a75c5d68b06350558099044ce3a9d699e</Anchor>
    <Abstract>Returns the value of this node usable as attribute to another node.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributeValue</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a9709e6fee409dd3f7807e8221b5e69e4</Anchor>
    <Abstract>Returns the string that goes into the attribute value.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flatXMLPartsWithPrefix:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ab13beda92d1082fbdd10a3b21c4cfbb7</Anchor>
    <Abstract>Indivo 2.0&amp;#39;s ugly flat XML format needs this.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initFromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>adeead863b5cfa8a5d5e67b972856548b</Anchor>
    <Abstract>The designated initializer.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>innerXML</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>abd3cd1007fc6a53c021c768d8683f59c</Anchor>
    <Abstract>Returns the XML of all child nodes.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNull</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a6e7a7b930974303ba1b8ac4991967d24</Anchor>
    <Abstract>An object can decide that it is null, i.e.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFromFlatParent:prefix:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a1eb0c99c8d591f3a58b588363e4d2565</Anchor>
    <Abstract>Handling incoming Indivo 2.0 flat XML IndivoAbstractDocument, a subclass of INObject, uses a slightly more diverse implementation of this method.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ad4932e0b05bc9d5ef23b89b8d4509400</Anchor>
    <Abstract>The INObject implementation sets the node name and node type (if a &amp;quot;type&amp;quot; attribute is found in the X...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWithAttr:fromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>af329d1bf14adb4c69f32148c418ca4cb</Anchor>
    <Abstract>Tries to interpret the attribute string as representing our value.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tagString</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a6526a4c774e928adecf4d0efad4758ee</Anchor>
    <Abstract>Returns the tag name and, if mustDeclareType is YES, the xsi:type-attribute, ready to be used as tag ...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>xml</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a217d51d9b40673b5009665c3923b12a6</Anchor>
    <Abstract>Return an XML representation of the object.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_nodeName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ade43c92af65af424ab16f717ad4d8287</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IndivoAbstractDocument</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Abstract>An abstract superclass to all Indivo Documents as well as Indivo Metadata.</Abstract>
    <DeclaredIn>IndivoAbstractDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>documentXML</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>acfa5997948281762df57fdf9bd0ffdaf</Anchor>
    <Abstract>Returns an XML representation of the receiver, like &amp;quot;xml&amp;quot; does, but adds namespace information...</Abstract>
    <DeclaredIn>IndivoAbstractDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flatDocumentXML</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a0fd5635c7261e8b7e889bd6edd48f482</Anchor>
    <Abstract>Returns the Indivo 2.0 flat XML format for a document.</Abstract>
    <DeclaredIn>IndivoAbstractDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flatXML</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a42554fdf26af89d9bcba86b7a44d7d32</Anchor>
    <Abstract>Returns the Indivo 2.0 flat XML format.</Abstract>
    <DeclaredIn>IndivoAbstractDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initFromNode:forRecord:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a38b0b76a05b7258de71ae71eca82a9d2</Anchor>
    <Abstract>The designated initializer, initializes an instance from an XML node.</Abstract>
    <DeclaredIn>IndivoAbstractDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>forceNotOnServer</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>ac274479305ae9b3f49c9dd24572afe96</Anchor>
    <Abstract>This is provided for subclasses, the fact that onServer is readonly but settable by this and markOnSe...</Abstract>
    <DeclaredIn>INServerObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a45970634b7aa5f86e7479c1599a7d98c</Anchor>
    <Abstract>Shortcut for GETting data.</Abstract>
    <DeclaredIn>INServerObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get:parameters:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a17f98bd457ac77a451c6b730f97beae2</Anchor>
    <Abstract>Shortcut for GETting data with parameters.</Abstract>
    <DeclaredIn>INServerObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initFromNode:withServer:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a4828394e023d6346442ec59512198300</Anchor>
    <Abstract>The designated initializer.</Abstract>
    <DeclaredIn>INServerObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a40df090a1813e6d965efce8fbf58295e</Anchor>
    <Abstract>Shortcut method to test if the document has the given ID.</Abstract>
    <DeclaredIn>INServerObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>markOnServer</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a08067a7fd061216248615f841984c608</Anchor>
    <Abstract>Sets onServer to YES for the receiver.</Abstract>
    <DeclaredIn>INServerObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>performMethod:withBody:orParameters:httpMethod:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a3e995d3df3fe4fb6769f63d4f3c6e216</Anchor>
    <Abstract>The basic method to perform REST methods on the server with App credentials.</Abstract>
    <DeclaredIn>INServerObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>post:body:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a7b1df3e6eb0a567205156e9826a7d0c0</Anchor>
    <Abstract>Shortcut for POSTing body data.</Abstract>
    <DeclaredIn>INServerObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>post:parameters:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a070d06400465144dd85cd731a8aab5bf</Anchor>
    <Abstract>Shortcut for POSTing parameters.</Abstract>
    <DeclaredIn>INServerObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>put:body:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a914bdf0c6dffcea761cd795937d03271</Anchor>
    <Abstract>Shortcut for PUTting data.</Abstract>
    <DeclaredIn>INServerObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>classForProperty:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>aa9331d4603241068d2d29481fa8cb581</Anchor>
    <Abstract>Returns the class of a property from the property map dictionary.</Abstract>
    <DeclaredIn>IndivoAbstractDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nameSpace</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a89f514a9bd6feceffb555de1ba7a879c</Anchor>
    <DeclaredIn>IndivoAbstractDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>newWithRecord:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a4b2dd239c2475800223f51d64777bc9b</Anchor>
    <Abstract>To get a new instance that must be pushed to the server.</Abstract>
    <DeclaredIn>IndivoAbstractDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>propertyClassMapper</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a3bb2b4fd5a3b1ef11798f8fdabba821e</Anchor>
    <Abstract>The automatically generated IndivoDocument subclasses return a dictionary with property-&amp;gt;class mappin...</Abstract>
    <DeclaredIn>IndivoAbstractDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>useFlatXMLFormat</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>afda78beb168898f6424a11b8b5ca0764</Anchor>
    <Abstract>Implementing this to have some flexibility about the XML format to use on the road to Indivo 2...</Abstract>
    <DeclaredIn>IndivoAbstractDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>created</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a761cde7620d1ecb3b5361881ea1332d7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nameSpace</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a3c9e8a8fc73c75b6bef306d38531dd14</Anchor>
    <Abstract>The namespace.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>record</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a850f4818dd6239fd60c379697227f3f7</Anchor>
    <Abstract>The owning record. If you change this on documents fetched from the server, you will get errors...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>suppressed</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>af9bf4dc81377b4f03db1155f4fd1d9b5</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onServer</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>ab0a5a28ab2950cee434c1ffe3588be68</Anchor>
    <Abstract>Indicates whether this document lives on the server.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>server</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a16eaad9d8c1852f6d59b595d9748bc22</Anchor>
    <Abstract>Our beloved server.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uuid</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a3bbdea7b50f5b42650336852c6c401ff</Anchor>
    <Abstract>This object&amp;#39;s udid.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_nodeName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ade43c92af65af424ab16f717ad4d8287</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IndivoActionView</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>IndivoActionView</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_action_view.html</Path>
    <Abstract>A semi-transparent view that can be overlaid over existing views and display text, a hint or a spinner.</Abstract>
    <DeclaredIn>IndivoActionView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hideHintTextAnimated:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoActionView</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_action_view.html</Path>
    <Anchor>a93d03823f602588f78b560cc1b7a0346</Anchor>
    <DeclaredIn>IndivoActionView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hideMainTextAnimated:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoActionView</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_action_view.html</Path>
    <Anchor>a6513e959a996b55896a0a3499193f7ba</Anchor>
    <DeclaredIn>IndivoActionView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hideSpinnerAnimated:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoActionView</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_action_view.html</Path>
    <Anchor>a0f758cd73074127614d04e3194d7b7ed</Anchor>
    <DeclaredIn>IndivoActionView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>showActivityIn:animated:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoActionView</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_action_view.html</Path>
    <Anchor>aea9ffaaaa67d92683271c7d081626fb4</Anchor>
    <Abstract>Adds the view displaying a spinner.</Abstract>
    <DeclaredIn>IndivoActionView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>showHintText:animated:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoActionView</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_action_view.html</Path>
    <Anchor>a1dddc03ca6e79204683122a819b2f1d6</Anchor>
    <DeclaredIn>IndivoActionView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>showIn:mainText:hintText:animated:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoActionView</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_action_view.html</Path>
    <Anchor>a82f4dc777a4c46d27559ef068b6d1eee</Anchor>
    <Abstract>Adds the view with given main and hint text (both are optional)</Abstract>
    <DeclaredIn>IndivoActionView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>showMainText:animated:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoActionView</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_action_view.html</Path>
    <Anchor>af8a8017198f8eb1f3721e96ab3474575</Anchor>
    <DeclaredIn>IndivoActionView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>showSpinnerAnimated:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoActionView</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_action_view.html</Path>
    <Anchor>af19a7ee7b2ee997460565692749db346</Anchor>
    <DeclaredIn>IndivoActionView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>animateNextLayout</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>IndivoActionView</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_action_view.html</Path>
    <Anchor>a968194b64d5e299211e4b43906ba40de</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IndivoAggregateReport</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>IndivoAggregateReport</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_aggregate_report.html</Path>
    <Abstract>A class representing &amp;quot;indivo:AggregateReport&amp;quot; objects, generated from /indivo/schemas/data/output/agg...</Abstract>
    <DeclaredIn>IndivoAggregateReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>group</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAggregateReport</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_aggregate_report.html</Path>
    <Anchor>ad266d52a74f920d4f03e7c35a95ff9e0</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAggregateReport</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_aggregate_report.html</Path>
    <Anchor>a0d196b5b15f472a372e462eb45b3540a</Anchor>
    <Abstract>Must be present as an XML attribute when writing XML.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>creator</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a620875e739fb98afa435f372df5909e9</Anchor>
    <Abstract>The creator of the document.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>documentStatus</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a706ab192803bdc2a9e75dbea73c530c3</Anchor>
    <Abstract>This document&amp;#39;s status.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetched</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>aef7d0b6214c80dacb33bd765d2306dac</Anchor>
    <Abstract>YES if the document has been fetched from the server.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>label</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a15ac87855f8919d4eae6d662dc6fb353</Anchor>
    <Abstract>This document&amp;#39;s label.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uuidLatest</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a01799b4080d41101d64a160fac00cb9b</Anchor>
    <Abstract>The udid of the latest document of the receiver.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uuidOriginal</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a2babd44cc1b5a2ee45aec75ea475ce71</Anchor>
    <Abstract>The udid of the original document, if the receiver replaced a document.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uuidReplaces</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>aade8cc30ac5d8e22f1f4fa30f26527e1</Anchor>
    <Abstract>The udid of the replaced document, if the receiver replaced a document.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>created</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a761cde7620d1ecb3b5361881ea1332d7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nameSpace</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a3c9e8a8fc73c75b6bef306d38531dd14</Anchor>
    <Abstract>The namespace.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>record</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a850f4818dd6239fd60c379697227f3f7</Anchor>
    <Abstract>The owning record. If you change this on documents fetched from the server, you will get errors...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>suppressed</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>af9bf4dc81377b4f03db1155f4fd1d9b5</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onServer</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>ab0a5a28ab2950cee434c1ffe3588be68</Anchor>
    <Abstract>Indicates whether this document lives on the server.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>server</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a16eaad9d8c1852f6d59b595d9748bc22</Anchor>
    <Abstract>Our beloved server.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uuid</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a3bbdea7b50f5b42650336852c6c401ff</Anchor>
    <Abstract>This object&amp;#39;s udid.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>archive:forReason:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a1be83576ad6d408b0d55bf1ad2b316e2</Anchor>
    <Abstract>Archive (or unarchive) a document for the given reason.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>basePostPath</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>addf4756929723f7bda04adfac88b236b</Anchor>
    <Abstract>The base path, e.g.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cachedObjectOfType:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>ad897004d23faa4db60bc8063cfafe489</Anchor>
    <Abstract>Retrieves the object for a given type from cache.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cacheObject:asType:error:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>afc06871b51cf4d7607887101e3bc1796</Anchor>
    <Abstract>Caches the object for a given type.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>documentPath</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a039d6cb30422992d8484b6243cd9ffc5</Anchor>
    <Abstract>The path to this document, i.e.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetchMetaDocumentWithCallback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>aef370c7434b6b8362cf45bec9cbd9fa7</Anchor>
    <Abstract>Fetches the meta document for this document.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetchStatusHistoryWithCallback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a8a738a777edeba7f0ae9de8f90a13b51</Anchor>
    <Abstract>Fetch the document&amp;#39;s version history.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetchVersionsWithCallback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a1acaadb8f92fb62da6214c50b073a187</Anchor>
    <Abstract>Fetch the document&amp;#39;s version history.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasStatus:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a83cedfbe21cc33cb715c0312a2512e5c</Anchor>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initFromNode:forRecord:withMeta:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a7681c2bd841f9ead3e58518bca914dc5</Anchor>
    <Abstract>The designated initializer.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isLatest</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a9d97b9ea0934923c797a1ffd24d01e27</Anchor>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pull:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a31ceb5b6fb978361e99d4d2d62dcbdde</Anchor>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>push:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a8fd3cac97039b11d7cacccbc122a9408</Anchor>
    <Abstract>This method puts a new document on the server.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>replace:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a817fd1faedcd79a84c8801069df542dc</Anchor>
    <Abstract>This method updates the receiver&amp;#39;s version on the server with new data from the receiver&amp;#39;s properties...</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLabel:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>ab691e3d71bcbb2748152d96c5d8da360</Anchor>
    <Abstract>Label a document.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateWithMeta:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>ab90c1ce19f1c5edda798eddcc85dea58</Anchor>
    <Abstract>This method updates our udid, type and status from the given meta document.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>void:forReason:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a2558c974611c31e7b7ee77ae42aa836a</Anchor>
    <Abstract>Void (or unvoid) a document for a given reason.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cachedObjectOfType:forId:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>acb39ff4eb2a628a11ddc611a266a7bcc</Anchor>
    <Abstract>Retrieves the cached object of a given type for a given document udid.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cacheObject:asType:forId:error:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a4ef5076f5ddc9bfc93a567de80c37699</Anchor>
    <Abstract>Stores an object of a given type for the document of the given udid.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>documentClassForType:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a709c6c3260b6a07c5aa1241707a9b5b1</Anchor>
    <Abstract>Returns the class for a previously registered type, or &amp;quot;IndivoDocument&amp;quot; if the type has not been regi...</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetchReportPathForRecord:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a02d49b2bcf494d71451c5e0ae74ad7f7</Anchor>
    <Abstract>The base path to get reports for documents of this class.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerDocumentClass:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>aa1ba18a981c893671566a7de273621ed</Anchor>
    <Abstract>Our IndivoDocument subclasses call this in their +load method.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reportType</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a4c034e46939f0a3423eb9eeea1355c3c</Anchor>
    <Abstract>This name is used to construct the report path for this kind of document.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_nodeName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ade43c92af65af424ab16f717ad4d8287</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IndivoAllergy</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>IndivoAllergy</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_allergy.html</Path>
    <Abstract>A class representing &amp;quot;indivo:Allergy&amp;quot; objects, generated from /indivo/data_models/core/allergy/model...</Abstract>
    <DeclaredIn>IndivoAllergy.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>allergic_reaction</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAllergy</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_allergy.html</Path>
    <Anchor>a82d319472ca6ff33cab96b3156ad613e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>category</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAllergy</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_allergy.html</Path>
    <Anchor>af1fc0a6e3126acaa56d76362573f67e7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>drug_allergen</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAllergy</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_allergy.html</Path>
    <Anchor>a4a3525d24f6db1b1595f97087809dea7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>drug_class_allergen</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAllergy</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_allergy.html</Path>
    <Anchor>a69d63804592aedd0a9dccbb94b42b0c0</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>food_allergen</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAllergy</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_allergy.html</Path>
    <Anchor>ae2b2db3af912f42f632767e1dccaa50c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>severity</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAllergy</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_allergy.html</Path>
    <Anchor>a9d8c0a07e780cb2d5dc156391c965c7e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>creator</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a620875e739fb98afa435f372df5909e9</Anchor>
    <Abstract>The creator of the document.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>documentStatus</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a706ab192803bdc2a9e75dbea73c530c3</Anchor>
    <Abstract>This document&amp;#39;s status.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetched</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>aef7d0b6214c80dacb33bd765d2306dac</Anchor>
    <Abstract>YES if the document has been fetched from the server.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>label</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a15ac87855f8919d4eae6d662dc6fb353</Anchor>
    <Abstract>This document&amp;#39;s label.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uuidLatest</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a01799b4080d41101d64a160fac00cb9b</Anchor>
    <Abstract>The udid of the latest document of the receiver.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uuidOriginal</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a2babd44cc1b5a2ee45aec75ea475ce71</Anchor>
    <Abstract>The udid of the original document, if the receiver replaced a document.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uuidReplaces</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>aade8cc30ac5d8e22f1f4fa30f26527e1</Anchor>
    <Abstract>The udid of the replaced document, if the receiver replaced a document.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>created</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a761cde7620d1ecb3b5361881ea1332d7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nameSpace</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a3c9e8a8fc73c75b6bef306d38531dd14</Anchor>
    <Abstract>The namespace.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>record</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a850f4818dd6239fd60c379697227f3f7</Anchor>
    <Abstract>The owning record. If you change this on documents fetched from the server, you will get errors...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>suppressed</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>af9bf4dc81377b4f03db1155f4fd1d9b5</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onServer</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>ab0a5a28ab2950cee434c1ffe3588be68</Anchor>
    <Abstract>Indicates whether this document lives on the server.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>server</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a16eaad9d8c1852f6d59b595d9748bc22</Anchor>
    <Abstract>Our beloved server.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uuid</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a3bbdea7b50f5b42650336852c6c401ff</Anchor>
    <Abstract>This object&amp;#39;s udid.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>archive:forReason:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a1be83576ad6d408b0d55bf1ad2b316e2</Anchor>
    <Abstract>Archive (or unarchive) a document for the given reason.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>basePostPath</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>addf4756929723f7bda04adfac88b236b</Anchor>
    <Abstract>The base path, e.g.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cachedObjectOfType:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>ad897004d23faa4db60bc8063cfafe489</Anchor>
    <Abstract>Retrieves the object for a given type from cache.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cacheObject:asType:error:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>afc06871b51cf4d7607887101e3bc1796</Anchor>
    <Abstract>Caches the object for a given type.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>documentPath</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a039d6cb30422992d8484b6243cd9ffc5</Anchor>
    <Abstract>The path to this document, i.e.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetchMetaDocumentWithCallback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>aef370c7434b6b8362cf45bec9cbd9fa7</Anchor>
    <Abstract>Fetches the meta document for this document.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetchStatusHistoryWithCallback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a8a738a777edeba7f0ae9de8f90a13b51</Anchor>
    <Abstract>Fetch the document&amp;#39;s version history.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetchVersionsWithCallback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a1acaadb8f92fb62da6214c50b073a187</Anchor>
    <Abstract>Fetch the document&amp;#39;s version history.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasStatus:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a83cedfbe21cc33cb715c0312a2512e5c</Anchor>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initFromNode:forRecord:withMeta:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a7681c2bd841f9ead3e58518bca914dc5</Anchor>
    <Abstract>The designated initializer.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isLatest</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a9d97b9ea0934923c797a1ffd24d01e27</Anchor>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pull:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a31ceb5b6fb978361e99d4d2d62dcbdde</Anchor>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>push:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a8fd3cac97039b11d7cacccbc122a9408</Anchor>
    <Abstract>This method puts a new document on the server.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>replace:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a817fd1faedcd79a84c8801069df542dc</Anchor>
    <Abstract>This method updates the receiver&amp;#39;s version on the server with new data from the receiver&amp;#39;s properties...</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLabel:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>ab691e3d71bcbb2748152d96c5d8da360</Anchor>
    <Abstract>Label a document.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateWithMeta:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>ab90c1ce19f1c5edda798eddcc85dea58</Anchor>
    <Abstract>This method updates our udid, type and status from the given meta document.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>void:forReason:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a2558c974611c31e7b7ee77ae42aa836a</Anchor>
    <Abstract>Void (or unvoid) a document for a given reason.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cachedObjectOfType:forId:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>acb39ff4eb2a628a11ddc611a266a7bcc</Anchor>
    <Abstract>Retrieves the cached object of a given type for a given document udid.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cacheObject:asType:forId:error:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a4ef5076f5ddc9bfc93a567de80c37699</Anchor>
    <Abstract>Stores an object of a given type for the document of the given udid.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>documentClassForType:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a709c6c3260b6a07c5aa1241707a9b5b1</Anchor>
    <Abstract>Returns the class for a previously registered type, or &amp;quot;IndivoDocument&amp;quot; if the type has not been regi...</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetchReportPathForRecord:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a02d49b2bcf494d71451c5e0ae74ad7f7</Anchor>
    <Abstract>The base path to get reports for documents of this class.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerDocumentClass:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>aa1ba18a981c893671566a7de273621ed</Anchor>
    <Abstract>Our IndivoDocument subclasses call this in their +load method.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reportType</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a4c034e46939f0a3423eb9eeea1355c3c</Anchor>
    <Abstract>This name is used to construct the report path for this kind of document.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_nodeName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ade43c92af65af424ab16f717ad4d8287</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IndivoAllergy(Report)</Name>
      <APILanguage>c</APILanguage>
      <Type>cat</Type>
      <Scope>IndivoAllergy(Report)</Scope>
    </TokenIdentifier>
    <Path>category_indivo_allergy_07_report_08.html</Path>
    <DeclaredIn>IndivoAllergy+Report.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IndivoAllergyExclusion</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>IndivoAllergyExclusion</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_allergy_exclusion.html</Path>
    <Abstract>A class representing &amp;quot;indivo:AllergyExclusion&amp;quot; objects, generated from /indivo/data_models/core/aller...</Abstract>
    <DeclaredIn>IndivoAllergyExclusion.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>name</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAllergyExclusion</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_allergy_exclusion.html</Path>
    <Anchor>a130446a300711c16c3eadbb16b198cb9</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>creator</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a620875e739fb98afa435f372df5909e9</Anchor>
    <Abstract>The creator of the document.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>documentStatus</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a706ab192803bdc2a9e75dbea73c530c3</Anchor>
    <Abstract>This document&amp;#39;s status.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetched</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>aef7d0b6214c80dacb33bd765d2306dac</Anchor>
    <Abstract>YES if the document has been fetched from the server.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>label</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a15ac87855f8919d4eae6d662dc6fb353</Anchor>
    <Abstract>This document&amp;#39;s label.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uuidLatest</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a01799b4080d41101d64a160fac00cb9b</Anchor>
    <Abstract>The udid of the latest document of the receiver.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uuidOriginal</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a2babd44cc1b5a2ee45aec75ea475ce71</Anchor>
    <Abstract>The udid of the original document, if the receiver replaced a document.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uuidReplaces</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>aade8cc30ac5d8e22f1f4fa30f26527e1</Anchor>
    <Abstract>The udid of the replaced document, if the receiver replaced a document.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>created</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a761cde7620d1ecb3b5361881ea1332d7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nameSpace</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a3c9e8a8fc73c75b6bef306d38531dd14</Anchor>
    <Abstract>The namespace.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>record</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a850f4818dd6239fd60c379697227f3f7</Anchor>
    <Abstract>The owning record. If you change this on documents fetched from the server, you will get errors...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>suppressed</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>af9bf4dc81377b4f03db1155f4fd1d9b5</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onServer</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>ab0a5a28ab2950cee434c1ffe3588be68</Anchor>
    <Abstract>Indicates whether this document lives on the server.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>server</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a16eaad9d8c1852f6d59b595d9748bc22</Anchor>
    <Abstract>Our beloved server.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uuid</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a3bbdea7b50f5b42650336852c6c401ff</Anchor>
    <Abstract>This object&amp;#39;s udid.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>archive:forReason:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a1be83576ad6d408b0d55bf1ad2b316e2</Anchor>
    <Abstract>Archive (or unarchive) a document for the given reason.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>basePostPath</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>addf4756929723f7bda04adfac88b236b</Anchor>
    <Abstract>The base path, e.g.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cachedObjectOfType:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>ad897004d23faa4db60bc8063cfafe489</Anchor>
    <Abstract>Retrieves the object for a given type from cache.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cacheObject:asType:error:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>afc06871b51cf4d7607887101e3bc1796</Anchor>
    <Abstract>Caches the object for a given type.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>documentPath</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a039d6cb30422992d8484b6243cd9ffc5</Anchor>
    <Abstract>The path to this document, i.e.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetchMetaDocumentWithCallback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>aef370c7434b6b8362cf45bec9cbd9fa7</Anchor>
    <Abstract>Fetches the meta document for this document.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetchStatusHistoryWithCallback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a8a738a777edeba7f0ae9de8f90a13b51</Anchor>
    <Abstract>Fetch the document&amp;#39;s version history.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetchVersionsWithCallback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a1acaadb8f92fb62da6214c50b073a187</Anchor>
    <Abstract>Fetch the document&amp;#39;s version history.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasStatus:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a83cedfbe21cc33cb715c0312a2512e5c</Anchor>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initFromNode:forRecord:withMeta:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a7681c2bd841f9ead3e58518bca914dc5</Anchor>
    <Abstract>The designated initializer.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isLatest</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a9d97b9ea0934923c797a1ffd24d01e27</Anchor>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pull:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a31ceb5b6fb978361e99d4d2d62dcbdde</Anchor>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>push:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a8fd3cac97039b11d7cacccbc122a9408</Anchor>
    <Abstract>This method puts a new document on the server.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>replace:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a817fd1faedcd79a84c8801069df542dc</Anchor>
    <Abstract>This method updates the receiver&amp;#39;s version on the server with new data from the receiver&amp;#39;s properties...</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLabel:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>ab691e3d71bcbb2748152d96c5d8da360</Anchor>
    <Abstract>Label a document.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateWithMeta:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>ab90c1ce19f1c5edda798eddcc85dea58</Anchor>
    <Abstract>This method updates our udid, type and status from the given meta document.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>void:forReason:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a2558c974611c31e7b7ee77ae42aa836a</Anchor>
    <Abstract>Void (or unvoid) a document for a given reason.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cachedObjectOfType:forId:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>acb39ff4eb2a628a11ddc611a266a7bcc</Anchor>
    <Abstract>Retrieves the cached object of a given type for a given document udid.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cacheObject:asType:forId:error:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a4ef5076f5ddc9bfc93a567de80c37699</Anchor>
    <Abstract>Stores an object of a given type for the document of the given udid.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>documentClassForType:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a709c6c3260b6a07c5aa1241707a9b5b1</Anchor>
    <Abstract>Returns the class for a previously registered type, or &amp;quot;IndivoDocument&amp;quot; if the type has not been regi...</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetchReportPathForRecord:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a02d49b2bcf494d71451c5e0ae74ad7f7</Anchor>
    <Abstract>The base path to get reports for documents of this class.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerDocumentClass:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>aa1ba18a981c893671566a7de273621ed</Anchor>
    <Abstract>Our IndivoDocument subclasses call this in their +load method.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reportType</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a4c034e46939f0a3423eb9eeea1355c3c</Anchor>
    <Abstract>This name is used to construct the report path for this kind of document.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_nodeName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ade43c92af65af424ab16f717ad4d8287</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IndivoAppDocument</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>IndivoAppDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_app_document.html</Path>
    <Abstract>An app- and optionally record specific document with any XML structure.</Abstract>
    <DeclaredIn>IndivoAppDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>delete:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoAppDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_app_document.html</Path>
    <Anchor>ad967c8f71e40cc2bc20c3a2c1e2fb92f</Anchor>
    <DeclaredIn>IndivoAppDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>archive:forReason:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a1be83576ad6d408b0d55bf1ad2b316e2</Anchor>
    <Abstract>Archive (or unarchive) a document for the given reason.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>basePostPath</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>addf4756929723f7bda04adfac88b236b</Anchor>
    <Abstract>The base path, e.g.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cachedObjectOfType:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>ad897004d23faa4db60bc8063cfafe489</Anchor>
    <Abstract>Retrieves the object for a given type from cache.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cacheObject:asType:error:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>afc06871b51cf4d7607887101e3bc1796</Anchor>
    <Abstract>Caches the object for a given type.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>documentPath</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a039d6cb30422992d8484b6243cd9ffc5</Anchor>
    <Abstract>The path to this document, i.e.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetchMetaDocumentWithCallback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>aef370c7434b6b8362cf45bec9cbd9fa7</Anchor>
    <Abstract>Fetches the meta document for this document.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetchStatusHistoryWithCallback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a8a738a777edeba7f0ae9de8f90a13b51</Anchor>
    <Abstract>Fetch the document&amp;#39;s version history.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetchVersionsWithCallback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a1acaadb8f92fb62da6214c50b073a187</Anchor>
    <Abstract>Fetch the document&amp;#39;s version history.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasStatus:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a83cedfbe21cc33cb715c0312a2512e5c</Anchor>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initFromNode:forRecord:withMeta:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a7681c2bd841f9ead3e58518bca914dc5</Anchor>
    <Abstract>The designated initializer.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isLatest</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a9d97b9ea0934923c797a1ffd24d01e27</Anchor>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pull:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a31ceb5b6fb978361e99d4d2d62dcbdde</Anchor>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>push:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a8fd3cac97039b11d7cacccbc122a9408</Anchor>
    <Abstract>This method puts a new document on the server.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>replace:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a817fd1faedcd79a84c8801069df542dc</Anchor>
    <Abstract>This method updates the receiver&amp;#39;s version on the server with new data from the receiver&amp;#39;s properties...</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLabel:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>ab691e3d71bcbb2748152d96c5d8da360</Anchor>
    <Abstract>Label a document.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateWithMeta:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>ab90c1ce19f1c5edda798eddcc85dea58</Anchor>
    <Abstract>This method updates our udid, type and status from the given meta document.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>void:forReason:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a2558c974611c31e7b7ee77ae42aa836a</Anchor>
    <Abstract>Void (or unvoid) a document for a given reason.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>documentXML</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>acfa5997948281762df57fdf9bd0ffdaf</Anchor>
    <Abstract>Returns an XML representation of the receiver, like &amp;quot;xml&amp;quot; does, but adds namespace information...</Abstract>
    <DeclaredIn>IndivoAbstractDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flatDocumentXML</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a0fd5635c7261e8b7e889bd6edd48f482</Anchor>
    <Abstract>Returns the Indivo 2.0 flat XML format for a document.</Abstract>
    <DeclaredIn>IndivoAbstractDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flatXML</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a42554fdf26af89d9bcba86b7a44d7d32</Anchor>
    <Abstract>Returns the Indivo 2.0 flat XML format.</Abstract>
    <DeclaredIn>IndivoAbstractDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initFromNode:forRecord:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a38b0b76a05b7258de71ae71eca82a9d2</Anchor>
    <Abstract>The designated initializer, initializes an instance from an XML node.</Abstract>
    <DeclaredIn>IndivoAbstractDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>forceNotOnServer</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>ac274479305ae9b3f49c9dd24572afe96</Anchor>
    <Abstract>This is provided for subclasses, the fact that onServer is readonly but settable by this and markOnSe...</Abstract>
    <DeclaredIn>INServerObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a45970634b7aa5f86e7479c1599a7d98c</Anchor>
    <Abstract>Shortcut for GETting data.</Abstract>
    <DeclaredIn>INServerObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get:parameters:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a17f98bd457ac77a451c6b730f97beae2</Anchor>
    <Abstract>Shortcut for GETting data with parameters.</Abstract>
    <DeclaredIn>INServerObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initFromNode:withServer:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a4828394e023d6346442ec59512198300</Anchor>
    <Abstract>The designated initializer.</Abstract>
    <DeclaredIn>INServerObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a40df090a1813e6d965efce8fbf58295e</Anchor>
    <Abstract>Shortcut method to test if the document has the given ID.</Abstract>
    <DeclaredIn>INServerObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>markOnServer</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a08067a7fd061216248615f841984c608</Anchor>
    <Abstract>Sets onServer to YES for the receiver.</Abstract>
    <DeclaredIn>INServerObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>performMethod:withBody:orParameters:httpMethod:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a3e995d3df3fe4fb6769f63d4f3c6e216</Anchor>
    <Abstract>The basic method to perform REST methods on the server with App credentials.</Abstract>
    <DeclaredIn>INServerObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>post:body:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a7b1df3e6eb0a567205156e9826a7d0c0</Anchor>
    <Abstract>Shortcut for POSTing body data.</Abstract>
    <DeclaredIn>INServerObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>post:parameters:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a070d06400465144dd85cd731a8aab5bf</Anchor>
    <Abstract>Shortcut for POSTing parameters.</Abstract>
    <DeclaredIn>INServerObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>put:body:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a914bdf0c6dffcea761cd795937d03271</Anchor>
    <Abstract>Shortcut for PUTting data.</Abstract>
    <DeclaredIn>INServerObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>newOnServer:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoAppDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_app_document.html</Path>
    <Anchor>aaf71d0391fdfbc9d280b59067925163f</Anchor>
    <DeclaredIn>IndivoAppDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cachedObjectOfType:forId:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>acb39ff4eb2a628a11ddc611a266a7bcc</Anchor>
    <Abstract>Retrieves the cached object of a given type for a given document udid.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cacheObject:asType:forId:error:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a4ef5076f5ddc9bfc93a567de80c37699</Anchor>
    <Abstract>Stores an object of a given type for the document of the given udid.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>documentClassForType:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a709c6c3260b6a07c5aa1241707a9b5b1</Anchor>
    <Abstract>Returns the class for a previously registered type, or &amp;quot;IndivoDocument&amp;quot; if the type has not been regi...</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetchReportPathForRecord:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a02d49b2bcf494d71451c5e0ae74ad7f7</Anchor>
    <Abstract>The base path to get reports for documents of this class.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerDocumentClass:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>aa1ba18a981c893671566a7de273621ed</Anchor>
    <Abstract>Our IndivoDocument subclasses call this in their +load method.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reportType</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a4c034e46939f0a3423eb9eeea1355c3c</Anchor>
    <Abstract>This name is used to construct the report path for this kind of document.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>classForProperty:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>aa9331d4603241068d2d29481fa8cb581</Anchor>
    <Abstract>Returns the class of a property from the property map dictionary.</Abstract>
    <DeclaredIn>IndivoAbstractDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nameSpace</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a89f514a9bd6feceffb555de1ba7a879c</Anchor>
    <DeclaredIn>IndivoAbstractDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>newWithRecord:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a4b2dd239c2475800223f51d64777bc9b</Anchor>
    <Abstract>To get a new instance that must be pushed to the server.</Abstract>
    <DeclaredIn>IndivoAbstractDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>propertyClassMapper</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a3bb2b4fd5a3b1ef11798f8fdabba821e</Anchor>
    <Abstract>The automatically generated IndivoDocument subclasses return a dictionary with property-&amp;gt;class mappin...</Abstract>
    <DeclaredIn>IndivoAbstractDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>useFlatXMLFormat</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>afda78beb168898f6424a11b8b5ca0764</Anchor>
    <Abstract>Implementing this to have some flexibility about the XML format to use on the road to Indivo 2...</Abstract>
    <DeclaredIn>IndivoAbstractDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tree</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAppDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_app_document.html</Path>
    <Anchor>ae4c634622379684df301fd46607f5ea4</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>creator</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a620875e739fb98afa435f372df5909e9</Anchor>
    <Abstract>The creator of the document.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>documentStatus</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a706ab192803bdc2a9e75dbea73c530c3</Anchor>
    <Abstract>This document&amp;#39;s status.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetched</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>aef7d0b6214c80dacb33bd765d2306dac</Anchor>
    <Abstract>YES if the document has been fetched from the server.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>label</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a15ac87855f8919d4eae6d662dc6fb353</Anchor>
    <Abstract>This document&amp;#39;s label.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uuidLatest</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a01799b4080d41101d64a160fac00cb9b</Anchor>
    <Abstract>The udid of the latest document of the receiver.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uuidOriginal</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a2babd44cc1b5a2ee45aec75ea475ce71</Anchor>
    <Abstract>The udid of the original document, if the receiver replaced a document.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uuidReplaces</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>aade8cc30ac5d8e22f1f4fa30f26527e1</Anchor>
    <Abstract>The udid of the replaced document, if the receiver replaced a document.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>created</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a761cde7620d1ecb3b5361881ea1332d7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nameSpace</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a3c9e8a8fc73c75b6bef306d38531dd14</Anchor>
    <Abstract>The namespace.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>record</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a850f4818dd6239fd60c379697227f3f7</Anchor>
    <Abstract>The owning record. If you change this on documents fetched from the server, you will get errors...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>suppressed</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>af9bf4dc81377b4f03db1155f4fd1d9b5</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onServer</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>ab0a5a28ab2950cee434c1ffe3588be68</Anchor>
    <Abstract>Indicates whether this document lives on the server.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>server</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a16eaad9d8c1852f6d59b595d9748bc22</Anchor>
    <Abstract>Our beloved server.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uuid</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a3bbdea7b50f5b42650336852c6c401ff</Anchor>
    <Abstract>This object&amp;#39;s udid.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_nodeName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ade43c92af65af424ab16f717ad4d8287</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IndivoDemographics</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>IndivoDemographics</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_demographics.html</Path>
    <Abstract>A class representing &amp;quot;indivo:Demographics&amp;quot; objects, generated from /indivo/schemas/data/core/demograp...</Abstract>
    <DeclaredIn>IndivoDemographics.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Address</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDemographics</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_demographics.html</Path>
    <Anchor>a5080644dcaa727026e23e5bd4178b0d1</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dateOfBirth</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDemographics</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_demographics.html</Path>
    <Anchor>abf177cbce40a6689ea145f909db40b15</Anchor>
    <Abstract>minOccurs = 1</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>email</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDemographics</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_demographics.html</Path>
    <Anchor>ab766b94b6e655d86d9719a4bf927fca0</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ethnicity</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDemographics</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_demographics.html</Path>
    <Anchor>a453e9205d4db8ff15b614819150ca75c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>gender</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDemographics</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_demographics.html</Path>
    <Anchor>a166d210537de751dfd7351a9c63cd62c</Anchor>
    <Abstract>minOccurs = 1</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Name</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDemographics</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_demographics.html</Path>
    <Anchor>a766358a9edeb7899afc1c88cef176cfb</Anchor>
    <Abstract>minOccurs = 1</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preferredLanguage</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDemographics</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_demographics.html</Path>
    <Anchor>a9cfcc0d37635f5785700c5842d04d40a</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>race</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDemographics</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_demographics.html</Path>
    <Anchor>a9e7dacec7f1498266076e3a93c82bf9a</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Telephone</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDemographics</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_demographics.html</Path>
    <Anchor>acc52fee39fe6bdc680b780b7aa629b9e</Anchor>
    <Abstract>An array containing INTelephone objects.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>creator</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a620875e739fb98afa435f372df5909e9</Anchor>
    <Abstract>The creator of the document.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>documentStatus</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a706ab192803bdc2a9e75dbea73c530c3</Anchor>
    <Abstract>This document&amp;#39;s status.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetched</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>aef7d0b6214c80dacb33bd765d2306dac</Anchor>
    <Abstract>YES if the document has been fetched from the server.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>label</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a15ac87855f8919d4eae6d662dc6fb353</Anchor>
    <Abstract>This document&amp;#39;s label.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uuidLatest</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a01799b4080d41101d64a160fac00cb9b</Anchor>
    <Abstract>The udid of the latest document of the receiver.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uuidOriginal</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a2babd44cc1b5a2ee45aec75ea475ce71</Anchor>
    <Abstract>The udid of the original document, if the receiver replaced a document.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uuidReplaces</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>aade8cc30ac5d8e22f1f4fa30f26527e1</Anchor>
    <Abstract>The udid of the replaced document, if the receiver replaced a document.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>created</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a761cde7620d1ecb3b5361881ea1332d7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nameSpace</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a3c9e8a8fc73c75b6bef306d38531dd14</Anchor>
    <Abstract>The namespace.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>record</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a850f4818dd6239fd60c379697227f3f7</Anchor>
    <Abstract>The owning record. If you change this on documents fetched from the server, you will get errors...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>suppressed</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>af9bf4dc81377b4f03db1155f4fd1d9b5</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onServer</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>ab0a5a28ab2950cee434c1ffe3588be68</Anchor>
    <Abstract>Indicates whether this document lives on the server.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>server</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a16eaad9d8c1852f6d59b595d9748bc22</Anchor>
    <Abstract>Our beloved server.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uuid</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a3bbdea7b50f5b42650336852c6c401ff</Anchor>
    <Abstract>This object&amp;#39;s udid.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>archive:forReason:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a1be83576ad6d408b0d55bf1ad2b316e2</Anchor>
    <Abstract>Archive (or unarchive) a document for the given reason.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>basePostPath</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>addf4756929723f7bda04adfac88b236b</Anchor>
    <Abstract>The base path, e.g.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cachedObjectOfType:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>ad897004d23faa4db60bc8063cfafe489</Anchor>
    <Abstract>Retrieves the object for a given type from cache.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cacheObject:asType:error:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>afc06871b51cf4d7607887101e3bc1796</Anchor>
    <Abstract>Caches the object for a given type.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>documentPath</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a039d6cb30422992d8484b6243cd9ffc5</Anchor>
    <Abstract>The path to this document, i.e.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetchMetaDocumentWithCallback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>aef370c7434b6b8362cf45bec9cbd9fa7</Anchor>
    <Abstract>Fetches the meta document for this document.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetchStatusHistoryWithCallback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a8a738a777edeba7f0ae9de8f90a13b51</Anchor>
    <Abstract>Fetch the document&amp;#39;s version history.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetchVersionsWithCallback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a1acaadb8f92fb62da6214c50b073a187</Anchor>
    <Abstract>Fetch the document&amp;#39;s version history.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasStatus:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a83cedfbe21cc33cb715c0312a2512e5c</Anchor>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initFromNode:forRecord:withMeta:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a7681c2bd841f9ead3e58518bca914dc5</Anchor>
    <Abstract>The designated initializer.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isLatest</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a9d97b9ea0934923c797a1ffd24d01e27</Anchor>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pull:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a31ceb5b6fb978361e99d4d2d62dcbdde</Anchor>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>push:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a8fd3cac97039b11d7cacccbc122a9408</Anchor>
    <Abstract>This method puts a new document on the server.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>replace:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a817fd1faedcd79a84c8801069df542dc</Anchor>
    <Abstract>This method updates the receiver&amp;#39;s version on the server with new data from the receiver&amp;#39;s properties...</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLabel:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>ab691e3d71bcbb2748152d96c5d8da360</Anchor>
    <Abstract>Label a document.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateWithMeta:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>ab90c1ce19f1c5edda798eddcc85dea58</Anchor>
    <Abstract>This method updates our udid, type and status from the given meta document.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>void:forReason:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a2558c974611c31e7b7ee77ae42aa836a</Anchor>
    <Abstract>Void (or unvoid) a document for a given reason.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cachedObjectOfType:forId:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>acb39ff4eb2a628a11ddc611a266a7bcc</Anchor>
    <Abstract>Retrieves the cached object of a given type for a given document udid.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cacheObject:asType:forId:error:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a4ef5076f5ddc9bfc93a567de80c37699</Anchor>
    <Abstract>Stores an object of a given type for the document of the given udid.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>documentClassForType:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a709c6c3260b6a07c5aa1241707a9b5b1</Anchor>
    <Abstract>Returns the class for a previously registered type, or &amp;quot;IndivoDocument&amp;quot; if the type has not been regi...</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetchReportPathForRecord:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a02d49b2bcf494d71451c5e0ae74ad7f7</Anchor>
    <Abstract>The base path to get reports for documents of this class.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerDocumentClass:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>aa1ba18a981c893671566a7de273621ed</Anchor>
    <Abstract>Our IndivoDocument subclasses call this in their +load method.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reportType</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a4c034e46939f0a3423eb9eeea1355c3c</Anchor>
    <Abstract>This name is used to construct the report path for this kind of document.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_nodeName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ade43c92af65af424ab16f717ad4d8287</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IndivoDemographics(Special)</Name>
      <APILanguage>c</APILanguage>
      <Type>cat</Type>
      <Scope>IndivoDemographics(Special)</Scope>
    </TokenIdentifier>
    <Path>category_indivo_demographics_07_special_08.html</Path>
    <DeclaredIn>IndivoDemographics+Special.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IndivoDocument</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Abstract>An IndivoDocument represents a document tied to a record.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>archive:forReason:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a1be83576ad6d408b0d55bf1ad2b316e2</Anchor>
    <Abstract>Archive (or unarchive) a document for the given reason.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>basePostPath</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>addf4756929723f7bda04adfac88b236b</Anchor>
    <Abstract>The base path, e.g.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cachedObjectOfType:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>ad897004d23faa4db60bc8063cfafe489</Anchor>
    <Abstract>Retrieves the object for a given type from cache.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cacheObject:asType:error:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>afc06871b51cf4d7607887101e3bc1796</Anchor>
    <Abstract>Caches the object for a given type.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>documentPath</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a039d6cb30422992d8484b6243cd9ffc5</Anchor>
    <Abstract>The path to this document, i.e.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetchMetaDocumentWithCallback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>aef370c7434b6b8362cf45bec9cbd9fa7</Anchor>
    <Abstract>Fetches the meta document for this document.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetchStatusHistoryWithCallback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a8a738a777edeba7f0ae9de8f90a13b51</Anchor>
    <Abstract>Fetch the document&amp;#39;s version history.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetchVersionsWithCallback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a1acaadb8f92fb62da6214c50b073a187</Anchor>
    <Abstract>Fetch the document&amp;#39;s version history.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasStatus:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a83cedfbe21cc33cb715c0312a2512e5c</Anchor>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initFromNode:forRecord:withMeta:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a7681c2bd841f9ead3e58518bca914dc5</Anchor>
    <Abstract>The designated initializer.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isLatest</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a9d97b9ea0934923c797a1ffd24d01e27</Anchor>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pull:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a31ceb5b6fb978361e99d4d2d62dcbdde</Anchor>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>push:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a8fd3cac97039b11d7cacccbc122a9408</Anchor>
    <Abstract>This method puts a new document on the server.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>replace:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a817fd1faedcd79a84c8801069df542dc</Anchor>
    <Abstract>This method updates the receiver&amp;#39;s version on the server with new data from the receiver&amp;#39;s properties...</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLabel:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>ab691e3d71bcbb2748152d96c5d8da360</Anchor>
    <Abstract>Label a document.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateWithMeta:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>ab90c1ce19f1c5edda798eddcc85dea58</Anchor>
    <Abstract>This method updates our udid, type and status from the given meta document.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>void:forReason:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a2558c974611c31e7b7ee77ae42aa836a</Anchor>
    <Abstract>Void (or unvoid) a document for a given reason.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>documentXML</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>acfa5997948281762df57fdf9bd0ffdaf</Anchor>
    <Abstract>Returns an XML representation of the receiver, like &amp;quot;xml&amp;quot; does, but adds namespace information...</Abstract>
    <DeclaredIn>IndivoAbstractDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flatDocumentXML</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a0fd5635c7261e8b7e889bd6edd48f482</Anchor>
    <Abstract>Returns the Indivo 2.0 flat XML format for a document.</Abstract>
    <DeclaredIn>IndivoAbstractDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flatXML</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a42554fdf26af89d9bcba86b7a44d7d32</Anchor>
    <Abstract>Returns the Indivo 2.0 flat XML format.</Abstract>
    <DeclaredIn>IndivoAbstractDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initFromNode:forRecord:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a38b0b76a05b7258de71ae71eca82a9d2</Anchor>
    <Abstract>The designated initializer, initializes an instance from an XML node.</Abstract>
    <DeclaredIn>IndivoAbstractDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>forceNotOnServer</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>ac274479305ae9b3f49c9dd24572afe96</Anchor>
    <Abstract>This is provided for subclasses, the fact that onServer is readonly but settable by this and markOnSe...</Abstract>
    <DeclaredIn>INServerObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a45970634b7aa5f86e7479c1599a7d98c</Anchor>
    <Abstract>Shortcut for GETting data.</Abstract>
    <DeclaredIn>INServerObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get:parameters:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a17f98bd457ac77a451c6b730f97beae2</Anchor>
    <Abstract>Shortcut for GETting data with parameters.</Abstract>
    <DeclaredIn>INServerObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initFromNode:withServer:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a4828394e023d6346442ec59512198300</Anchor>
    <Abstract>The designated initializer.</Abstract>
    <DeclaredIn>INServerObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a40df090a1813e6d965efce8fbf58295e</Anchor>
    <Abstract>Shortcut method to test if the document has the given ID.</Abstract>
    <DeclaredIn>INServerObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>markOnServer</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a08067a7fd061216248615f841984c608</Anchor>
    <Abstract>Sets onServer to YES for the receiver.</Abstract>
    <DeclaredIn>INServerObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>performMethod:withBody:orParameters:httpMethod:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a3e995d3df3fe4fb6769f63d4f3c6e216</Anchor>
    <Abstract>The basic method to perform REST methods on the server with App credentials.</Abstract>
    <DeclaredIn>INServerObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>post:body:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a7b1df3e6eb0a567205156e9826a7d0c0</Anchor>
    <Abstract>Shortcut for POSTing body data.</Abstract>
    <DeclaredIn>INServerObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>post:parameters:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a070d06400465144dd85cd731a8aab5bf</Anchor>
    <Abstract>Shortcut for POSTing parameters.</Abstract>
    <DeclaredIn>INServerObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>put:body:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a914bdf0c6dffcea761cd795937d03271</Anchor>
    <Abstract>Shortcut for PUTting data.</Abstract>
    <DeclaredIn>INServerObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cachedObjectOfType:forId:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>acb39ff4eb2a628a11ddc611a266a7bcc</Anchor>
    <Abstract>Retrieves the cached object of a given type for a given document udid.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cacheObject:asType:forId:error:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a4ef5076f5ddc9bfc93a567de80c37699</Anchor>
    <Abstract>Stores an object of a given type for the document of the given udid.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>documentClassForType:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a709c6c3260b6a07c5aa1241707a9b5b1</Anchor>
    <Abstract>Returns the class for a previously registered type, or &amp;quot;IndivoDocument&amp;quot; if the type has not been regi...</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetchReportPathForRecord:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a02d49b2bcf494d71451c5e0ae74ad7f7</Anchor>
    <Abstract>The base path to get reports for documents of this class.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerDocumentClass:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>aa1ba18a981c893671566a7de273621ed</Anchor>
    <Abstract>Our IndivoDocument subclasses call this in their +load method.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reportType</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a4c034e46939f0a3423eb9eeea1355c3c</Anchor>
    <Abstract>This name is used to construct the report path for this kind of document.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>classForProperty:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>aa9331d4603241068d2d29481fa8cb581</Anchor>
    <Abstract>Returns the class of a property from the property map dictionary.</Abstract>
    <DeclaredIn>IndivoAbstractDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nameSpace</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a89f514a9bd6feceffb555de1ba7a879c</Anchor>
    <DeclaredIn>IndivoAbstractDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>newWithRecord:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a4b2dd239c2475800223f51d64777bc9b</Anchor>
    <Abstract>To get a new instance that must be pushed to the server.</Abstract>
    <DeclaredIn>IndivoAbstractDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>propertyClassMapper</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a3bb2b4fd5a3b1ef11798f8fdabba821e</Anchor>
    <Abstract>The automatically generated IndivoDocument subclasses return a dictionary with property-&amp;gt;class mappin...</Abstract>
    <DeclaredIn>IndivoAbstractDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>useFlatXMLFormat</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>afda78beb168898f6424a11b8b5ca0764</Anchor>
    <Abstract>Implementing this to have some flexibility about the XML format to use on the road to Indivo 2...</Abstract>
    <DeclaredIn>IndivoAbstractDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>creator</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a620875e739fb98afa435f372df5909e9</Anchor>
    <Abstract>The creator of the document.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>documentStatus</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a706ab192803bdc2a9e75dbea73c530c3</Anchor>
    <Abstract>This document&amp;#39;s status.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetched</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>aef7d0b6214c80dacb33bd765d2306dac</Anchor>
    <Abstract>YES if the document has been fetched from the server.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>label</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a15ac87855f8919d4eae6d662dc6fb353</Anchor>
    <Abstract>This document&amp;#39;s label.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uuidLatest</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a01799b4080d41101d64a160fac00cb9b</Anchor>
    <Abstract>The udid of the latest document of the receiver.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uuidOriginal</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a2babd44cc1b5a2ee45aec75ea475ce71</Anchor>
    <Abstract>The udid of the original document, if the receiver replaced a document.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uuidReplaces</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>aade8cc30ac5d8e22f1f4fa30f26527e1</Anchor>
    <Abstract>The udid of the replaced document, if the receiver replaced a document.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>created</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a761cde7620d1ecb3b5361881ea1332d7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nameSpace</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a3c9e8a8fc73c75b6bef306d38531dd14</Anchor>
    <Abstract>The namespace.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>record</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a850f4818dd6239fd60c379697227f3f7</Anchor>
    <Abstract>The owning record. If you change this on documents fetched from the server, you will get errors...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>suppressed</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>af9bf4dc81377b4f03db1155f4fd1d9b5</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onServer</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>ab0a5a28ab2950cee434c1ffe3588be68</Anchor>
    <Abstract>Indicates whether this document lives on the server.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>server</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a16eaad9d8c1852f6d59b595d9748bc22</Anchor>
    <Abstract>Our beloved server.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uuid</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a3bbdea7b50f5b42650336852c6c401ff</Anchor>
    <Abstract>This object&amp;#39;s udid.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_nodeName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ade43c92af65af424ab16f717ad4d8287</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IndivoEncounter</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>IndivoEncounter</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_encounter.html</Path>
    <Abstract>A class representing &amp;quot;indivo:Encounter&amp;quot; objects, generated from /indivo/data_models/core/vitals/model...</Abstract>
    <DeclaredIn>IndivoEncounter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>encounterType</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoEncounter</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_encounter.html</Path>
    <Anchor>a4392cd1d56081a43dfe0575154a479cf</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>endDate</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoEncounter</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_encounter.html</Path>
    <Anchor>aaafa97bd529a41a271b4f137de770913</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>facility</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoEncounter</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_encounter.html</Path>
    <Anchor>a3ed335ef6af8f29906167cee602cd0d0</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>provider</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoEncounter</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_encounter.html</Path>
    <Anchor>a58707c09da7f74093c7cdf0ff5206851</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>startDate</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoEncounter</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_encounter.html</Path>
    <Anchor>aa6ab46331b03d23a0745758ea43574c8</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>creator</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a620875e739fb98afa435f372df5909e9</Anchor>
    <Abstract>The creator of the document.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>documentStatus</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a706ab192803bdc2a9e75dbea73c530c3</Anchor>
    <Abstract>This document&amp;#39;s status.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetched</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>aef7d0b6214c80dacb33bd765d2306dac</Anchor>
    <Abstract>YES if the document has been fetched from the server.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>label</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a15ac87855f8919d4eae6d662dc6fb353</Anchor>
    <Abstract>This document&amp;#39;s label.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uuidLatest</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a01799b4080d41101d64a160fac00cb9b</Anchor>
    <Abstract>The udid of the latest document of the receiver.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uuidOriginal</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a2babd44cc1b5a2ee45aec75ea475ce71</Anchor>
    <Abstract>The udid of the original document, if the receiver replaced a document.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uuidReplaces</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>aade8cc30ac5d8e22f1f4fa30f26527e1</Anchor>
    <Abstract>The udid of the replaced document, if the receiver replaced a document.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>created</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a761cde7620d1ecb3b5361881ea1332d7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nameSpace</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a3c9e8a8fc73c75b6bef306d38531dd14</Anchor>
    <Abstract>The namespace.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>record</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a850f4818dd6239fd60c379697227f3f7</Anchor>
    <Abstract>The owning record. If you change this on documents fetched from the server, you will get errors...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>suppressed</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>af9bf4dc81377b4f03db1155f4fd1d9b5</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onServer</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>ab0a5a28ab2950cee434c1ffe3588be68</Anchor>
    <Abstract>Indicates whether this document lives on the server.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>server</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a16eaad9d8c1852f6d59b595d9748bc22</Anchor>
    <Abstract>Our beloved server.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uuid</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a3bbdea7b50f5b42650336852c6c401ff</Anchor>
    <Abstract>This object&amp;#39;s udid.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>archive:forReason:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a1be83576ad6d408b0d55bf1ad2b316e2</Anchor>
    <Abstract>Archive (or unarchive) a document for the given reason.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>basePostPath</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>addf4756929723f7bda04adfac88b236b</Anchor>
    <Abstract>The base path, e.g.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cachedObjectOfType:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>ad897004d23faa4db60bc8063cfafe489</Anchor>
    <Abstract>Retrieves the object for a given type from cache.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cacheObject:asType:error:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>afc06871b51cf4d7607887101e3bc1796</Anchor>
    <Abstract>Caches the object for a given type.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>documentPath</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a039d6cb30422992d8484b6243cd9ffc5</Anchor>
    <Abstract>The path to this document, i.e.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetchMetaDocumentWithCallback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>aef370c7434b6b8362cf45bec9cbd9fa7</Anchor>
    <Abstract>Fetches the meta document for this document.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetchStatusHistoryWithCallback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a8a738a777edeba7f0ae9de8f90a13b51</Anchor>
    <Abstract>Fetch the document&amp;#39;s version history.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetchVersionsWithCallback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a1acaadb8f92fb62da6214c50b073a187</Anchor>
    <Abstract>Fetch the document&amp;#39;s version history.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasStatus:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a83cedfbe21cc33cb715c0312a2512e5c</Anchor>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initFromNode:forRecord:withMeta:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a7681c2bd841f9ead3e58518bca914dc5</Anchor>
    <Abstract>The designated initializer.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isLatest</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a9d97b9ea0934923c797a1ffd24d01e27</Anchor>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pull:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a31ceb5b6fb978361e99d4d2d62dcbdde</Anchor>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>push:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a8fd3cac97039b11d7cacccbc122a9408</Anchor>
    <Abstract>This method puts a new document on the server.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>replace:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a817fd1faedcd79a84c8801069df542dc</Anchor>
    <Abstract>This method updates the receiver&amp;#39;s version on the server with new data from the receiver&amp;#39;s properties...</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLabel:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>ab691e3d71bcbb2748152d96c5d8da360</Anchor>
    <Abstract>Label a document.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateWithMeta:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>ab90c1ce19f1c5edda798eddcc85dea58</Anchor>
    <Abstract>This method updates our udid, type and status from the given meta document.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>void:forReason:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a2558c974611c31e7b7ee77ae42aa836a</Anchor>
    <Abstract>Void (or unvoid) a document for a given reason.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cachedObjectOfType:forId:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>acb39ff4eb2a628a11ddc611a266a7bcc</Anchor>
    <Abstract>Retrieves the cached object of a given type for a given document udid.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cacheObject:asType:forId:error:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a4ef5076f5ddc9bfc93a567de80c37699</Anchor>
    <Abstract>Stores an object of a given type for the document of the given udid.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>documentClassForType:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a709c6c3260b6a07c5aa1241707a9b5b1</Anchor>
    <Abstract>Returns the class for a previously registered type, or &amp;quot;IndivoDocument&amp;quot; if the type has not been regi...</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetchReportPathForRecord:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a02d49b2bcf494d71451c5e0ae74ad7f7</Anchor>
    <Abstract>The base path to get reports for documents of this class.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerDocumentClass:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>aa1ba18a981c893671566a7de273621ed</Anchor>
    <Abstract>Our IndivoDocument subclasses call this in their +load method.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reportType</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a4c034e46939f0a3423eb9eeea1355c3c</Anchor>
    <Abstract>This name is used to construct the report path for this kind of document.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_nodeName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ade43c92af65af424ab16f717ad4d8287</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IndivoEquipment</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>IndivoEquipment</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_equipment.html</Path>
    <Abstract>A class representing &amp;quot;indivo:Equipment&amp;quot; objects, generated from /indivo/data_models/core/equipment/mo...</Abstract>
    <DeclaredIn>IndivoEquipment.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>date_started</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoEquipment</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_equipment.html</Path>
    <Anchor>a43ec6d95e57d16241914b667dde04ab5</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>date_stopped</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoEquipment</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_equipment.html</Path>
    <Anchor>a9f826fc8066fe99e42d561aae025ba9c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>description</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoEquipment</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_equipment.html</Path>
    <Anchor>ae6a65d698d045e0ada940f8ed479fb65</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>name</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoEquipment</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_equipment.html</Path>
    <Anchor>a29c787a495e497237ec1d685e394e2a4</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vendor</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoEquipment</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_equipment.html</Path>
    <Anchor>aa8d9933a6440910c7ceccc0f80f9d51a</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>creator</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a620875e739fb98afa435f372df5909e9</Anchor>
    <Abstract>The creator of the document.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>documentStatus</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a706ab192803bdc2a9e75dbea73c530c3</Anchor>
    <Abstract>This document&amp;#39;s status.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetched</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>aef7d0b6214c80dacb33bd765d2306dac</Anchor>
    <Abstract>YES if the document has been fetched from the server.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>label</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a15ac87855f8919d4eae6d662dc6fb353</Anchor>
    <Abstract>This document&amp;#39;s label.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uuidLatest</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a01799b4080d41101d64a160fac00cb9b</Anchor>
    <Abstract>The udid of the latest document of the receiver.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uuidOriginal</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a2babd44cc1b5a2ee45aec75ea475ce71</Anchor>
    <Abstract>The udid of the original document, if the receiver replaced a document.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uuidReplaces</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>aade8cc30ac5d8e22f1f4fa30f26527e1</Anchor>
    <Abstract>The udid of the replaced document, if the receiver replaced a document.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>created</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a761cde7620d1ecb3b5361881ea1332d7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nameSpace</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a3c9e8a8fc73c75b6bef306d38531dd14</Anchor>
    <Abstract>The namespace.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>record</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a850f4818dd6239fd60c379697227f3f7</Anchor>
    <Abstract>The owning record. If you change this on documents fetched from the server, you will get errors...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>suppressed</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>af9bf4dc81377b4f03db1155f4fd1d9b5</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onServer</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>ab0a5a28ab2950cee434c1ffe3588be68</Anchor>
    <Abstract>Indicates whether this document lives on the server.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>server</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a16eaad9d8c1852f6d59b595d9748bc22</Anchor>
    <Abstract>Our beloved server.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uuid</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a3bbdea7b50f5b42650336852c6c401ff</Anchor>
    <Abstract>This object&amp;#39;s udid.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>archive:forReason:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a1be83576ad6d408b0d55bf1ad2b316e2</Anchor>
    <Abstract>Archive (or unarchive) a document for the given reason.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>basePostPath</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>addf4756929723f7bda04adfac88b236b</Anchor>
    <Abstract>The base path, e.g.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cachedObjectOfType:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>ad897004d23faa4db60bc8063cfafe489</Anchor>
    <Abstract>Retrieves the object for a given type from cache.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cacheObject:asType:error:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>afc06871b51cf4d7607887101e3bc1796</Anchor>
    <Abstract>Caches the object for a given type.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>documentPath</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a039d6cb30422992d8484b6243cd9ffc5</Anchor>
    <Abstract>The path to this document, i.e.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetchMetaDocumentWithCallback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>aef370c7434b6b8362cf45bec9cbd9fa7</Anchor>
    <Abstract>Fetches the meta document for this document.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetchStatusHistoryWithCallback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a8a738a777edeba7f0ae9de8f90a13b51</Anchor>
    <Abstract>Fetch the document&amp;#39;s version history.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetchVersionsWithCallback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a1acaadb8f92fb62da6214c50b073a187</Anchor>
    <Abstract>Fetch the document&amp;#39;s version history.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasStatus:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a83cedfbe21cc33cb715c0312a2512e5c</Anchor>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initFromNode:forRecord:withMeta:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a7681c2bd841f9ead3e58518bca914dc5</Anchor>
    <Abstract>The designated initializer.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isLatest</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a9d97b9ea0934923c797a1ffd24d01e27</Anchor>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pull:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a31ceb5b6fb978361e99d4d2d62dcbdde</Anchor>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>push:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a8fd3cac97039b11d7cacccbc122a9408</Anchor>
    <Abstract>This method puts a new document on the server.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>replace:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a817fd1faedcd79a84c8801069df542dc</Anchor>
    <Abstract>This method updates the receiver&amp;#39;s version on the server with new data from the receiver&amp;#39;s properties...</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLabel:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>ab691e3d71bcbb2748152d96c5d8da360</Anchor>
    <Abstract>Label a document.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateWithMeta:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>ab90c1ce19f1c5edda798eddcc85dea58</Anchor>
    <Abstract>This method updates our udid, type and status from the given meta document.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>void:forReason:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a2558c974611c31e7b7ee77ae42aa836a</Anchor>
    <Abstract>Void (or unvoid) a document for a given reason.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cachedObjectOfType:forId:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>acb39ff4eb2a628a11ddc611a266a7bcc</Anchor>
    <Abstract>Retrieves the cached object of a given type for a given document udid.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cacheObject:asType:forId:error:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a4ef5076f5ddc9bfc93a567de80c37699</Anchor>
    <Abstract>Stores an object of a given type for the document of the given udid.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>documentClassForType:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a709c6c3260b6a07c5aa1241707a9b5b1</Anchor>
    <Abstract>Returns the class for a previously registered type, or &amp;quot;IndivoDocument&amp;quot; if the type has not been regi...</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetchReportPathForRecord:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a02d49b2bcf494d71451c5e0ae74ad7f7</Anchor>
    <Abstract>The base path to get reports for documents of this class.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerDocumentClass:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>aa1ba18a981c893671566a7de273621ed</Anchor>
    <Abstract>Our IndivoDocument subclasses call this in their +load method.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reportType</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a4c034e46939f0a3423eb9eeea1355c3c</Anchor>
    <Abstract>This name is used to construct the report path for this kind of document.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_nodeName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ade43c92af65af424ab16f717ad4d8287</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IndivoEquipment(Report)</Name>
      <APILanguage>c</APILanguage>
      <Type>cat</Type>
      <Scope>IndivoEquipment(Report)</Scope>
    </TokenIdentifier>
    <Path>category_indivo_equipment_07_report_08.html</Path>
    <DeclaredIn>IndivoEquipment+Report.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IndivoFill</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>IndivoFill</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_fill.html</Path>
    <Abstract>A class representing &amp;quot;indivo:Fill&amp;quot; objects, generated from /indivo/data_models/core/medication/model...</Abstract>
    <DeclaredIn>IndivoFill.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>date</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoFill</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_fill.html</Path>
    <Anchor>a90e233a9c61ac0694b68421a679b51dd</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dispenseDaysSupply</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoFill</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_fill.html</Path>
    <Anchor>a2f619dd24f23b9b46be1a8c2b7d140cd</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pbm</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoFill</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_fill.html</Path>
    <Anchor>a9201f73ecd4a46d3c480cb4b2227b4e2</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pharmacy</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoFill</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_fill.html</Path>
    <Anchor>aad81c9667e00dbccd9e367734828475c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>provider</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoFill</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_fill.html</Path>
    <Anchor>a45f8d7aa8c58ec2d51f60d35ae7c714d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>quantityDispensed</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoFill</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_fill.html</Path>
    <Anchor>ab6436296191444f1fde7d879b5f96618</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>creator</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a620875e739fb98afa435f372df5909e9</Anchor>
    <Abstract>The creator of the document.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>documentStatus</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a706ab192803bdc2a9e75dbea73c530c3</Anchor>
    <Abstract>This document&amp;#39;s status.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetched</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>aef7d0b6214c80dacb33bd765d2306dac</Anchor>
    <Abstract>YES if the document has been fetched from the server.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>label</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a15ac87855f8919d4eae6d662dc6fb353</Anchor>
    <Abstract>This document&amp;#39;s label.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uuidLatest</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a01799b4080d41101d64a160fac00cb9b</Anchor>
    <Abstract>The udid of the latest document of the receiver.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uuidOriginal</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a2babd44cc1b5a2ee45aec75ea475ce71</Anchor>
    <Abstract>The udid of the original document, if the receiver replaced a document.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uuidReplaces</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>aade8cc30ac5d8e22f1f4fa30f26527e1</Anchor>
    <Abstract>The udid of the replaced document, if the receiver replaced a document.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>created</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a761cde7620d1ecb3b5361881ea1332d7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nameSpace</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a3c9e8a8fc73c75b6bef306d38531dd14</Anchor>
    <Abstract>The namespace.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>record</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a850f4818dd6239fd60c379697227f3f7</Anchor>
    <Abstract>The owning record. If you change this on documents fetched from the server, you will get errors...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>suppressed</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>af9bf4dc81377b4f03db1155f4fd1d9b5</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onServer</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>ab0a5a28ab2950cee434c1ffe3588be68</Anchor>
    <Abstract>Indicates whether this document lives on the server.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>server</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a16eaad9d8c1852f6d59b595d9748bc22</Anchor>
    <Abstract>Our beloved server.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uuid</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a3bbdea7b50f5b42650336852c6c401ff</Anchor>
    <Abstract>This object&amp;#39;s udid.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>archive:forReason:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a1be83576ad6d408b0d55bf1ad2b316e2</Anchor>
    <Abstract>Archive (or unarchive) a document for the given reason.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>basePostPath</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>addf4756929723f7bda04adfac88b236b</Anchor>
    <Abstract>The base path, e.g.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cachedObjectOfType:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>ad897004d23faa4db60bc8063cfafe489</Anchor>
    <Abstract>Retrieves the object for a given type from cache.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cacheObject:asType:error:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>afc06871b51cf4d7607887101e3bc1796</Anchor>
    <Abstract>Caches the object for a given type.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>documentPath</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a039d6cb30422992d8484b6243cd9ffc5</Anchor>
    <Abstract>The path to this document, i.e.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetchMetaDocumentWithCallback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>aef370c7434b6b8362cf45bec9cbd9fa7</Anchor>
    <Abstract>Fetches the meta document for this document.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetchStatusHistoryWithCallback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a8a738a777edeba7f0ae9de8f90a13b51</Anchor>
    <Abstract>Fetch the document&amp;#39;s version history.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetchVersionsWithCallback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a1acaadb8f92fb62da6214c50b073a187</Anchor>
    <Abstract>Fetch the document&amp;#39;s version history.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasStatus:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a83cedfbe21cc33cb715c0312a2512e5c</Anchor>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initFromNode:forRecord:withMeta:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a7681c2bd841f9ead3e58518bca914dc5</Anchor>
    <Abstract>The designated initializer.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isLatest</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a9d97b9ea0934923c797a1ffd24d01e27</Anchor>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pull:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a31ceb5b6fb978361e99d4d2d62dcbdde</Anchor>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>push:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a8fd3cac97039b11d7cacccbc122a9408</Anchor>
    <Abstract>This method puts a new document on the server.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>replace:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a817fd1faedcd79a84c8801069df542dc</Anchor>
    <Abstract>This method updates the receiver&amp;#39;s version on the server with new data from the receiver&amp;#39;s properties...</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLabel:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>ab691e3d71bcbb2748152d96c5d8da360</Anchor>
    <Abstract>Label a document.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateWithMeta:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>ab90c1ce19f1c5edda798eddcc85dea58</Anchor>
    <Abstract>This method updates our udid, type and status from the given meta document.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>void:forReason:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a2558c974611c31e7b7ee77ae42aa836a</Anchor>
    <Abstract>Void (or unvoid) a document for a given reason.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cachedObjectOfType:forId:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>acb39ff4eb2a628a11ddc611a266a7bcc</Anchor>
    <Abstract>Retrieves the cached object of a given type for a given document udid.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cacheObject:asType:forId:error:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a4ef5076f5ddc9bfc93a567de80c37699</Anchor>
    <Abstract>Stores an object of a given type for the document of the given udid.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>documentClassForType:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a709c6c3260b6a07c5aa1241707a9b5b1</Anchor>
    <Abstract>Returns the class for a previously registered type, or &amp;quot;IndivoDocument&amp;quot; if the type has not been regi...</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetchReportPathForRecord:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a02d49b2bcf494d71451c5e0ae74ad7f7</Anchor>
    <Abstract>The base path to get reports for documents of this class.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerDocumentClass:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>aa1ba18a981c893671566a7de273621ed</Anchor>
    <Abstract>Our IndivoDocument subclasses call this in their +load method.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reportType</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a4c034e46939f0a3423eb9eeea1355c3c</Anchor>
    <Abstract>This name is used to construct the report path for this kind of document.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_nodeName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ade43c92af65af424ab16f717ad4d8287</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IndivoFrameworkTests</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>IndivoFrameworkTests</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_framework_tests.html</Path>
    <DeclaredIn>IndivoFrameworkTests.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>server</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoFrameworkTests</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_framework_tests.html</Path>
    <Anchor>a1900b7bf6df3fbf1aecccabfb8ba81d2</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IndivoImmunization</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>IndivoImmunization</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_immunization.html</Path>
    <Abstract>A class representing &amp;quot;indivo:Immunization&amp;quot; objects, generated from /indivo/data_models/core/immunizat...</Abstract>
    <DeclaredIn>IndivoImmunization.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>administration_status</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoImmunization</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_immunization.html</Path>
    <Anchor>a26a13ce9dc2894f7f126c3d2a2757fb8</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>date</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoImmunization</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_immunization.html</Path>
    <Anchor>af17b2098d7085e3a04854ba45d67bce8</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>product_class</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoImmunization</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_immunization.html</Path>
    <Anchor>aa44a66e94d3cd04ebc4d70f4c8e60217</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>product_class_2</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoImmunization</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_immunization.html</Path>
    <Anchor>a89b172b69b9924734a052e572aded8f4</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>product_name</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoImmunization</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_immunization.html</Path>
    <Anchor>a326076581edd5b6b5e4f40a64bc39321</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>refusal_reason</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoImmunization</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_immunization.html</Path>
    <Anchor>a486abff15055463486d0524dccfe3fee</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>creator</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a620875e739fb98afa435f372df5909e9</Anchor>
    <Abstract>The creator of the document.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>documentStatus</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a706ab192803bdc2a9e75dbea73c530c3</Anchor>
    <Abstract>This document&amp;#39;s status.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetched</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>aef7d0b6214c80dacb33bd765d2306dac</Anchor>
    <Abstract>YES if the document has been fetched from the server.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>label</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a15ac87855f8919d4eae6d662dc6fb353</Anchor>
    <Abstract>This document&amp;#39;s label.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uuidLatest</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a01799b4080d41101d64a160fac00cb9b</Anchor>
    <Abstract>The udid of the latest document of the receiver.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uuidOriginal</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a2babd44cc1b5a2ee45aec75ea475ce71</Anchor>
    <Abstract>The udid of the original document, if the receiver replaced a document.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uuidReplaces</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>aade8cc30ac5d8e22f1f4fa30f26527e1</Anchor>
    <Abstract>The udid of the replaced document, if the receiver replaced a document.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>created</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a761cde7620d1ecb3b5361881ea1332d7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nameSpace</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a3c9e8a8fc73c75b6bef306d38531dd14</Anchor>
    <Abstract>The namespace.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>record</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a850f4818dd6239fd60c379697227f3f7</Anchor>
    <Abstract>The owning record. If you change this on documents fetched from the server, you will get errors...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>suppressed</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>af9bf4dc81377b4f03db1155f4fd1d9b5</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onServer</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>ab0a5a28ab2950cee434c1ffe3588be68</Anchor>
    <Abstract>Indicates whether this document lives on the server.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>server</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a16eaad9d8c1852f6d59b595d9748bc22</Anchor>
    <Abstract>Our beloved server.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uuid</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a3bbdea7b50f5b42650336852c6c401ff</Anchor>
    <Abstract>This object&amp;#39;s udid.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>archive:forReason:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a1be83576ad6d408b0d55bf1ad2b316e2</Anchor>
    <Abstract>Archive (or unarchive) a document for the given reason.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>basePostPath</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>addf4756929723f7bda04adfac88b236b</Anchor>
    <Abstract>The base path, e.g.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cachedObjectOfType:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>ad897004d23faa4db60bc8063cfafe489</Anchor>
    <Abstract>Retrieves the object for a given type from cache.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cacheObject:asType:error:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>afc06871b51cf4d7607887101e3bc1796</Anchor>
    <Abstract>Caches the object for a given type.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>documentPath</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a039d6cb30422992d8484b6243cd9ffc5</Anchor>
    <Abstract>The path to this document, i.e.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetchMetaDocumentWithCallback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>aef370c7434b6b8362cf45bec9cbd9fa7</Anchor>
    <Abstract>Fetches the meta document for this document.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetchStatusHistoryWithCallback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a8a738a777edeba7f0ae9de8f90a13b51</Anchor>
    <Abstract>Fetch the document&amp;#39;s version history.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetchVersionsWithCallback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a1acaadb8f92fb62da6214c50b073a187</Anchor>
    <Abstract>Fetch the document&amp;#39;s version history.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasStatus:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a83cedfbe21cc33cb715c0312a2512e5c</Anchor>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initFromNode:forRecord:withMeta:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a7681c2bd841f9ead3e58518bca914dc5</Anchor>
    <Abstract>The designated initializer.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isLatest</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a9d97b9ea0934923c797a1ffd24d01e27</Anchor>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pull:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a31ceb5b6fb978361e99d4d2d62dcbdde</Anchor>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>push:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a8fd3cac97039b11d7cacccbc122a9408</Anchor>
    <Abstract>This method puts a new document on the server.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>replace:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a817fd1faedcd79a84c8801069df542dc</Anchor>
    <Abstract>This method updates the receiver&amp;#39;s version on the server with new data from the receiver&amp;#39;s properties...</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLabel:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>ab691e3d71bcbb2748152d96c5d8da360</Anchor>
    <Abstract>Label a document.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateWithMeta:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>ab90c1ce19f1c5edda798eddcc85dea58</Anchor>
    <Abstract>This method updates our udid, type and status from the given meta document.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>void:forReason:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a2558c974611c31e7b7ee77ae42aa836a</Anchor>
    <Abstract>Void (or unvoid) a document for a given reason.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cachedObjectOfType:forId:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>acb39ff4eb2a628a11ddc611a266a7bcc</Anchor>
    <Abstract>Retrieves the cached object of a given type for a given document udid.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cacheObject:asType:forId:error:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a4ef5076f5ddc9bfc93a567de80c37699</Anchor>
    <Abstract>Stores an object of a given type for the document of the given udid.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>documentClassForType:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a709c6c3260b6a07c5aa1241707a9b5b1</Anchor>
    <Abstract>Returns the class for a previously registered type, or &amp;quot;IndivoDocument&amp;quot; if the type has not been regi...</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetchReportPathForRecord:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a02d49b2bcf494d71451c5e0ae74ad7f7</Anchor>
    <Abstract>The base path to get reports for documents of this class.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerDocumentClass:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>aa1ba18a981c893671566a7de273621ed</Anchor>
    <Abstract>Our IndivoDocument subclasses call this in their +load method.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reportType</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a4c034e46939f0a3423eb9eeea1355c3c</Anchor>
    <Abstract>This name is used to construct the report path for this kind of document.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_nodeName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ade43c92af65af424ab16f717ad4d8287</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IndivoImmunization(Report)</Name>
      <APILanguage>c</APILanguage>
      <Type>cat</Type>
      <Scope>IndivoImmunization(Report)</Scope>
    </TokenIdentifier>
    <Path>category_indivo_immunization_07_report_08.html</Path>
    <DeclaredIn>IndivoImmunization+Report.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IndivoLabResult</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>IndivoLabResult</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_lab_result.html</Path>
    <Abstract>A class representing &amp;quot;indivo:LabResult&amp;quot; objects, generated from /indivo/data_models/core/lab/model.sdml.</Abstract>
    <DeclaredIn>IndivoLabResult.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>abnormal_interpretation</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoLabResult</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_lab_result.html</Path>
    <Anchor>ae2601d83fc45aee0d196a7f89c6783b5</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accession_number</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoLabResult</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_lab_result.html</Path>
    <Anchor>a2f310892a1edf8e551ed8f326654bb8f</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>collected_at</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoLabResult</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_lab_result.html</Path>
    <Anchor>a6b69ce311958d8cd3ad2ef19ff9d6373</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>collected_by_name</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoLabResult</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_lab_result.html</Path>
    <Anchor>acd3df05893982791b0071ff0eacc183c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>collected_by_org</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoLabResult</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_lab_result.html</Path>
    <Anchor>a7f1ce2c60a6bc42bceb1020e2bd8a0dd</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>collected_by_role</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoLabResult</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_lab_result.html</Path>
    <Anchor>a6dc347a278a976aa1574e2ba1047f64f</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>narrative_result</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoLabResult</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_lab_result.html</Path>
    <Anchor>aee5d944823e681b5aec7e1fb801ac2d8</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>notes</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoLabResult</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_lab_result.html</Path>
    <Anchor>adb8e7f3f97e2d9316a5fb1eeade40044</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>quantitative_result</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoLabResult</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_lab_result.html</Path>
    <Anchor>ae3a0c0d2124fdd773c583f4633da80c1</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>status</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoLabResult</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_lab_result.html</Path>
    <Anchor>a2b53de9f0f7c32f50693215cda7093ca</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>test_name</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoLabResult</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_lab_result.html</Path>
    <Anchor>a37d5ee4920d78a006cd180b0b3828f8e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>creator</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a620875e739fb98afa435f372df5909e9</Anchor>
    <Abstract>The creator of the document.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>documentStatus</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a706ab192803bdc2a9e75dbea73c530c3</Anchor>
    <Abstract>This document&amp;#39;s status.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetched</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>aef7d0b6214c80dacb33bd765d2306dac</Anchor>
    <Abstract>YES if the document has been fetched from the server.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>label</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a15ac87855f8919d4eae6d662dc6fb353</Anchor>
    <Abstract>This document&amp;#39;s label.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uuidLatest</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a01799b4080d41101d64a160fac00cb9b</Anchor>
    <Abstract>The udid of the latest document of the receiver.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uuidOriginal</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a2babd44cc1b5a2ee45aec75ea475ce71</Anchor>
    <Abstract>The udid of the original document, if the receiver replaced a document.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uuidReplaces</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>aade8cc30ac5d8e22f1f4fa30f26527e1</Anchor>
    <Abstract>The udid of the replaced document, if the receiver replaced a document.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>created</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a761cde7620d1ecb3b5361881ea1332d7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nameSpace</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a3c9e8a8fc73c75b6bef306d38531dd14</Anchor>
    <Abstract>The namespace.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>record</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a850f4818dd6239fd60c379697227f3f7</Anchor>
    <Abstract>The owning record. If you change this on documents fetched from the server, you will get errors...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>suppressed</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>af9bf4dc81377b4f03db1155f4fd1d9b5</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onServer</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>ab0a5a28ab2950cee434c1ffe3588be68</Anchor>
    <Abstract>Indicates whether this document lives on the server.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>server</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a16eaad9d8c1852f6d59b595d9748bc22</Anchor>
    <Abstract>Our beloved server.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uuid</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a3bbdea7b50f5b42650336852c6c401ff</Anchor>
    <Abstract>This object&amp;#39;s udid.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>archive:forReason:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a1be83576ad6d408b0d55bf1ad2b316e2</Anchor>
    <Abstract>Archive (or unarchive) a document for the given reason.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>basePostPath</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>addf4756929723f7bda04adfac88b236b</Anchor>
    <Abstract>The base path, e.g.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cachedObjectOfType:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>ad897004d23faa4db60bc8063cfafe489</Anchor>
    <Abstract>Retrieves the object for a given type from cache.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cacheObject:asType:error:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>afc06871b51cf4d7607887101e3bc1796</Anchor>
    <Abstract>Caches the object for a given type.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>documentPath</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a039d6cb30422992d8484b6243cd9ffc5</Anchor>
    <Abstract>The path to this document, i.e.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetchMetaDocumentWithCallback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>aef370c7434b6b8362cf45bec9cbd9fa7</Anchor>
    <Abstract>Fetches the meta document for this document.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetchStatusHistoryWithCallback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a8a738a777edeba7f0ae9de8f90a13b51</Anchor>
    <Abstract>Fetch the document&amp;#39;s version history.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetchVersionsWithCallback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a1acaadb8f92fb62da6214c50b073a187</Anchor>
    <Abstract>Fetch the document&amp;#39;s version history.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasStatus:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a83cedfbe21cc33cb715c0312a2512e5c</Anchor>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initFromNode:forRecord:withMeta:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a7681c2bd841f9ead3e58518bca914dc5</Anchor>
    <Abstract>The designated initializer.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isLatest</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a9d97b9ea0934923c797a1ffd24d01e27</Anchor>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pull:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a31ceb5b6fb978361e99d4d2d62dcbdde</Anchor>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>push:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a8fd3cac97039b11d7cacccbc122a9408</Anchor>
    <Abstract>This method puts a new document on the server.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>replace:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a817fd1faedcd79a84c8801069df542dc</Anchor>
    <Abstract>This method updates the receiver&amp;#39;s version on the server with new data from the receiver&amp;#39;s properties...</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLabel:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>ab691e3d71bcbb2748152d96c5d8da360</Anchor>
    <Abstract>Label a document.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateWithMeta:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>ab90c1ce19f1c5edda798eddcc85dea58</Anchor>
    <Abstract>This method updates our udid, type and status from the given meta document.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>void:forReason:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a2558c974611c31e7b7ee77ae42aa836a</Anchor>
    <Abstract>Void (or unvoid) a document for a given reason.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cachedObjectOfType:forId:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>acb39ff4eb2a628a11ddc611a266a7bcc</Anchor>
    <Abstract>Retrieves the cached object of a given type for a given document udid.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cacheObject:asType:forId:error:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a4ef5076f5ddc9bfc93a567de80c37699</Anchor>
    <Abstract>Stores an object of a given type for the document of the given udid.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>documentClassForType:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a709c6c3260b6a07c5aa1241707a9b5b1</Anchor>
    <Abstract>Returns the class for a previously registered type, or &amp;quot;IndivoDocument&amp;quot; if the type has not been regi...</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetchReportPathForRecord:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a02d49b2bcf494d71451c5e0ae74ad7f7</Anchor>
    <Abstract>The base path to get reports for documents of this class.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerDocumentClass:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>aa1ba18a981c893671566a7de273621ed</Anchor>
    <Abstract>Our IndivoDocument subclasses call this in their +load method.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reportType</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a4c034e46939f0a3423eb9eeea1355c3c</Anchor>
    <Abstract>This name is used to construct the report path for this kind of document.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_nodeName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ade43c92af65af424ab16f717ad4d8287</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IndivoLabResult(Report)</Name>
      <APILanguage>c</APILanguage>
      <Type>cat</Type>
      <Scope>IndivoLabResult(Report)</Scope>
    </TokenIdentifier>
    <Path>category_indivo_lab_result_07_report_08.html</Path>
    <DeclaredIn>IndivoLabResult+Report.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IndivoLoginViewController</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>IndivoLoginViewController</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_login_view_controller.html</Path>
    <Abstract>This class provides the view controller to log the user in.</Abstract>
    <DeclaredIn>IndivoLoginViewController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cancel:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoLoginViewController</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_login_view_controller.html</Path>
    <Anchor>a9848b96be8b4ecf60f33ebf560bd5137</Anchor>
    <Abstract>Dismisses the login view as a cancel operation.</Abstract>
    <DeclaredIn>IndivoLoginViewController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dismiss:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoLoginViewController</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_login_view_controller.html</Path>
    <Anchor>a1e149a944ef09614307c627cec602dcd</Anchor>
    <Abstract>Dismisses the view.</Abstract>
    <DeclaredIn>IndivoLoginViewController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dismissAnimated:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoLoginViewController</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_login_view_controller.html</Path>
    <Anchor>aa3c6ad892796bb5f5341ed81e9c96101</Anchor>
    <Abstract>Dismisses the view.</Abstract>
    <DeclaredIn>IndivoLoginViewController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hideLoadingIndicator:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoLoginViewController</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_login_view_controller.html</Path>
    <Anchor>a84dcff41d64d6e81813a6fd56579cf1f</Anchor>
    <DeclaredIn>IndivoLoginViewController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadURL:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoLoginViewController</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_login_view_controller.html</Path>
    <Anchor>a221d96e0f3a37b08d510e9124ec73189</Anchor>
    <Abstract>Loads a given URL.</Abstract>
    <DeclaredIn>IndivoLoginViewController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reload:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoLoginViewController</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_login_view_controller.html</Path>
    <Anchor>a15a0ffb85c2f699490b37678397964e5</Anchor>
    <Abstract>Reloads current URL.</Abstract>
    <DeclaredIn>IndivoLoginViewController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>showLoadingIndicator:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoLoginViewController</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_login_view_controller.html</Path>
    <Anchor>a33d3cad62311af3e7f10284b27e1c9ad</Anchor>
    <DeclaredIn>IndivoLoginViewController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>backButton</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoLoginViewController</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_login_view_controller.html</Path>
    <Anchor>a0f8603dc902d9b01606fda22d7eb3066</Anchor>
    <Abstract>To navigate back.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cancelButton</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoLoginViewController</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_login_view_controller.html</Path>
    <Anchor>a788a8445893ed6d1bddb98dc2a609a52</Anchor>
    <Abstract>The cancel button which dismisses the login view.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>delegate</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoLoginViewController</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_login_view_controller.html</Path>
    <Anchor>a192b7478ea12133bec00a93064745044</Anchor>
    <Abstract>The delegate to receive callbacks.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>startURL</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoLoginViewController</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_login_view_controller.html</Path>
    <Anchor>a53a4a61f8c3af838fc91e3cca82db299</Anchor>
    <Abstract>The URL to load initially.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>titleBar</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoLoginViewController</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_login_view_controller.html</Path>
    <Anchor>a5ad38f1ccfb94af9989e7a2ce66ebeb3</Anchor>
    <Abstract>A handle to the title bar being displayed.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>webView</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoLoginViewController</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_login_view_controller.html</Path>
    <Anchor>a2005bff8232034085a3a1a59d7ee3d14</Anchor>
    <Abstract>The web view to present HTML.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IndivoLoginViewControllerDelegate</Name>
      <APILanguage>c</APILanguage>
      <Type>intf</Type>
      <Scope>IndivoLoginViewControllerDelegate</Scope>
    </TokenIdentifier>
    <Path>protocol_indivo_login_view_controller_delegate-p.html</Path>
    <Abstract>A protocol to receive notifications from an IndivoLoginViewController.</Abstract>
    <DeclaredIn>IndivoLoginViewController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>callbackSchemeForLoginView:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>IndivoLoginViewControllerDelegate-p</Scope>
    </TokenIdentifier>
    <Path>protocol_indivo_login_view_controller_delegate-p.html</Path>
    <Anchor>a28c1c78fe9efa30247cf06fcfa150ca2</Anchor>
    <Abstract>Before loading a URL that URL is checked whether the scheme corresponds to the internal scheme...</Abstract>
    <DeclaredIn>IndivoLoginViewController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loginView:didReceiveVerifier:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>IndivoLoginViewControllerDelegate-p</Scope>
    </TokenIdentifier>
    <Path>protocol_indivo_login_view_controller_delegate-p.html</Path>
    <Anchor>a5fe231aeae907c0d1a123c341fb6f561</Anchor>
    <Abstract>Called when the login screen gets called with our verifier callback URL.</Abstract>
    <DeclaredIn>IndivoLoginViewController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loginView:didSelectRecordId:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>IndivoLoginViewControllerDelegate-p</Scope>
    </TokenIdentifier>
    <Path>protocol_indivo_login_view_controller_delegate-p.html</Path>
    <Anchor>ad33f934cca4ea8e93cd342f937555ab4</Anchor>
    <Abstract>Called when a record was selected.</Abstract>
    <DeclaredIn>IndivoLoginViewController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loginViewDidCancel:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>IndivoLoginViewControllerDelegate-p</Scope>
    </TokenIdentifier>
    <Path>protocol_indivo_login_view_controller_delegate-p.html</Path>
    <Anchor>ae1c170e536da6cacb98ffcc109f66dec</Anchor>
    <Abstract>The user dismissed the login screen without loggin in successfully.</Abstract>
    <DeclaredIn>IndivoLoginViewController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loginViewDidLogout:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>IndivoLoginViewControllerDelegate-p</Scope>
    </TokenIdentifier>
    <Path>protocol_indivo_login_view_controller_delegate-p.html</Path>
    <Anchor>a00d4e68c7f657c04e04ca935284f643e</Anchor>
    <Abstract>If the user logged out, we want to discard cached data.</Abstract>
    <DeclaredIn>IndivoLoginViewController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IndivoMedication</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>IndivoMedication</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_medication.html</Path>
    <Abstract>A class representing &amp;quot;indivo:Medication&amp;quot; objects, generated from /indivo/data_models/core/medication/...</Abstract>
    <DeclaredIn>IndivoMedication.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>displayName</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoMedication</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_medication.html</Path>
    <Anchor>ad2ffd2ad99445a1aff08ad1673c5df73</Anchor>
    <Abstract>Tries to find the best name to display.</Abstract>
    <DeclaredIn>IndivoMedication+Report.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadPillImageBypassingCache:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoMedication</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_medication.html</Path>
    <Anchor>a2097c39e9733e42597f32173bf349132</Anchor>
    <Abstract>This method tries to load an image of the medication, caching it automatically (once implemented)...</Abstract>
    <DeclaredIn>IndivoMedication+Report.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pillImage</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoMedication</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_medication.html</Path>
    <Anchor>a44c7c2b1cdf627d002e72972f697aeaa</Anchor>
    <DeclaredIn>IndivoMedication+Report.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>archive:forReason:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a1be83576ad6d408b0d55bf1ad2b316e2</Anchor>
    <Abstract>Archive (or unarchive) a document for the given reason.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>basePostPath</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>addf4756929723f7bda04adfac88b236b</Anchor>
    <Abstract>The base path, e.g.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cachedObjectOfType:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>ad897004d23faa4db60bc8063cfafe489</Anchor>
    <Abstract>Retrieves the object for a given type from cache.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cacheObject:asType:error:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>afc06871b51cf4d7607887101e3bc1796</Anchor>
    <Abstract>Caches the object for a given type.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>documentPath</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a039d6cb30422992d8484b6243cd9ffc5</Anchor>
    <Abstract>The path to this document, i.e.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetchMetaDocumentWithCallback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>aef370c7434b6b8362cf45bec9cbd9fa7</Anchor>
    <Abstract>Fetches the meta document for this document.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetchStatusHistoryWithCallback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a8a738a777edeba7f0ae9de8f90a13b51</Anchor>
    <Abstract>Fetch the document&amp;#39;s version history.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetchVersionsWithCallback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a1acaadb8f92fb62da6214c50b073a187</Anchor>
    <Abstract>Fetch the document&amp;#39;s version history.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasStatus:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a83cedfbe21cc33cb715c0312a2512e5c</Anchor>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initFromNode:forRecord:withMeta:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a7681c2bd841f9ead3e58518bca914dc5</Anchor>
    <Abstract>The designated initializer.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isLatest</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a9d97b9ea0934923c797a1ffd24d01e27</Anchor>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pull:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a31ceb5b6fb978361e99d4d2d62dcbdde</Anchor>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>push:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a8fd3cac97039b11d7cacccbc122a9408</Anchor>
    <Abstract>This method puts a new document on the server.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>replace:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a817fd1faedcd79a84c8801069df542dc</Anchor>
    <Abstract>This method updates the receiver&amp;#39;s version on the server with new data from the receiver&amp;#39;s properties...</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLabel:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>ab691e3d71bcbb2748152d96c5d8da360</Anchor>
    <Abstract>Label a document.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateWithMeta:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>ab90c1ce19f1c5edda798eddcc85dea58</Anchor>
    <Abstract>This method updates our udid, type and status from the given meta document.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>void:forReason:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a2558c974611c31e7b7ee77ae42aa836a</Anchor>
    <Abstract>Void (or unvoid) a document for a given reason.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>documentXML</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>acfa5997948281762df57fdf9bd0ffdaf</Anchor>
    <Abstract>Returns an XML representation of the receiver, like &amp;quot;xml&amp;quot; does, but adds namespace information...</Abstract>
    <DeclaredIn>IndivoAbstractDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flatDocumentXML</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a0fd5635c7261e8b7e889bd6edd48f482</Anchor>
    <Abstract>Returns the Indivo 2.0 flat XML format for a document.</Abstract>
    <DeclaredIn>IndivoAbstractDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flatXML</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a42554fdf26af89d9bcba86b7a44d7d32</Anchor>
    <Abstract>Returns the Indivo 2.0 flat XML format.</Abstract>
    <DeclaredIn>IndivoAbstractDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initFromNode:forRecord:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a38b0b76a05b7258de71ae71eca82a9d2</Anchor>
    <Abstract>The designated initializer, initializes an instance from an XML node.</Abstract>
    <DeclaredIn>IndivoAbstractDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>forceNotOnServer</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>ac274479305ae9b3f49c9dd24572afe96</Anchor>
    <Abstract>This is provided for subclasses, the fact that onServer is readonly but settable by this and markOnSe...</Abstract>
    <DeclaredIn>INServerObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a45970634b7aa5f86e7479c1599a7d98c</Anchor>
    <Abstract>Shortcut for GETting data.</Abstract>
    <DeclaredIn>INServerObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get:parameters:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a17f98bd457ac77a451c6b730f97beae2</Anchor>
    <Abstract>Shortcut for GETting data with parameters.</Abstract>
    <DeclaredIn>INServerObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initFromNode:withServer:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a4828394e023d6346442ec59512198300</Anchor>
    <Abstract>The designated initializer.</Abstract>
    <DeclaredIn>INServerObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a40df090a1813e6d965efce8fbf58295e</Anchor>
    <Abstract>Shortcut method to test if the document has the given ID.</Abstract>
    <DeclaredIn>INServerObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>markOnServer</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a08067a7fd061216248615f841984c608</Anchor>
    <Abstract>Sets onServer to YES for the receiver.</Abstract>
    <DeclaredIn>INServerObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>performMethod:withBody:orParameters:httpMethod:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a3e995d3df3fe4fb6769f63d4f3c6e216</Anchor>
    <Abstract>The basic method to perform REST methods on the server with App credentials.</Abstract>
    <DeclaredIn>INServerObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>post:body:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a7b1df3e6eb0a567205156e9826a7d0c0</Anchor>
    <Abstract>Shortcut for POSTing body data.</Abstract>
    <DeclaredIn>INServerObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>post:parameters:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a070d06400465144dd85cd731a8aab5bf</Anchor>
    <Abstract>Shortcut for POSTing parameters.</Abstract>
    <DeclaredIn>INServerObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>put:body:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a914bdf0c6dffcea761cd795937d03271</Anchor>
    <Abstract>Shortcut for PUTting data.</Abstract>
    <DeclaredIn>INServerObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>drugName</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoMedication</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_medication.html</Path>
    <Anchor>ac4e4022f04507472a0ada7f36b5884f4</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>endDate</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoMedication</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_medication.html</Path>
    <Anchor>a0108e4791adb0d9dc7f23f7da31f7a13</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frequency</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoMedication</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_medication.html</Path>
    <Anchor>a3135b5df6d8d310e8a1819a3f5d4e688</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fulfillments</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoMedication</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_medication.html</Path>
    <Anchor>a298c521feacbf66dd0d7ff709e42cd26</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>instructions</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoMedication</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_medication.html</Path>
    <Anchor>abc8005bfc2621ee9e143e23ff2cd1833</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>provenance</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoMedication</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_medication.html</Path>
    <Anchor>acc15ae58bdc48c67726b8786b609cf9a</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>quantity</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoMedication</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_medication.html</Path>
    <Anchor>a431e2b8b1337896191207b695a40133e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>startDate</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoMedication</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_medication.html</Path>
    <Anchor>a9a350dfae2325862f853d7b8b75c2b04</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>creator</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a620875e739fb98afa435f372df5909e9</Anchor>
    <Abstract>The creator of the document.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>documentStatus</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a706ab192803bdc2a9e75dbea73c530c3</Anchor>
    <Abstract>This document&amp;#39;s status.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetched</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>aef7d0b6214c80dacb33bd765d2306dac</Anchor>
    <Abstract>YES if the document has been fetched from the server.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>label</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a15ac87855f8919d4eae6d662dc6fb353</Anchor>
    <Abstract>This document&amp;#39;s label.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uuidLatest</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a01799b4080d41101d64a160fac00cb9b</Anchor>
    <Abstract>The udid of the latest document of the receiver.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uuidOriginal</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a2babd44cc1b5a2ee45aec75ea475ce71</Anchor>
    <Abstract>The udid of the original document, if the receiver replaced a document.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uuidReplaces</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>aade8cc30ac5d8e22f1f4fa30f26527e1</Anchor>
    <Abstract>The udid of the replaced document, if the receiver replaced a document.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>created</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a761cde7620d1ecb3b5361881ea1332d7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nameSpace</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a3c9e8a8fc73c75b6bef306d38531dd14</Anchor>
    <Abstract>The namespace.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>record</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a850f4818dd6239fd60c379697227f3f7</Anchor>
    <Abstract>The owning record. If you change this on documents fetched from the server, you will get errors...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>suppressed</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>af9bf4dc81377b4f03db1155f4fd1d9b5</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onServer</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>ab0a5a28ab2950cee434c1ffe3588be68</Anchor>
    <Abstract>Indicates whether this document lives on the server.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>server</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a16eaad9d8c1852f6d59b595d9748bc22</Anchor>
    <Abstract>Our beloved server.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uuid</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a3bbdea7b50f5b42650336852c6c401ff</Anchor>
    <Abstract>This object&amp;#39;s udid.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cachedObjectOfType:forId:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>acb39ff4eb2a628a11ddc611a266a7bcc</Anchor>
    <Abstract>Retrieves the cached object of a given type for a given document udid.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cacheObject:asType:forId:error:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a4ef5076f5ddc9bfc93a567de80c37699</Anchor>
    <Abstract>Stores an object of a given type for the document of the given udid.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>documentClassForType:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a709c6c3260b6a07c5aa1241707a9b5b1</Anchor>
    <Abstract>Returns the class for a previously registered type, or &amp;quot;IndivoDocument&amp;quot; if the type has not been regi...</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetchReportPathForRecord:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a02d49b2bcf494d71451c5e0ae74ad7f7</Anchor>
    <Abstract>The base path to get reports for documents of this class.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerDocumentClass:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>aa1ba18a981c893671566a7de273621ed</Anchor>
    <Abstract>Our IndivoDocument subclasses call this in their +load method.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reportType</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a4c034e46939f0a3423eb9eeea1355c3c</Anchor>
    <Abstract>This name is used to construct the report path for this kind of document.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_nodeName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ade43c92af65af424ab16f717ad4d8287</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IndivoMedication(Report)</Name>
      <APILanguage>c</APILanguage>
      <Type>cat</Type>
      <Scope>IndivoMedication(Report)</Scope>
    </TokenIdentifier>
    <Path>category_indivo_medication_07_report_08.html</Path>
    <DeclaredIn>IndivoMedication+Report.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>displayName</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
      <Scope>IndivoMedication(Report)</Scope>
    </TokenIdentifier>
    <Path>category_indivo_medication_07_report_08.html</Path>
    <Anchor>ad2ffd2ad99445a1aff08ad1673c5df73</Anchor>
    <Abstract>Tries to find the best name to display.</Abstract>
    <DeclaredIn>IndivoMedication+Report.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadPillImageBypassingCache:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
      <Scope>IndivoMedication(Report)</Scope>
    </TokenIdentifier>
    <Path>category_indivo_medication_07_report_08.html</Path>
    <Anchor>a2097c39e9733e42597f32173bf349132</Anchor>
    <Abstract>This method tries to load an image of the medication, caching it automatically (once implemented)...</Abstract>
    <DeclaredIn>IndivoMedication+Report.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pillImage</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
      <Scope>IndivoMedication(Report)</Scope>
    </TokenIdentifier>
    <Path>category_indivo_medication_07_report_08.html</Path>
    <Anchor>a44c7c2b1cdf627d002e72972f697aeaa</Anchor>
    <DeclaredIn>IndivoMedication+Report.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IndivoMetaDocument</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>IndivoMetaDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_meta_document.html</Path>
    <Abstract>Represents metadata relating to a given IndivoDocument.</Abstract>
    <DeclaredIn>IndivoMetaDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createdAt</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoMetaDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_meta_document.html</Path>
    <Anchor>a9d059b04245f641066160584ead22642</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>creator</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoMetaDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_meta_document.html</Path>
    <Anchor>ab9daaf55562cc19e260537d634bebb06</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>digest</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoMetaDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_meta_document.html</Path>
    <Anchor>a309eb3ec23044abba8f44dadbc197af0</Anchor>
    <Abstract>Metadata: Digest.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>document</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoMetaDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_meta_document.html</Path>
    <Anchor>adefdd1d1f0b18ace58527c285c75b068</Anchor>
    <Abstract>The represented document.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>documentClass</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoMetaDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_meta_document.html</Path>
    <Anchor>a5d0ded5aeb8be77d0644a397d40911ca</Anchor>
    <Abstract>The class of document we represent. &amp;quot;IndivoDocument&amp;quot; by default.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>latest</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoMetaDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_meta_document.html</Path>
    <Anchor>a5f223b1f5e5895ca4846bb943e74c228</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nevershare</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoMetaDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_meta_document.html</Path>
    <Anchor>ad632d1157a9d0d6ff3150b68d1ca72c8</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>original</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoMetaDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_meta_document.html</Path>
    <Anchor>a22c238681197023ea2cf143804620dd8</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>replacedBy</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoMetaDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_meta_document.html</Path>
    <Anchor>a0431f31618299ab606d3533e97b859c4</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>replaces</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoMetaDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_meta_document.html</Path>
    <Anchor>a5ed4045bcc58f39feebe361695be4b82</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>status</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoMetaDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_meta_document.html</Path>
    <Anchor>a97a5d5748077effdb03aa2cfd4f23127</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>suppressedAt</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoMetaDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_meta_document.html</Path>
    <Anchor>a52e4f469a987822bbc3f90445f71c57e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>suppressor</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoMetaDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_meta_document.html</Path>
    <Anchor>ac77e41f09cea8b5ba05b3ae0ae0f243e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoMetaDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_meta_document.html</Path>
    <Anchor>ae5b9876476166ed219b2383789476194</Anchor>
    <Abstract>This document&amp;#39;s type.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>created</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a761cde7620d1ecb3b5361881ea1332d7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nameSpace</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a3c9e8a8fc73c75b6bef306d38531dd14</Anchor>
    <Abstract>The namespace.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>record</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a850f4818dd6239fd60c379697227f3f7</Anchor>
    <Abstract>The owning record. If you change this on documents fetched from the server, you will get errors...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>suppressed</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>af9bf4dc81377b4f03db1155f4fd1d9b5</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onServer</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>ab0a5a28ab2950cee434c1ffe3588be68</Anchor>
    <Abstract>Indicates whether this document lives on the server.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>server</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a16eaad9d8c1852f6d59b595d9748bc22</Anchor>
    <Abstract>Our beloved server.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uuid</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a3bbdea7b50f5b42650336852c6c401ff</Anchor>
    <Abstract>This object&amp;#39;s udid.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>documentXML</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>acfa5997948281762df57fdf9bd0ffdaf</Anchor>
    <Abstract>Returns an XML representation of the receiver, like &amp;quot;xml&amp;quot; does, but adds namespace information...</Abstract>
    <DeclaredIn>IndivoAbstractDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flatDocumentXML</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a0fd5635c7261e8b7e889bd6edd48f482</Anchor>
    <Abstract>Returns the Indivo 2.0 flat XML format for a document.</Abstract>
    <DeclaredIn>IndivoAbstractDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flatXML</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a42554fdf26af89d9bcba86b7a44d7d32</Anchor>
    <Abstract>Returns the Indivo 2.0 flat XML format.</Abstract>
    <DeclaredIn>IndivoAbstractDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initFromNode:forRecord:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a38b0b76a05b7258de71ae71eca82a9d2</Anchor>
    <Abstract>The designated initializer, initializes an instance from an XML node.</Abstract>
    <DeclaredIn>IndivoAbstractDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>classForProperty:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>aa9331d4603241068d2d29481fa8cb581</Anchor>
    <Abstract>Returns the class of a property from the property map dictionary.</Abstract>
    <DeclaredIn>IndivoAbstractDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nameSpace</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a89f514a9bd6feceffb555de1ba7a879c</Anchor>
    <DeclaredIn>IndivoAbstractDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>newWithRecord:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a4b2dd239c2475800223f51d64777bc9b</Anchor>
    <Abstract>To get a new instance that must be pushed to the server.</Abstract>
    <DeclaredIn>IndivoAbstractDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>propertyClassMapper</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a3bb2b4fd5a3b1ef11798f8fdabba821e</Anchor>
    <Abstract>The automatically generated IndivoDocument subclasses return a dictionary with property-&amp;gt;class mappin...</Abstract>
    <DeclaredIn>IndivoAbstractDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>useFlatXMLFormat</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>afda78beb168898f6424a11b8b5ca0764</Anchor>
    <Abstract>Implementing this to have some flexibility about the XML format to use on the road to Indivo 2...</Abstract>
    <DeclaredIn>IndivoAbstractDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_nodeName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ade43c92af65af424ab16f717ad4d8287</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IndivoMockServer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>IndivoMockServer</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_mock_server.html</Path>
    <Abstract>Mock Server to replace IndivoServer for unit testing.</Abstract>
    <DeclaredIn>IndivoMockServer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readFixture:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoMockServer</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_mock_server.html</Path>
    <Anchor>a9dbdcbc62dc44ebaf284e464cce0ed4d</Anchor>
    <DeclaredIn>IndivoMockServer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>authenticate:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoServer</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_server.html</Path>
    <Anchor>a072b7e8d4c448b34967e930affafd94d</Anchor>
    <Abstract>Strips current credentials and then does the OAuth dance again.</Abstract>
    <DeclaredIn>IndivoServer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>authorizeCallbackURL</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoServer</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_server.html</Path>
    <Anchor>ab5ea069a1393e85e8ba51d90d1b5053e</Anchor>
    <Abstract>The callback to feed to authorizeURL.</Abstract>
    <DeclaredIn>IndivoServer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>callDidFinish:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoServer</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_server.html</Path>
    <Anchor>a89a0ae3cbac5f6e578736b1519ba07cb</Anchor>
    <Abstract>Callback to let us know a call has finished.</Abstract>
    <DeclaredIn>IndivoServer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createOAuthWithAuthMethodClass:error:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoServer</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_server.html</Path>
    <Anchor>abcea0054ad26f5374e57d00e77043b61</Anchor>
    <Abstract>Creates a new MPOAuthAPI instance with our current settings.</Abstract>
    <DeclaredIn>IndivoServer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetchAppSpecificDocumentsWithCallback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoServer</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_server.html</Path>
    <Anchor>a0f7f6e707ac2afbfe46a53e880ca3b11</Anchor>
    <Abstract>Fetches global, app-specific documents.</Abstract>
    <DeclaredIn>IndivoServer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>performCall:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoServer</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_server.html</Path>
    <Anchor>a9e04fb46b50e466e8c9ddbfd9b6ee9ed</Anchor>
    <Abstract>Perform a method on our server This method is usally called by INServerObject subclasses, but you can use it bare if you wish.</Abstract>
    <DeclaredIn>IndivoServer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readyToConnect:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoServer</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_server.html</Path>
    <Anchor>ac7357aa8d3fa22b6f7afd0b1be2b7e3e</Anchor>
    <DeclaredIn>IndivoServer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>recordWithId:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoServer</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_server.html</Path>
    <Anchor>ae6cb585bdcd118f5bbe1791fb7428e63</Anchor>
    <Abstract>Obviously returns the record with the given id, returns nil if it is not found.</Abstract>
    <DeclaredIn>IndivoServer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>selectRecord:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoServer</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_server.html</Path>
    <Anchor>ad02578c0e149ae993cc34b5af1704776</Anchor>
    <Abstract>This is the main authentication entry point, this method will ask the delegate where to present a log...</Abstract>
    <DeclaredIn>IndivoServer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldAutomaticallyAuthenticateFrom:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoServer</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_server.html</Path>
    <Anchor>a2eb477d38a1f1ba7d4bb56571f85b10f</Anchor>
    <Abstract>Callback when the call is stuck at user authorization.</Abstract>
    <DeclaredIn>IndivoServer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>suspendCall:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoServer</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_server.html</Path>
    <Anchor>a0f5c5667721f5d6b5e369f29b823c55d</Anchor>
    <Abstract>Dequeues a call without finishing it.</Abstract>
    <DeclaredIn>IndivoServer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>callbackSchemeForLoginView:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>IndivoLoginViewControllerDelegate-p</Scope>
    </TokenIdentifier>
    <Path>protocol_indivo_login_view_controller_delegate-p.html</Path>
    <Anchor>a28c1c78fe9efa30247cf06fcfa150ca2</Anchor>
    <Abstract>Before loading a URL that URL is checked whether the scheme corresponds to the internal scheme...</Abstract>
    <DeclaredIn>IndivoLoginViewController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loginView:didReceiveVerifier:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>IndivoLoginViewControllerDelegate-p</Scope>
    </TokenIdentifier>
    <Path>protocol_indivo_login_view_controller_delegate-p.html</Path>
    <Anchor>a5fe231aeae907c0d1a123c341fb6f561</Anchor>
    <Abstract>Called when the login screen gets called with our verifier callback URL.</Abstract>
    <DeclaredIn>IndivoLoginViewController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loginView:didSelectRecordId:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>IndivoLoginViewControllerDelegate-p</Scope>
    </TokenIdentifier>
    <Path>protocol_indivo_login_view_controller_delegate-p.html</Path>
    <Anchor>ad33f934cca4ea8e93cd342f937555ab4</Anchor>
    <Abstract>Called when a record was selected.</Abstract>
    <DeclaredIn>IndivoLoginViewController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loginViewDidCancel:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>IndivoLoginViewControllerDelegate-p</Scope>
    </TokenIdentifier>
    <Path>protocol_indivo_login_view_controller_delegate-p.html</Path>
    <Anchor>ae1c170e536da6cacb98ffcc109f66dec</Anchor>
    <Abstract>The user dismissed the login screen without loggin in successfully.</Abstract>
    <DeclaredIn>IndivoLoginViewController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loginViewDidLogout:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>IndivoLoginViewControllerDelegate-p</Scope>
    </TokenIdentifier>
    <Path>protocol_indivo_login_view_controller_delegate-p.html</Path>
    <Anchor>a00d4e68c7f657c04e04ca935284f643e</Anchor>
    <Abstract>If the user logged out, we want to discard cached data.</Abstract>
    <DeclaredIn>IndivoLoginViewController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mockMappings</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoMockServer</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_mock_server.html</Path>
    <Anchor>a5c6cf8683388db2aff08f37adae53df9</Anchor>
    <Abstract>Two dimensional, first level is the method (GET, POST, ...), second a mapping path -&amp;gt; fixture...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mockRecord</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoMockServer</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_mock_server.html</Path>
    <Anchor>a3e8515430c239bbe44f5a36b2266ad16</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>activeRecord</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoServer</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_server.html</Path>
    <Anchor>af692b5354e33f890db0c70bc915b7526</Anchor>
    <Abstract>The currently active record.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>activeRecordId</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoServer</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_server.html</Path>
    <Anchor>a8b032047f58de4245421f68c08b9195b</Anchor>
    <Abstract>Shortcut method to get the id of the currently active record.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>appId</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoServer</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_server.html</Path>
    <Anchor>a87c1c70a83fa22230f906db39b436167</Anchor>
    <Abstract>The id of the app as it is known on the server.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>callbackScheme</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoServer</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_server.html</Path>
    <Anchor>ad26d07e5c78b0dffc4fa950e728aca15</Anchor>
    <Abstract>Defaults to &amp;quot;indivo-framework&amp;quot;, but you can use your own.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>consumerKey</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoServer</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_server.html</Path>
    <Anchor>a048721f5d2aef7fdcb1b569e802702e5</Anchor>
    <Abstract>The consumer key for the app.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>consumerSecret</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoServer</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_server.html</Path>
    <Anchor>a66b0c9e9b327cc8a020b8fd46b2f0332</Anchor>
    <Abstract>The consumer secret for the app.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>delegate</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoServer</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_server.html</Path>
    <Anchor>a054ebb1cdb08d9574194aa7a345be6f0</Anchor>
    <Abstract>A delegate to receive notifications.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>knownRecords</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoServer</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_server.html</Path>
    <Anchor>ae1330e041887317be1c9a8ab95b103d0</Anchor>
    <Abstract>A cache of the known records on this server. Not currently used by the framework.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lastOAuthVerifier</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoServer</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_server.html</Path>
    <Anchor>aae31ce425a66a1aa421b31b77ea055ef</Anchor>
    <Abstract>Storing our OAuth verifier here until MPOAuth asks for it.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>storeCredentials</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoServer</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_server.html</Path>
    <Anchor>a88f3c927b52860479b1499ad3ffc4b36</Anchor>
    <Abstract>NO by default. If you set this to YES, a successful login will save credentials to the system keychai...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ui_url</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoServer</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_server.html</Path>
    <Anchor>a340ebb7152b1f564c17b39c86ab9c34c</Anchor>
    <Abstract>The UI-server URL (needed for login)</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>url</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoServer</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_server.html</Path>
    <Anchor>a26821b3ea346301afdb5d7b644e53b2e</Anchor>
    <Abstract>The server URL.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serverWithDelegate:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoServer</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_server.html</Path>
    <Anchor>afa24e11d48777d3137c07c2e37caa4a5</Anchor>
    <Abstract>A convenience constructor creating the server for the given delegate.</Abstract>
    <DeclaredIn>IndivoServer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IndivoPrincipal</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>IndivoPrincipal</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_principal.html</Path>
    <Abstract>A class representing &amp;quot;indivo:Principal&amp;quot; objects, generated from /indivo/schemas/metadata/doc-metadata...</Abstract>
    <DeclaredIn>IndivoPrincipal.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fullname</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoPrincipal</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_principal.html</Path>
    <Anchor>a60200aa09076baab8f0e07451ae96214</Anchor>
    <Abstract>minOccurs = 1</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoPrincipal</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_principal.html</Path>
    <Anchor>aca54d549e3c4e4ff5f2e0e849bddcd50</Anchor>
    <Abstract>Must be present as an XML attribute when writing XML.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>creator</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a620875e739fb98afa435f372df5909e9</Anchor>
    <Abstract>The creator of the document.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>documentStatus</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a706ab192803bdc2a9e75dbea73c530c3</Anchor>
    <Abstract>This document&amp;#39;s status.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetched</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>aef7d0b6214c80dacb33bd765d2306dac</Anchor>
    <Abstract>YES if the document has been fetched from the server.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>label</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a15ac87855f8919d4eae6d662dc6fb353</Anchor>
    <Abstract>This document&amp;#39;s label.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uuidLatest</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a01799b4080d41101d64a160fac00cb9b</Anchor>
    <Abstract>The udid of the latest document of the receiver.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uuidOriginal</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a2babd44cc1b5a2ee45aec75ea475ce71</Anchor>
    <Abstract>The udid of the original document, if the receiver replaced a document.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uuidReplaces</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>aade8cc30ac5d8e22f1f4fa30f26527e1</Anchor>
    <Abstract>The udid of the replaced document, if the receiver replaced a document.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>created</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a761cde7620d1ecb3b5361881ea1332d7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nameSpace</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a3c9e8a8fc73c75b6bef306d38531dd14</Anchor>
    <Abstract>The namespace.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>record</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a850f4818dd6239fd60c379697227f3f7</Anchor>
    <Abstract>The owning record. If you change this on documents fetched from the server, you will get errors...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>suppressed</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>af9bf4dc81377b4f03db1155f4fd1d9b5</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onServer</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>ab0a5a28ab2950cee434c1ffe3588be68</Anchor>
    <Abstract>Indicates whether this document lives on the server.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>server</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a16eaad9d8c1852f6d59b595d9748bc22</Anchor>
    <Abstract>Our beloved server.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uuid</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a3bbdea7b50f5b42650336852c6c401ff</Anchor>
    <Abstract>This object&amp;#39;s udid.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>archive:forReason:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a1be83576ad6d408b0d55bf1ad2b316e2</Anchor>
    <Abstract>Archive (or unarchive) a document for the given reason.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>basePostPath</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>addf4756929723f7bda04adfac88b236b</Anchor>
    <Abstract>The base path, e.g.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cachedObjectOfType:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>ad897004d23faa4db60bc8063cfafe489</Anchor>
    <Abstract>Retrieves the object for a given type from cache.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cacheObject:asType:error:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>afc06871b51cf4d7607887101e3bc1796</Anchor>
    <Abstract>Caches the object for a given type.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>documentPath</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a039d6cb30422992d8484b6243cd9ffc5</Anchor>
    <Abstract>The path to this document, i.e.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetchMetaDocumentWithCallback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>aef370c7434b6b8362cf45bec9cbd9fa7</Anchor>
    <Abstract>Fetches the meta document for this document.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetchStatusHistoryWithCallback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a8a738a777edeba7f0ae9de8f90a13b51</Anchor>
    <Abstract>Fetch the document&amp;#39;s version history.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetchVersionsWithCallback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a1acaadb8f92fb62da6214c50b073a187</Anchor>
    <Abstract>Fetch the document&amp;#39;s version history.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasStatus:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a83cedfbe21cc33cb715c0312a2512e5c</Anchor>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initFromNode:forRecord:withMeta:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a7681c2bd841f9ead3e58518bca914dc5</Anchor>
    <Abstract>The designated initializer.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isLatest</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a9d97b9ea0934923c797a1ffd24d01e27</Anchor>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pull:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a31ceb5b6fb978361e99d4d2d62dcbdde</Anchor>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>push:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a8fd3cac97039b11d7cacccbc122a9408</Anchor>
    <Abstract>This method puts a new document on the server.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>replace:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a817fd1faedcd79a84c8801069df542dc</Anchor>
    <Abstract>This method updates the receiver&amp;#39;s version on the server with new data from the receiver&amp;#39;s properties...</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLabel:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>ab691e3d71bcbb2748152d96c5d8da360</Anchor>
    <Abstract>Label a document.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateWithMeta:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>ab90c1ce19f1c5edda798eddcc85dea58</Anchor>
    <Abstract>This method updates our udid, type and status from the given meta document.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>void:forReason:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a2558c974611c31e7b7ee77ae42aa836a</Anchor>
    <Abstract>Void (or unvoid) a document for a given reason.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cachedObjectOfType:forId:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>acb39ff4eb2a628a11ddc611a266a7bcc</Anchor>
    <Abstract>Retrieves the cached object of a given type for a given document udid.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cacheObject:asType:forId:error:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a4ef5076f5ddc9bfc93a567de80c37699</Anchor>
    <Abstract>Stores an object of a given type for the document of the given udid.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>documentClassForType:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a709c6c3260b6a07c5aa1241707a9b5b1</Anchor>
    <Abstract>Returns the class for a previously registered type, or &amp;quot;IndivoDocument&amp;quot; if the type has not been regi...</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetchReportPathForRecord:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a02d49b2bcf494d71451c5e0ae74ad7f7</Anchor>
    <Abstract>The base path to get reports for documents of this class.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerDocumentClass:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>aa1ba18a981c893671566a7de273621ed</Anchor>
    <Abstract>Our IndivoDocument subclasses call this in their +load method.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reportType</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a4c034e46939f0a3423eb9eeea1355c3c</Anchor>
    <Abstract>This name is used to construct the report path for this kind of document.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_nodeName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ade43c92af65af424ab16f717ad4d8287</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IndivoProblem</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>IndivoProblem</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_problem.html</Path>
    <Abstract>A class representing &amp;quot;indivo:Problem&amp;quot; objects, generated from /indivo/data_models/core/problem/model...</Abstract>
    <DeclaredIn>IndivoProblem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>endDate</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoProblem</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_problem.html</Path>
    <Anchor>a28a6ba266dbf8f574519ba0807638d7c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>name</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoProblem</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_problem.html</Path>
    <Anchor>a51c64fc0ebda38dbd54a4b5c7cc54521</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>notes</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoProblem</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_problem.html</Path>
    <Anchor>a33df6858d5772f7014fd0b3b6c2cbd9e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>startDate</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoProblem</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_problem.html</Path>
    <Anchor>a40f14630fcc27ce3c32786e730470b13</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>creator</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a620875e739fb98afa435f372df5909e9</Anchor>
    <Abstract>The creator of the document.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>documentStatus</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a706ab192803bdc2a9e75dbea73c530c3</Anchor>
    <Abstract>This document&amp;#39;s status.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetched</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>aef7d0b6214c80dacb33bd765d2306dac</Anchor>
    <Abstract>YES if the document has been fetched from the server.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>label</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a15ac87855f8919d4eae6d662dc6fb353</Anchor>
    <Abstract>This document&amp;#39;s label.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uuidLatest</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a01799b4080d41101d64a160fac00cb9b</Anchor>
    <Abstract>The udid of the latest document of the receiver.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uuidOriginal</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a2babd44cc1b5a2ee45aec75ea475ce71</Anchor>
    <Abstract>The udid of the original document, if the receiver replaced a document.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uuidReplaces</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>aade8cc30ac5d8e22f1f4fa30f26527e1</Anchor>
    <Abstract>The udid of the replaced document, if the receiver replaced a document.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>created</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a761cde7620d1ecb3b5361881ea1332d7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nameSpace</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a3c9e8a8fc73c75b6bef306d38531dd14</Anchor>
    <Abstract>The namespace.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>record</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a850f4818dd6239fd60c379697227f3f7</Anchor>
    <Abstract>The owning record. If you change this on documents fetched from the server, you will get errors...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>suppressed</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>af9bf4dc81377b4f03db1155f4fd1d9b5</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onServer</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>ab0a5a28ab2950cee434c1ffe3588be68</Anchor>
    <Abstract>Indicates whether this document lives on the server.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>server</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a16eaad9d8c1852f6d59b595d9748bc22</Anchor>
    <Abstract>Our beloved server.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uuid</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a3bbdea7b50f5b42650336852c6c401ff</Anchor>
    <Abstract>This object&amp;#39;s udid.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>archive:forReason:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a1be83576ad6d408b0d55bf1ad2b316e2</Anchor>
    <Abstract>Archive (or unarchive) a document for the given reason.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>basePostPath</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>addf4756929723f7bda04adfac88b236b</Anchor>
    <Abstract>The base path, e.g.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cachedObjectOfType:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>ad897004d23faa4db60bc8063cfafe489</Anchor>
    <Abstract>Retrieves the object for a given type from cache.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cacheObject:asType:error:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>afc06871b51cf4d7607887101e3bc1796</Anchor>
    <Abstract>Caches the object for a given type.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>documentPath</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a039d6cb30422992d8484b6243cd9ffc5</Anchor>
    <Abstract>The path to this document, i.e.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetchMetaDocumentWithCallback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>aef370c7434b6b8362cf45bec9cbd9fa7</Anchor>
    <Abstract>Fetches the meta document for this document.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetchStatusHistoryWithCallback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a8a738a777edeba7f0ae9de8f90a13b51</Anchor>
    <Abstract>Fetch the document&amp;#39;s version history.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetchVersionsWithCallback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a1acaadb8f92fb62da6214c50b073a187</Anchor>
    <Abstract>Fetch the document&amp;#39;s version history.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasStatus:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a83cedfbe21cc33cb715c0312a2512e5c</Anchor>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initFromNode:forRecord:withMeta:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a7681c2bd841f9ead3e58518bca914dc5</Anchor>
    <Abstract>The designated initializer.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isLatest</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a9d97b9ea0934923c797a1ffd24d01e27</Anchor>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pull:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a31ceb5b6fb978361e99d4d2d62dcbdde</Anchor>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>push:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a8fd3cac97039b11d7cacccbc122a9408</Anchor>
    <Abstract>This method puts a new document on the server.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>replace:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a817fd1faedcd79a84c8801069df542dc</Anchor>
    <Abstract>This method updates the receiver&amp;#39;s version on the server with new data from the receiver&amp;#39;s properties...</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLabel:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>ab691e3d71bcbb2748152d96c5d8da360</Anchor>
    <Abstract>Label a document.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateWithMeta:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>ab90c1ce19f1c5edda798eddcc85dea58</Anchor>
    <Abstract>This method updates our udid, type and status from the given meta document.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>void:forReason:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a2558c974611c31e7b7ee77ae42aa836a</Anchor>
    <Abstract>Void (or unvoid) a document for a given reason.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cachedObjectOfType:forId:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>acb39ff4eb2a628a11ddc611a266a7bcc</Anchor>
    <Abstract>Retrieves the cached object of a given type for a given document udid.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cacheObject:asType:forId:error:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a4ef5076f5ddc9bfc93a567de80c37699</Anchor>
    <Abstract>Stores an object of a given type for the document of the given udid.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>documentClassForType:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a709c6c3260b6a07c5aa1241707a9b5b1</Anchor>
    <Abstract>Returns the class for a previously registered type, or &amp;quot;IndivoDocument&amp;quot; if the type has not been regi...</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetchReportPathForRecord:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a02d49b2bcf494d71451c5e0ae74ad7f7</Anchor>
    <Abstract>The base path to get reports for documents of this class.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerDocumentClass:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>aa1ba18a981c893671566a7de273621ed</Anchor>
    <Abstract>Our IndivoDocument subclasses call this in their +load method.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reportType</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a4c034e46939f0a3423eb9eeea1355c3c</Anchor>
    <Abstract>This name is used to construct the report path for this kind of document.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_nodeName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ade43c92af65af424ab16f717ad4d8287</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IndivoProblem(Report)</Name>
      <APILanguage>c</APILanguage>
      <Type>cat</Type>
      <Scope>IndivoProblem(Report)</Scope>
    </TokenIdentifier>
    <Path>category_indivo_problem_07_report_08.html</Path>
    <DeclaredIn>IndivoProblem+Report.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IndivoProcedure</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>IndivoProcedure</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_procedure.html</Path>
    <Abstract>A class representing &amp;quot;indivo:Procedure&amp;quot; objects, generated from /indivo/data_models/core/procedure/mo...</Abstract>
    <DeclaredIn>IndivoProcedure.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>comments</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoProcedure</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_procedure.html</Path>
    <Anchor>aebfc529c656124c43fed9d43756c1f00</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>date_performed</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoProcedure</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_procedure.html</Path>
    <Anchor>af834082a24fbe56670c2ab9093b8dc02</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>location</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoProcedure</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_procedure.html</Path>
    <Anchor>a3c36a63f818820c6bb00a1468838249d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>name</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoProcedure</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_procedure.html</Path>
    <Anchor>ae03a0c6ce879fe6cd8ec0683e28cdcd6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>name_abbrev</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoProcedure</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_procedure.html</Path>
    <Anchor>a7c2e4383547a7b78c8fcfe8326f5b562</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>name_type</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoProcedure</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_procedure.html</Path>
    <Anchor>a32dc0ac6f4d388d1d27eddb751192011</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>name_value</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoProcedure</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_procedure.html</Path>
    <Anchor>af113f74171f369ed7383b35f68d16d86</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>provider_institution</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoProcedure</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_procedure.html</Path>
    <Anchor>a8bb7a4a542ea7cda57b268e7bb51b2b7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>provider_name</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoProcedure</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_procedure.html</Path>
    <Anchor>afdea8cd0d1c0946d1b4193d96841e53b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>creator</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a620875e739fb98afa435f372df5909e9</Anchor>
    <Abstract>The creator of the document.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>documentStatus</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a706ab192803bdc2a9e75dbea73c530c3</Anchor>
    <Abstract>This document&amp;#39;s status.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetched</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>aef7d0b6214c80dacb33bd765d2306dac</Anchor>
    <Abstract>YES if the document has been fetched from the server.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>label</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a15ac87855f8919d4eae6d662dc6fb353</Anchor>
    <Abstract>This document&amp;#39;s label.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uuidLatest</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a01799b4080d41101d64a160fac00cb9b</Anchor>
    <Abstract>The udid of the latest document of the receiver.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uuidOriginal</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a2babd44cc1b5a2ee45aec75ea475ce71</Anchor>
    <Abstract>The udid of the original document, if the receiver replaced a document.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uuidReplaces</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>aade8cc30ac5d8e22f1f4fa30f26527e1</Anchor>
    <Abstract>The udid of the replaced document, if the receiver replaced a document.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>created</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a761cde7620d1ecb3b5361881ea1332d7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nameSpace</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a3c9e8a8fc73c75b6bef306d38531dd14</Anchor>
    <Abstract>The namespace.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>record</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a850f4818dd6239fd60c379697227f3f7</Anchor>
    <Abstract>The owning record. If you change this on documents fetched from the server, you will get errors...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>suppressed</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>af9bf4dc81377b4f03db1155f4fd1d9b5</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onServer</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>ab0a5a28ab2950cee434c1ffe3588be68</Anchor>
    <Abstract>Indicates whether this document lives on the server.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>server</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a16eaad9d8c1852f6d59b595d9748bc22</Anchor>
    <Abstract>Our beloved server.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uuid</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a3bbdea7b50f5b42650336852c6c401ff</Anchor>
    <Abstract>This object&amp;#39;s udid.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>archive:forReason:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a1be83576ad6d408b0d55bf1ad2b316e2</Anchor>
    <Abstract>Archive (or unarchive) a document for the given reason.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>basePostPath</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>addf4756929723f7bda04adfac88b236b</Anchor>
    <Abstract>The base path, e.g.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cachedObjectOfType:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>ad897004d23faa4db60bc8063cfafe489</Anchor>
    <Abstract>Retrieves the object for a given type from cache.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cacheObject:asType:error:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>afc06871b51cf4d7607887101e3bc1796</Anchor>
    <Abstract>Caches the object for a given type.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>documentPath</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a039d6cb30422992d8484b6243cd9ffc5</Anchor>
    <Abstract>The path to this document, i.e.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetchMetaDocumentWithCallback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>aef370c7434b6b8362cf45bec9cbd9fa7</Anchor>
    <Abstract>Fetches the meta document for this document.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetchStatusHistoryWithCallback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a8a738a777edeba7f0ae9de8f90a13b51</Anchor>
    <Abstract>Fetch the document&amp;#39;s version history.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetchVersionsWithCallback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a1acaadb8f92fb62da6214c50b073a187</Anchor>
    <Abstract>Fetch the document&amp;#39;s version history.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasStatus:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a83cedfbe21cc33cb715c0312a2512e5c</Anchor>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initFromNode:forRecord:withMeta:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a7681c2bd841f9ead3e58518bca914dc5</Anchor>
    <Abstract>The designated initializer.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isLatest</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a9d97b9ea0934923c797a1ffd24d01e27</Anchor>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pull:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a31ceb5b6fb978361e99d4d2d62dcbdde</Anchor>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>push:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a8fd3cac97039b11d7cacccbc122a9408</Anchor>
    <Abstract>This method puts a new document on the server.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>replace:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a817fd1faedcd79a84c8801069df542dc</Anchor>
    <Abstract>This method updates the receiver&amp;#39;s version on the server with new data from the receiver&amp;#39;s properties...</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLabel:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>ab691e3d71bcbb2748152d96c5d8da360</Anchor>
    <Abstract>Label a document.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateWithMeta:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>ab90c1ce19f1c5edda798eddcc85dea58</Anchor>
    <Abstract>This method updates our udid, type and status from the given meta document.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>void:forReason:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a2558c974611c31e7b7ee77ae42aa836a</Anchor>
    <Abstract>Void (or unvoid) a document for a given reason.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cachedObjectOfType:forId:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>acb39ff4eb2a628a11ddc611a266a7bcc</Anchor>
    <Abstract>Retrieves the cached object of a given type for a given document udid.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cacheObject:asType:forId:error:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a4ef5076f5ddc9bfc93a567de80c37699</Anchor>
    <Abstract>Stores an object of a given type for the document of the given udid.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>documentClassForType:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a709c6c3260b6a07c5aa1241707a9b5b1</Anchor>
    <Abstract>Returns the class for a previously registered type, or &amp;quot;IndivoDocument&amp;quot; if the type has not been regi...</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetchReportPathForRecord:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a02d49b2bcf494d71451c5e0ae74ad7f7</Anchor>
    <Abstract>The base path to get reports for documents of this class.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerDocumentClass:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>aa1ba18a981c893671566a7de273621ed</Anchor>
    <Abstract>Our IndivoDocument subclasses call this in their +load method.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reportType</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a4c034e46939f0a3423eb9eeea1355c3c</Anchor>
    <Abstract>This name is used to construct the report path for this kind of document.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_nodeName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ade43c92af65af424ab16f717ad4d8287</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IndivoProcedure(Report)</Name>
      <APILanguage>c</APILanguage>
      <Type>cat</Type>
      <Scope>IndivoProcedure(Report)</Scope>
    </TokenIdentifier>
    <Path>category_indivo_procedure_07_report_08.html</Path>
    <DeclaredIn>IndivoProcedure+Report.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IndivoRecord</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>IndivoRecord</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_record.html</Path>
    <DeclaredIn>IndivoRecord.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addDocumentOfClass:error:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoRecord</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_record.html</Path>
    <Anchor>a73b336f304d8c26abea839a408ede614</Anchor>
    <Abstract>Instantiates a document of given class and adds it to our documents cache.</Abstract>
    <DeclaredIn>IndivoRecord.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetchAppSpecificDocumentsWithCallback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoRecord</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_record.html</Path>
    <Anchor>ad40224e1646306c1560576edd220049c</Anchor>
    <Abstract>Fetch app specific documents of the receiver, calling GET on /records/{record id}/apps/{app id}/docum...</Abstract>
    <DeclaredIn>IndivoRecord.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetchDemographicsDocumentWithCallback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoRecord</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_record.html</Path>
    <Anchor>a54634c1eb4ae4a5fd73ec844890dabbb</Anchor>
    <Abstract>Fetches the record&amp;#39;s demographics document.</Abstract>
    <DeclaredIn>IndivoRecord.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetchDocumentsOfClass:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoRecord</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_record.html</Path>
    <Anchor>abe715ac8773222dfce3b3c0f3bddfe4f</Anchor>
    <Abstract>Fetch documents of a given type, calling GET on /records/{record id}/documents/?type={type}.</Abstract>
    <DeclaredIn>IndivoRecord.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetchDocumentsWithCallback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoRecord</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_record.html</Path>
    <Anchor>a744ff47858047fb2ad4ba3c45b5e2537</Anchor>
    <Abstract>Fetch all documents of the receiver, calling GET on /records/{record id}/documents/.</Abstract>
    <DeclaredIn>IndivoRecord.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetchRecordInfoWithCallback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoRecord</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_record.html</Path>
    <Anchor>a85ead31768751cbf25c056b1201ae4db</Anchor>
    <Abstract>Fetches basic record info.</Abstract>
    <DeclaredIn>IndivoRecord.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetchReportsOfClass:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoRecord</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_record.html</Path>
    <Anchor>a02aaad426f357a477a48759301298ece</Anchor>
    <Abstract>Fetches reports of given type from the server.</Abstract>
    <DeclaredIn>IndivoRecord.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetchReportsOfClass:withQuery:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoRecord</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_record.html</Path>
    <Anchor>a5742e98664c1355a1a4016c9ed6805a8</Anchor>
    <Abstract>Fetches reports limited by the query parameters given.</Abstract>
    <DeclaredIn>IndivoRecord.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithId:onServer:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoRecord</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_record.html</Path>
    <Anchor>a3c4b385c6fb3931cf97259ef41d5cc0c</Anchor>
    <Abstract>Initializes a record from given parameters.</Abstract>
    <DeclaredIn>IndivoRecord.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendMessage:withBody:ofType:severity:attachments:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoRecord</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_record.html</Path>
    <Anchor>a2946a9d528f524ee0d27ccf00ad0ff35</Anchor>
    <Abstract>Posts a message to the record&amp;#39;s inbox.</Abstract>
    <DeclaredIn>IndivoRecord.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendMessage:withBody:ofType:severity:attachments:messageId:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoRecord</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_record.html</Path>
    <Anchor>a0f53bbf3f319425d492faab8c9e5cc35</Anchor>
    <Abstract>Posts a message to the record&amp;#39;s inbox.</Abstract>
    <DeclaredIn>IndivoRecord.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>forceNotOnServer</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>ac274479305ae9b3f49c9dd24572afe96</Anchor>
    <Abstract>This is provided for subclasses, the fact that onServer is readonly but settable by this and markOnSe...</Abstract>
    <DeclaredIn>INServerObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a45970634b7aa5f86e7479c1599a7d98c</Anchor>
    <Abstract>Shortcut for GETting data.</Abstract>
    <DeclaredIn>INServerObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get:parameters:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a17f98bd457ac77a451c6b730f97beae2</Anchor>
    <Abstract>Shortcut for GETting data with parameters.</Abstract>
    <DeclaredIn>INServerObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initFromNode:withServer:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a4828394e023d6346442ec59512198300</Anchor>
    <Abstract>The designated initializer.</Abstract>
    <DeclaredIn>INServerObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a40df090a1813e6d965efce8fbf58295e</Anchor>
    <Abstract>Shortcut method to test if the document has the given ID.</Abstract>
    <DeclaredIn>INServerObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>markOnServer</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a08067a7fd061216248615f841984c608</Anchor>
    <Abstract>Sets onServer to YES for the receiver.</Abstract>
    <DeclaredIn>INServerObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>performMethod:withBody:orParameters:httpMethod:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a3e995d3df3fe4fb6769f63d4f3c6e216</Anchor>
    <Abstract>The basic method to perform REST methods on the server with App credentials.</Abstract>
    <DeclaredIn>INServerObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>post:body:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a7b1df3e6eb0a567205156e9826a7d0c0</Anchor>
    <Abstract>Shortcut for POSTing body data.</Abstract>
    <DeclaredIn>INServerObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>post:parameters:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a070d06400465144dd85cd731a8aab5bf</Anchor>
    <Abstract>Shortcut for POSTing parameters.</Abstract>
    <DeclaredIn>INServerObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>put:body:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a914bdf0c6dffcea761cd795937d03271</Anchor>
    <Abstract>Shortcut for PUTting data.</Abstract>
    <DeclaredIn>INServerObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accessToken</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoRecord</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_record.html</Path>
    <Anchor>ab970827afd8f6e1c00864f4aee54dabb</Anchor>
    <Abstract>The last access token successfully used with this record.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accessTokenSecret</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoRecord</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_record.html</Path>
    <Anchor>a7a1b6497d06e6816cac971d0b447f46a</Anchor>
    <Abstract>The last access token secret successfully used with this record.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>created</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoRecord</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_record.html</Path>
    <Anchor>af9051c2d25839b6dc92748f3c4a686db</Anchor>
    <Abstract>When this record has been created on the server.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>demographicsDoc</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoRecord</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_record.html</Path>
    <Anchor>acd7f95dac5f4fabe898cbeb17cacdc67</Anchor>
    <Abstract>The demographics document for this record.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>demographicsDocId</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoRecord</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_record.html</Path>
    <Anchor>ace591953ca91344dab6288952ea78d4f</Anchor>
    <Abstract>The id of the demographics document.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>label</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoRecord</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_record.html</Path>
    <Anchor>a37b7626e4e82e61b4cbcb1745b1186de</Anchor>
    <Abstract>This record&amp;#39;s name.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onServer</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>ab0a5a28ab2950cee434c1ffe3588be68</Anchor>
    <Abstract>Indicates whether this document lives on the server.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>server</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a16eaad9d8c1852f6d59b595d9748bc22</Anchor>
    <Abstract>Our beloved server.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uuid</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a3bbdea7b50f5b42650336852c6c401ff</Anchor>
    <Abstract>This object&amp;#39;s udid.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributeNames</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a6b32a6cd314574c9ba03e188722bd7ea</Anchor>
    <Abstract>The properties whose names are returned here are expected to be XML node attributes rather than compl...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flatXMLNameForPropertyName:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a045def193f53f5547de4d27cb594eccc</Anchor>
    <Abstract>Objects have the ability to use a different name from the property name for flat XML &amp;quot;name&amp;quot; attribute...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>newWithNodeName:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>aeed9099cc8ad55d64b1b3225365b48e0</Anchor>
    <Abstract>Returns a fresh node with nodeName set.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeName</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a884c5eedff050615b24d1a8b6866631f</Anchor>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeType</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a442303ee5dee7d6a24013da204753aec</Anchor>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>objectFromAttribute:inNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a499c48080c52224d6e7650c7d7fa9ab8</Anchor>
    <Abstract>This method returns an object created from the string contents of a node attribute.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>objectFromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ad6122063a8025ee62db1469397527b5d</Anchor>
    <Abstract>This method returns an object created representing the the node.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_nodeName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ade43c92af65af424ab16f717ad4d8287</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IndivoServer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>IndivoServer</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_server.html</Path>
    <Abstract>A class to represent the server you want to connect to.</Abstract>
    <DeclaredIn>IndivoServer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>authenticate:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoServer</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_server.html</Path>
    <Anchor>a072b7e8d4c448b34967e930affafd94d</Anchor>
    <Abstract>Strips current credentials and then does the OAuth dance again.</Abstract>
    <DeclaredIn>IndivoServer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>authorizeCallbackURL</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoServer</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_server.html</Path>
    <Anchor>ab5ea069a1393e85e8ba51d90d1b5053e</Anchor>
    <Abstract>The callback to feed to authorizeURL.</Abstract>
    <DeclaredIn>IndivoServer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>callDidFinish:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoServer</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_server.html</Path>
    <Anchor>a89a0ae3cbac5f6e578736b1519ba07cb</Anchor>
    <Abstract>Callback to let us know a call has finished.</Abstract>
    <DeclaredIn>IndivoServer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createOAuthWithAuthMethodClass:error:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoServer</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_server.html</Path>
    <Anchor>abcea0054ad26f5374e57d00e77043b61</Anchor>
    <Abstract>Creates a new MPOAuthAPI instance with our current settings.</Abstract>
    <DeclaredIn>IndivoServer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetchAppSpecificDocumentsWithCallback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoServer</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_server.html</Path>
    <Anchor>a0f7f6e707ac2afbfe46a53e880ca3b11</Anchor>
    <Abstract>Fetches global, app-specific documents.</Abstract>
    <DeclaredIn>IndivoServer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>performCall:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoServer</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_server.html</Path>
    <Anchor>a9e04fb46b50e466e8c9ddbfd9b6ee9ed</Anchor>
    <Abstract>Perform a method on our server This method is usally called by INServerObject subclasses, but you can use it bare if you wish.</Abstract>
    <DeclaredIn>IndivoServer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readyToConnect:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoServer</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_server.html</Path>
    <Anchor>ac7357aa8d3fa22b6f7afd0b1be2b7e3e</Anchor>
    <DeclaredIn>IndivoServer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>recordWithId:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoServer</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_server.html</Path>
    <Anchor>ae6cb585bdcd118f5bbe1791fb7428e63</Anchor>
    <Abstract>Obviously returns the record with the given id, returns nil if it is not found.</Abstract>
    <DeclaredIn>IndivoServer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>selectRecord:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoServer</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_server.html</Path>
    <Anchor>ad02578c0e149ae993cc34b5af1704776</Anchor>
    <Abstract>This is the main authentication entry point, this method will ask the delegate where to present a log...</Abstract>
    <DeclaredIn>IndivoServer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldAutomaticallyAuthenticateFrom:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoServer</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_server.html</Path>
    <Anchor>a2eb477d38a1f1ba7d4bb56571f85b10f</Anchor>
    <Abstract>Callback when the call is stuck at user authorization.</Abstract>
    <DeclaredIn>IndivoServer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>suspendCall:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoServer</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_server.html</Path>
    <Anchor>a0f5c5667721f5d6b5e369f29b823c55d</Anchor>
    <Abstract>Dequeues a call without finishing it.</Abstract>
    <DeclaredIn>IndivoServer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>callbackSchemeForLoginView:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>IndivoLoginViewControllerDelegate-p</Scope>
    </TokenIdentifier>
    <Path>protocol_indivo_login_view_controller_delegate-p.html</Path>
    <Anchor>a28c1c78fe9efa30247cf06fcfa150ca2</Anchor>
    <Abstract>Before loading a URL that URL is checked whether the scheme corresponds to the internal scheme...</Abstract>
    <DeclaredIn>IndivoLoginViewController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loginView:didReceiveVerifier:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>IndivoLoginViewControllerDelegate-p</Scope>
    </TokenIdentifier>
    <Path>protocol_indivo_login_view_controller_delegate-p.html</Path>
    <Anchor>a5fe231aeae907c0d1a123c341fb6f561</Anchor>
    <Abstract>Called when the login screen gets called with our verifier callback URL.</Abstract>
    <DeclaredIn>IndivoLoginViewController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loginView:didSelectRecordId:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>IndivoLoginViewControllerDelegate-p</Scope>
    </TokenIdentifier>
    <Path>protocol_indivo_login_view_controller_delegate-p.html</Path>
    <Anchor>ad33f934cca4ea8e93cd342f937555ab4</Anchor>
    <Abstract>Called when a record was selected.</Abstract>
    <DeclaredIn>IndivoLoginViewController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loginViewDidCancel:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>IndivoLoginViewControllerDelegate-p</Scope>
    </TokenIdentifier>
    <Path>protocol_indivo_login_view_controller_delegate-p.html</Path>
    <Anchor>ae1c170e536da6cacb98ffcc109f66dec</Anchor>
    <Abstract>The user dismissed the login screen without loggin in successfully.</Abstract>
    <DeclaredIn>IndivoLoginViewController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loginViewDidLogout:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>IndivoLoginViewControllerDelegate-p</Scope>
    </TokenIdentifier>
    <Path>protocol_indivo_login_view_controller_delegate-p.html</Path>
    <Anchor>a00d4e68c7f657c04e04ca935284f643e</Anchor>
    <Abstract>If the user logged out, we want to discard cached data.</Abstract>
    <DeclaredIn>IndivoLoginViewController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serverWithDelegate:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoServer</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_server.html</Path>
    <Anchor>afa24e11d48777d3137c07c2e37caa4a5</Anchor>
    <Abstract>A convenience constructor creating the server for the given delegate.</Abstract>
    <DeclaredIn>IndivoServer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>activeRecord</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoServer</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_server.html</Path>
    <Anchor>af692b5354e33f890db0c70bc915b7526</Anchor>
    <Abstract>The currently active record.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>activeRecordId</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoServer</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_server.html</Path>
    <Anchor>a8b032047f58de4245421f68c08b9195b</Anchor>
    <Abstract>Shortcut method to get the id of the currently active record.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>appId</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoServer</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_server.html</Path>
    <Anchor>a87c1c70a83fa22230f906db39b436167</Anchor>
    <Abstract>The id of the app as it is known on the server.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>callbackScheme</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoServer</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_server.html</Path>
    <Anchor>ad26d07e5c78b0dffc4fa950e728aca15</Anchor>
    <Abstract>Defaults to &amp;quot;indivo-framework&amp;quot;, but you can use your own.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>consumerKey</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoServer</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_server.html</Path>
    <Anchor>a048721f5d2aef7fdcb1b569e802702e5</Anchor>
    <Abstract>The consumer key for the app.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>consumerSecret</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoServer</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_server.html</Path>
    <Anchor>a66b0c9e9b327cc8a020b8fd46b2f0332</Anchor>
    <Abstract>The consumer secret for the app.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>delegate</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoServer</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_server.html</Path>
    <Anchor>a054ebb1cdb08d9574194aa7a345be6f0</Anchor>
    <Abstract>A delegate to receive notifications.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>knownRecords</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoServer</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_server.html</Path>
    <Anchor>ae1330e041887317be1c9a8ab95b103d0</Anchor>
    <Abstract>A cache of the known records on this server. Not currently used by the framework.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lastOAuthVerifier</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoServer</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_server.html</Path>
    <Anchor>aae31ce425a66a1aa421b31b77ea055ef</Anchor>
    <Abstract>Storing our OAuth verifier here until MPOAuth asks for it.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>storeCredentials</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoServer</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_server.html</Path>
    <Anchor>a88f3c927b52860479b1499ad3ffc4b36</Anchor>
    <Abstract>NO by default. If you set this to YES, a successful login will save credentials to the system keychai...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ui_url</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoServer</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_server.html</Path>
    <Anchor>a340ebb7152b1f564c17b39c86ab9c34c</Anchor>
    <Abstract>The UI-server URL (needed for login)</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>url</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoServer</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_server.html</Path>
    <Anchor>a26821b3ea346301afdb5d7b644e53b2e</Anchor>
    <Abstract>The server URL.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IndivoServerDelegate</Name>
      <APILanguage>c</APILanguage>
      <Type>intf</Type>
      <Scope>IndivoServerDelegate</Scope>
    </TokenIdentifier>
    <Path>protocol_indivo_server_delegate-p.html</Path>
    <Abstract>The Indivo Server Delegate Protocol.</Abstract>
    <DeclaredIn>IndivoServer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>userDidLogout:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>IndivoServerDelegate-p</Scope>
    </TokenIdentifier>
    <Path>protocol_indivo_server_delegate-p.html</Path>
    <Anchor>a971a30850aa3c23ce94e5be249b80a70</Anchor>
    <Abstract>This delegate method is called when the user logs out.</Abstract>
    <DeclaredIn>IndivoServer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>viewControllerToPresentLoginViewController:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>IndivoServerDelegate-p</Scope>
    </TokenIdentifier>
    <Path>protocol_indivo_server_delegate-p.html</Path>
    <Anchor>a06d72e1e983e9a29316c535f60dd9370</Anchor>
    <Abstract>Return a view controller from which you want to present the login view controller.</Abstract>
    <DeclaredIn>IndivoServer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IndivoSimpleClinicalNote</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>IndivoSimpleClinicalNote</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_simple_clinical_note.html</Path>
    <Abstract>A class representing &amp;quot;indivo:SimpleClinicalNote&amp;quot; objects, generated from /indivo/data_models/core/sim...</Abstract>
    <DeclaredIn>IndivoSimpleClinicalNote.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>chief_complaint</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoSimpleClinicalNote</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_simple_clinical_note.html</Path>
    <Anchor>ae7c26801ff2ba3d739a45e00111f8fec</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>content</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoSimpleClinicalNote</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_simple_clinical_note.html</Path>
    <Anchor>a7e8a27f209a5290c6d881d59bc218647</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>date_of_visit</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoSimpleClinicalNote</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_simple_clinical_note.html</Path>
    <Anchor>a0fb729e11c7e0f0dfdf320d30b358cbd</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>finalized_at</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoSimpleClinicalNote</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_simple_clinical_note.html</Path>
    <Anchor>aa93b8af82af58d049e034dcb34aefb32</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>provider_institution</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoSimpleClinicalNote</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_simple_clinical_note.html</Path>
    <Anchor>a6e5a3300ad3a5c9847a073be79810c53</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>provider_name</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoSimpleClinicalNote</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_simple_clinical_note.html</Path>
    <Anchor>ac3660594097bd8df100bae5cdaebbef2</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>signed_at</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoSimpleClinicalNote</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_simple_clinical_note.html</Path>
    <Anchor>ac2e95e902082f5937ce44e9496d3593a</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>specialty</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoSimpleClinicalNote</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_simple_clinical_note.html</Path>
    <Anchor>a50fb0dc0e0ea2fbeb52932929fcc387e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>specialty_abbrev</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoSimpleClinicalNote</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_simple_clinical_note.html</Path>
    <Anchor>a0c1c351e3a23d7a3856e20ef58d1494e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>specialty_type</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoSimpleClinicalNote</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_simple_clinical_note.html</Path>
    <Anchor>a49e91c2dd9eb8158fcb780101f48db55</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>specialty_value</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoSimpleClinicalNote</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_simple_clinical_note.html</Path>
    <Anchor>ab5be2985a2624f6a96fa776d8a69c1a8</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>visit_location</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoSimpleClinicalNote</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_simple_clinical_note.html</Path>
    <Anchor>a8a8a290e0c4bdd28eac1ab197a6ea6a5</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>visit_type</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoSimpleClinicalNote</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_simple_clinical_note.html</Path>
    <Anchor>af29d27c89182946a00363f2cbbb2673a</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>visit_type_abbrev</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoSimpleClinicalNote</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_simple_clinical_note.html</Path>
    <Anchor>a916f44285d8931224be2cbcec113d364</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>visit_type_type</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoSimpleClinicalNote</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_simple_clinical_note.html</Path>
    <Anchor>aaa0f216bf3936df1d8d89b1bb0172f26</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>visit_type_value</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoSimpleClinicalNote</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_simple_clinical_note.html</Path>
    <Anchor>a2752f4716f8e0e1997999e1e2a66e864</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>creator</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a620875e739fb98afa435f372df5909e9</Anchor>
    <Abstract>The creator of the document.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>documentStatus</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a706ab192803bdc2a9e75dbea73c530c3</Anchor>
    <Abstract>This document&amp;#39;s status.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetched</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>aef7d0b6214c80dacb33bd765d2306dac</Anchor>
    <Abstract>YES if the document has been fetched from the server.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>label</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a15ac87855f8919d4eae6d662dc6fb353</Anchor>
    <Abstract>This document&amp;#39;s label.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uuidLatest</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a01799b4080d41101d64a160fac00cb9b</Anchor>
    <Abstract>The udid of the latest document of the receiver.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uuidOriginal</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a2babd44cc1b5a2ee45aec75ea475ce71</Anchor>
    <Abstract>The udid of the original document, if the receiver replaced a document.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uuidReplaces</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>aade8cc30ac5d8e22f1f4fa30f26527e1</Anchor>
    <Abstract>The udid of the replaced document, if the receiver replaced a document.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>created</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a761cde7620d1ecb3b5361881ea1332d7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nameSpace</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a3c9e8a8fc73c75b6bef306d38531dd14</Anchor>
    <Abstract>The namespace.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>record</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a850f4818dd6239fd60c379697227f3f7</Anchor>
    <Abstract>The owning record. If you change this on documents fetched from the server, you will get errors...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>suppressed</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>af9bf4dc81377b4f03db1155f4fd1d9b5</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onServer</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>ab0a5a28ab2950cee434c1ffe3588be68</Anchor>
    <Abstract>Indicates whether this document lives on the server.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>server</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a16eaad9d8c1852f6d59b595d9748bc22</Anchor>
    <Abstract>Our beloved server.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uuid</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a3bbdea7b50f5b42650336852c6c401ff</Anchor>
    <Abstract>This object&amp;#39;s udid.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>archive:forReason:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a1be83576ad6d408b0d55bf1ad2b316e2</Anchor>
    <Abstract>Archive (or unarchive) a document for the given reason.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>basePostPath</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>addf4756929723f7bda04adfac88b236b</Anchor>
    <Abstract>The base path, e.g.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cachedObjectOfType:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>ad897004d23faa4db60bc8063cfafe489</Anchor>
    <Abstract>Retrieves the object for a given type from cache.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cacheObject:asType:error:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>afc06871b51cf4d7607887101e3bc1796</Anchor>
    <Abstract>Caches the object for a given type.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>documentPath</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a039d6cb30422992d8484b6243cd9ffc5</Anchor>
    <Abstract>The path to this document, i.e.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetchMetaDocumentWithCallback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>aef370c7434b6b8362cf45bec9cbd9fa7</Anchor>
    <Abstract>Fetches the meta document for this document.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetchStatusHistoryWithCallback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a8a738a777edeba7f0ae9de8f90a13b51</Anchor>
    <Abstract>Fetch the document&amp;#39;s version history.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetchVersionsWithCallback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a1acaadb8f92fb62da6214c50b073a187</Anchor>
    <Abstract>Fetch the document&amp;#39;s version history.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasStatus:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a83cedfbe21cc33cb715c0312a2512e5c</Anchor>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initFromNode:forRecord:withMeta:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a7681c2bd841f9ead3e58518bca914dc5</Anchor>
    <Abstract>The designated initializer.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isLatest</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a9d97b9ea0934923c797a1ffd24d01e27</Anchor>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pull:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a31ceb5b6fb978361e99d4d2d62dcbdde</Anchor>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>push:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a8fd3cac97039b11d7cacccbc122a9408</Anchor>
    <Abstract>This method puts a new document on the server.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>replace:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a817fd1faedcd79a84c8801069df542dc</Anchor>
    <Abstract>This method updates the receiver&amp;#39;s version on the server with new data from the receiver&amp;#39;s properties...</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLabel:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>ab691e3d71bcbb2748152d96c5d8da360</Anchor>
    <Abstract>Label a document.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateWithMeta:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>ab90c1ce19f1c5edda798eddcc85dea58</Anchor>
    <Abstract>This method updates our udid, type and status from the given meta document.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>void:forReason:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a2558c974611c31e7b7ee77ae42aa836a</Anchor>
    <Abstract>Void (or unvoid) a document for a given reason.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cachedObjectOfType:forId:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>acb39ff4eb2a628a11ddc611a266a7bcc</Anchor>
    <Abstract>Retrieves the cached object of a given type for a given document udid.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cacheObject:asType:forId:error:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a4ef5076f5ddc9bfc93a567de80c37699</Anchor>
    <Abstract>Stores an object of a given type for the document of the given udid.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>documentClassForType:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a709c6c3260b6a07c5aa1241707a9b5b1</Anchor>
    <Abstract>Returns the class for a previously registered type, or &amp;quot;IndivoDocument&amp;quot; if the type has not been regi...</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetchReportPathForRecord:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a02d49b2bcf494d71451c5e0ae74ad7f7</Anchor>
    <Abstract>The base path to get reports for documents of this class.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerDocumentClass:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>aa1ba18a981c893671566a7de273621ed</Anchor>
    <Abstract>Our IndivoDocument subclasses call this in their +load method.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reportType</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a4c034e46939f0a3423eb9eeea1355c3c</Anchor>
    <Abstract>This name is used to construct the report path for this kind of document.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_nodeName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ade43c92af65af424ab16f717ad4d8287</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IndivoSimpleClinicalNote(Report)</Name>
      <APILanguage>c</APILanguage>
      <Type>cat</Type>
      <Scope>IndivoSimpleClinicalNote(Report)</Scope>
    </TokenIdentifier>
    <Path>category_indivo_simple_clinical_note_07_report_08.html</Path>
    <DeclaredIn>IndivoSimpleClinicalNote+Report.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IndivoVitalSigns</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>IndivoVitalSigns</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_vital_signs.html</Path>
    <Abstract>A class representing &amp;quot;indivo:VitalSigns&amp;quot; objects, generated from /indivo/data_models/core/vitals/mode...</Abstract>
    <DeclaredIn>IndivoVitalSigns.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reportTypeOfCategory:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoVitalSigns</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_vital_signs.html</Path>
    <Anchor>a5d7925786cb2a461973d2d89d58c1a44</Anchor>
    <DeclaredIn>IndivoVitalSigns+Report.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cachedObjectOfType:forId:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>acb39ff4eb2a628a11ddc611a266a7bcc</Anchor>
    <Abstract>Retrieves the cached object of a given type for a given document udid.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cacheObject:asType:forId:error:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a4ef5076f5ddc9bfc93a567de80c37699</Anchor>
    <Abstract>Stores an object of a given type for the document of the given udid.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>documentClassForType:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a709c6c3260b6a07c5aa1241707a9b5b1</Anchor>
    <Abstract>Returns the class for a previously registered type, or &amp;quot;IndivoDocument&amp;quot; if the type has not been regi...</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetchReportPathForRecord:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a02d49b2bcf494d71451c5e0ae74ad7f7</Anchor>
    <Abstract>The base path to get reports for documents of this class.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerDocumentClass:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>aa1ba18a981c893671566a7de273621ed</Anchor>
    <Abstract>Our IndivoDocument subclasses call this in their +load method.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reportType</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a4c034e46939f0a3423eb9eeea1355c3c</Anchor>
    <Abstract>This name is used to construct the report path for this kind of document.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>classForProperty:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>aa9331d4603241068d2d29481fa8cb581</Anchor>
    <Abstract>Returns the class of a property from the property map dictionary.</Abstract>
    <DeclaredIn>IndivoAbstractDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nameSpace</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a89f514a9bd6feceffb555de1ba7a879c</Anchor>
    <DeclaredIn>IndivoAbstractDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>newWithRecord:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a4b2dd239c2475800223f51d64777bc9b</Anchor>
    <Abstract>To get a new instance that must be pushed to the server.</Abstract>
    <DeclaredIn>IndivoAbstractDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>propertyClassMapper</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a3bb2b4fd5a3b1ef11798f8fdabba821e</Anchor>
    <Abstract>The automatically generated IndivoDocument subclasses return a dictionary with property-&amp;gt;class mappin...</Abstract>
    <DeclaredIn>IndivoAbstractDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>useFlatXMLFormat</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>afda78beb168898f6424a11b8b5ca0764</Anchor>
    <Abstract>Implementing this to have some flexibility about the XML format to use on the road to Indivo 2...</Abstract>
    <DeclaredIn>IndivoAbstractDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bmi</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoVitalSigns</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_vital_signs.html</Path>
    <Anchor>afe71e0fa566511423c8f71e96c2cde1d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bp</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoVitalSigns</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_vital_signs.html</Path>
    <Anchor>a6a3922665d2cf63a80e871f262d57c7a</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>date</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoVitalSigns</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_vital_signs.html</Path>
    <Anchor>aa00b426a6584871905f7246f1e2a34e3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>encounter</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoVitalSigns</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_vital_signs.html</Path>
    <Anchor>a132033364714abefccb2b8f747c4f616</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>heart_rate</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoVitalSigns</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_vital_signs.html</Path>
    <Anchor>a259a3ac941c1db84a89a854a86b2d8d2</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>height</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoVitalSigns</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_vital_signs.html</Path>
    <Anchor>ad41c8229287c41443c4e2c175dcb0e21</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>oxygen_saturation</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoVitalSigns</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_vital_signs.html</Path>
    <Anchor>a765727d256b903d5a5e7d8dbee9ec26e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>respiratory_rate</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoVitalSigns</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_vital_signs.html</Path>
    <Anchor>ab88de7df754cfc7681d0d73cc449a4f6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>temperature</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoVitalSigns</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_vital_signs.html</Path>
    <Anchor>a4e9d144d11933f0abe00bf580c5cfe41</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>weight</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoVitalSigns</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_vital_signs.html</Path>
    <Anchor>a132868aa0fb84d06db89f59162df0f56</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>creator</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a620875e739fb98afa435f372df5909e9</Anchor>
    <Abstract>The creator of the document.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>documentStatus</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a706ab192803bdc2a9e75dbea73c530c3</Anchor>
    <Abstract>This document&amp;#39;s status.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetched</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>aef7d0b6214c80dacb33bd765d2306dac</Anchor>
    <Abstract>YES if the document has been fetched from the server.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>label</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a15ac87855f8919d4eae6d662dc6fb353</Anchor>
    <Abstract>This document&amp;#39;s label.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uuidLatest</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a01799b4080d41101d64a160fac00cb9b</Anchor>
    <Abstract>The udid of the latest document of the receiver.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uuidOriginal</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a2babd44cc1b5a2ee45aec75ea475ce71</Anchor>
    <Abstract>The udid of the original document, if the receiver replaced a document.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uuidReplaces</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>aade8cc30ac5d8e22f1f4fa30f26527e1</Anchor>
    <Abstract>The udid of the replaced document, if the receiver replaced a document.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>created</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a761cde7620d1ecb3b5361881ea1332d7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nameSpace</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a3c9e8a8fc73c75b6bef306d38531dd14</Anchor>
    <Abstract>The namespace.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>record</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>a850f4818dd6239fd60c379697227f3f7</Anchor>
    <Abstract>The owning record. If you change this on documents fetched from the server, you will get errors...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>suppressed</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoAbstractDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_abstract_document.html</Path>
    <Anchor>af9bf4dc81377b4f03db1155f4fd1d9b5</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onServer</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>ab0a5a28ab2950cee434c1ffe3588be68</Anchor>
    <Abstract>Indicates whether this document lives on the server.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>server</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a16eaad9d8c1852f6d59b595d9748bc22</Anchor>
    <Abstract>Our beloved server.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uuid</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a3bbdea7b50f5b42650336852c6c401ff</Anchor>
    <Abstract>This object&amp;#39;s udid.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>archive:forReason:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a1be83576ad6d408b0d55bf1ad2b316e2</Anchor>
    <Abstract>Archive (or unarchive) a document for the given reason.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>basePostPath</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>addf4756929723f7bda04adfac88b236b</Anchor>
    <Abstract>The base path, e.g.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cachedObjectOfType:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>ad897004d23faa4db60bc8063cfafe489</Anchor>
    <Abstract>Retrieves the object for a given type from cache.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cacheObject:asType:error:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>afc06871b51cf4d7607887101e3bc1796</Anchor>
    <Abstract>Caches the object for a given type.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>documentPath</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a039d6cb30422992d8484b6243cd9ffc5</Anchor>
    <Abstract>The path to this document, i.e.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetchMetaDocumentWithCallback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>aef370c7434b6b8362cf45bec9cbd9fa7</Anchor>
    <Abstract>Fetches the meta document for this document.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetchStatusHistoryWithCallback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a8a738a777edeba7f0ae9de8f90a13b51</Anchor>
    <Abstract>Fetch the document&amp;#39;s version history.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetchVersionsWithCallback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a1acaadb8f92fb62da6214c50b073a187</Anchor>
    <Abstract>Fetch the document&amp;#39;s version history.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasStatus:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a83cedfbe21cc33cb715c0312a2512e5c</Anchor>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initFromNode:forRecord:withMeta:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a7681c2bd841f9ead3e58518bca914dc5</Anchor>
    <Abstract>The designated initializer.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isLatest</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a9d97b9ea0934923c797a1ffd24d01e27</Anchor>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pull:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a31ceb5b6fb978361e99d4d2d62dcbdde</Anchor>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>push:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a8fd3cac97039b11d7cacccbc122a9408</Anchor>
    <Abstract>This method puts a new document on the server.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>replace:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a817fd1faedcd79a84c8801069df542dc</Anchor>
    <Abstract>This method updates the receiver&amp;#39;s version on the server with new data from the receiver&amp;#39;s properties...</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLabel:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>ab691e3d71bcbb2748152d96c5d8da360</Anchor>
    <Abstract>Label a document.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateWithMeta:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>ab90c1ce19f1c5edda798eddcc85dea58</Anchor>
    <Abstract>This method updates our udid, type and status from the given meta document.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>void:forReason:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoDocument</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_document.html</Path>
    <Anchor>a2558c974611c31e7b7ee77ae42aa836a</Anchor>
    <Abstract>Void (or unvoid) a document for a given reason.</Abstract>
    <DeclaredIn>IndivoDocument.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_nodeName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ade43c92af65af424ab16f717ad4d8287</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IndivoVitalSigns(Report)</Name>
      <APILanguage>c</APILanguage>
      <Type>cat</Type>
      <Scope>IndivoVitalSigns(Report)</Scope>
    </TokenIdentifier>
    <Path>category_indivo_vital_signs_07_report_08.html</Path>
    <DeclaredIn>IndivoVitalSigns+Report.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reportTypeOfCategory:</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
      <Scope>IndivoVitalSigns(Report)</Scope>
    </TokenIdentifier>
    <Path>category_indivo_vital_signs_07_report_08.html</Path>
    <Anchor>a5d7925786cb2a461973d2d89d58c1a44</Anchor>
    <DeclaredIn>IndivoVitalSigns+Report.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IndivoWebView</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>IndivoWebView</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_web_view.html</Path>
    <DeclaredIn>IndivoWebView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>load</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoWebView</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_web_view.html</Path>
    <Anchor>a00f87dc88d493ba5a32743f6bbdfb7ea</Anchor>
    <Abstract>The load method only loads if the page has not yet been loaded.</Abstract>
    <DeclaredIn>IndivoWebView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preload:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoWebView</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_web_view.html</Path>
    <Anchor>ad12800c2ad4c206a548a94d5758758b2</Anchor>
    <Abstract>This method forces the view to be loaded and then loads the url.</Abstract>
    <DeclaredIn>IndivoWebView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reload:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>IndivoWebView</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_web_view.html</Path>
    <Anchor>ae99caba679a0dc82fc3b319d0bc6203d</Anchor>
    <Abstract>As a difference to load, reload also loads if the page was already loaded.</Abstract>
    <DeclaredIn>IndivoWebView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>url</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoWebView</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_web_view.html</Path>
    <Anchor>a844a21c6f303f4181825e75d55be0550</Anchor>
    <Abstract>The URL to be loaded/to load.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>webView</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>IndivoWebView</Scope>
    </TokenIdentifier>
    <Path>interface_indivo_web_view.html</Path>
    <Anchor>a8e720bf726b33499928f31180d5be1f5</Anchor>
    <Abstract>The handle to our web view.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>INDocumentStatusNode</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>INDocumentStatusNode</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_document_status_node.html</Path>
    <Abstract>Representing a document status entry.</Abstract>
    <DeclaredIn>INDocumentStatusNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>at</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INDocumentStatusNode</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_document_status_node.html</Path>
    <Anchor>a2c41a64779d39c28e4ee8319e00177dc</Anchor>
    <Abstract>Date of the change.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>by</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INDocumentStatusNode</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_document_status_node.html</Path>
    <Anchor>a16d807fee3487af5529cf53fc3cec1fa</Anchor>
    <Abstract>The account id of the user changing the document.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reason</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INDocumentStatusNode</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_document_status_node.html</Path>
    <Anchor>ac1a2a24b3a8cc32c7fb535068ebdb4f5</Anchor>
    <Abstract>Reason given for the change.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>status</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INDocumentStatusNode</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_document_status_node.html</Path>
    <Anchor>a0bc90f346929d3123d765ab048c49adb</Anchor>
    <Abstract>The status after the change.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mustDeclareType</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a728fb03d744e577a283abd8de40f963f</Anchor>
    <Abstract>NO by default. If YES, the XML output should contain &amp;quot;xsi:type&amp;quot;.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeName</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a973a63722bd2a9ff7637f47530f04d36</Anchor>
    <Abstract>The object&amp;#39;s nodeName.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeType</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a771138093fcd1db3243a4b8c5b8cf04e</Anchor>
    <Abstract>The type, e.g. &amp;quot;indivo:ValueAndUnit&amp;quot; or &amp;quot;xs:date&amp;quot;.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>asAttribute</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a75c5d68b06350558099044ce3a9d699e</Anchor>
    <Abstract>Returns the value of this node usable as attribute to another node.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributeValue</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a9709e6fee409dd3f7807e8221b5e69e4</Anchor>
    <Abstract>Returns the string that goes into the attribute value.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flatXMLPartsWithPrefix:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ab13beda92d1082fbdd10a3b21c4cfbb7</Anchor>
    <Abstract>Indivo 2.0&amp;#39;s ugly flat XML format needs this.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initFromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>adeead863b5cfa8a5d5e67b972856548b</Anchor>
    <Abstract>The designated initializer.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>innerXML</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>abd3cd1007fc6a53c021c768d8683f59c</Anchor>
    <Abstract>Returns the XML of all child nodes.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNull</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a6e7a7b930974303ba1b8ac4991967d24</Anchor>
    <Abstract>An object can decide that it is null, i.e.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFromFlatParent:prefix:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a1eb0c99c8d591f3a58b588363e4d2565</Anchor>
    <Abstract>Handling incoming Indivo 2.0 flat XML IndivoAbstractDocument, a subclass of INObject, uses a slightly more diverse implementation of this method.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ad4932e0b05bc9d5ef23b89b8d4509400</Anchor>
    <Abstract>The INObject implementation sets the node name and node type (if a &amp;quot;type&amp;quot; attribute is found in the X...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWithAttr:fromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>af329d1bf14adb4c69f32148c418ca4cb</Anchor>
    <Abstract>Tries to interpret the attribute string as representing our value.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tagString</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a6526a4c774e928adecf4d0efad4758ee</Anchor>
    <Abstract>Returns the tag name and, if mustDeclareType is YES, the xsi:type-attribute, ready to be used as tag ...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>xml</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a217d51d9b40673b5009665c3923b12a6</Anchor>
    <Abstract>Return an XML representation of the object.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributeNames</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a6b32a6cd314574c9ba03e188722bd7ea</Anchor>
    <Abstract>The properties whose names are returned here are expected to be XML node attributes rather than compl...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flatXMLNameForPropertyName:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a045def193f53f5547de4d27cb594eccc</Anchor>
    <Abstract>Objects have the ability to use a different name from the property name for flat XML &amp;quot;name&amp;quot; attribute...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>newWithNodeName:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>aeed9099cc8ad55d64b1b3225365b48e0</Anchor>
    <Abstract>Returns a fresh node with nodeName set.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeName</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a884c5eedff050615b24d1a8b6866631f</Anchor>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeType</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a442303ee5dee7d6a24013da204753aec</Anchor>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>objectFromAttribute:inNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a499c48080c52224d6e7650c7d7fa9ab8</Anchor>
    <Abstract>This method returns an object created from the string contents of a node attribute.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>objectFromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ad6122063a8025ee62db1469397527b5d</Anchor>
    <Abstract>This method returns an object created representing the the node.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_nodeName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ade43c92af65af424ab16f717ad4d8287</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>INDouble</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>INDouble</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_double.html</Path>
    <Abstract>Represents &amp;quot;xs:double&amp;quot;.</Abstract>
    <DeclaredIn>INDouble.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>asAttribute</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a75c5d68b06350558099044ce3a9d699e</Anchor>
    <Abstract>Returns the value of this node usable as attribute to another node.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributeValue</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a9709e6fee409dd3f7807e8221b5e69e4</Anchor>
    <Abstract>Returns the string that goes into the attribute value.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flatXMLPartsWithPrefix:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ab13beda92d1082fbdd10a3b21c4cfbb7</Anchor>
    <Abstract>Indivo 2.0&amp;#39;s ugly flat XML format needs this.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initFromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>adeead863b5cfa8a5d5e67b972856548b</Anchor>
    <Abstract>The designated initializer.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>innerXML</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>abd3cd1007fc6a53c021c768d8683f59c</Anchor>
    <Abstract>Returns the XML of all child nodes.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNull</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a6e7a7b930974303ba1b8ac4991967d24</Anchor>
    <Abstract>An object can decide that it is null, i.e.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFromFlatParent:prefix:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a1eb0c99c8d591f3a58b588363e4d2565</Anchor>
    <Abstract>Handling incoming Indivo 2.0 flat XML IndivoAbstractDocument, a subclass of INObject, uses a slightly more diverse implementation of this method.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ad4932e0b05bc9d5ef23b89b8d4509400</Anchor>
    <Abstract>The INObject implementation sets the node name and node type (if a &amp;quot;type&amp;quot; attribute is found in the X...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWithAttr:fromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>af329d1bf14adb4c69f32148c418ca4cb</Anchor>
    <Abstract>Tries to interpret the attribute string as representing our value.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tagString</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a6526a4c774e928adecf4d0efad4758ee</Anchor>
    <Abstract>Returns the tag name and, if mustDeclareType is YES, the xsi:type-attribute, ready to be used as tag ...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>xml</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a217d51d9b40673b5009665c3923b12a6</Anchor>
    <Abstract>Return an XML representation of the object.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>newWithDouble:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INDecimal</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_decimal.html</Path>
    <Anchor>a585c6eecad11f25ff3fb38d3291077bb</Anchor>
    <DeclaredIn>INDecimal.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_nodeName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ade43c92af65af424ab16f717ad4d8287</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>number</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INDecimal</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_decimal.html</Path>
    <Anchor>a69d5a1b1343c89f7bee1c8dcd0e5d4e8</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>INDuration</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>INDuration</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_duration.html</Path>
    <Abstract>Represents a &amp;quot;xs:duration&amp;quot; object.</Abstract>
    <DeclaredIn>INDuration.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>duration</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INDuration</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_duration.html</Path>
    <Anchor>a9dccdd461229da3800b2cf91901d7d1f</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mustDeclareType</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a728fb03d744e577a283abd8de40f963f</Anchor>
    <Abstract>NO by default. If YES, the XML output should contain &amp;quot;xsi:type&amp;quot;.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeName</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a973a63722bd2a9ff7637f47530f04d36</Anchor>
    <Abstract>The object&amp;#39;s nodeName.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeType</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a771138093fcd1db3243a4b8c5b8cf04e</Anchor>
    <Abstract>The type, e.g. &amp;quot;indivo:ValueAndUnit&amp;quot; or &amp;quot;xs:date&amp;quot;.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>asAttribute</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a75c5d68b06350558099044ce3a9d699e</Anchor>
    <Abstract>Returns the value of this node usable as attribute to another node.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributeValue</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a9709e6fee409dd3f7807e8221b5e69e4</Anchor>
    <Abstract>Returns the string that goes into the attribute value.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flatXMLPartsWithPrefix:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ab13beda92d1082fbdd10a3b21c4cfbb7</Anchor>
    <Abstract>Indivo 2.0&amp;#39;s ugly flat XML format needs this.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initFromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>adeead863b5cfa8a5d5e67b972856548b</Anchor>
    <Abstract>The designated initializer.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>innerXML</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>abd3cd1007fc6a53c021c768d8683f59c</Anchor>
    <Abstract>Returns the XML of all child nodes.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNull</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a6e7a7b930974303ba1b8ac4991967d24</Anchor>
    <Abstract>An object can decide that it is null, i.e.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFromFlatParent:prefix:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a1eb0c99c8d591f3a58b588363e4d2565</Anchor>
    <Abstract>Handling incoming Indivo 2.0 flat XML IndivoAbstractDocument, a subclass of INObject, uses a slightly more diverse implementation of this method.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ad4932e0b05bc9d5ef23b89b8d4509400</Anchor>
    <Abstract>The INObject implementation sets the node name and node type (if a &amp;quot;type&amp;quot; attribute is found in the X...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWithAttr:fromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>af329d1bf14adb4c69f32148c418ca4cb</Anchor>
    <Abstract>Tries to interpret the attribute string as representing our value.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tagString</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a6526a4c774e928adecf4d0efad4758ee</Anchor>
    <Abstract>Returns the tag name and, if mustDeclareType is YES, the xsi:type-attribute, ready to be used as tag ...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>xml</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a217d51d9b40673b5009665c3923b12a6</Anchor>
    <Abstract>Return an XML representation of the object.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributeNames</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a6b32a6cd314574c9ba03e188722bd7ea</Anchor>
    <Abstract>The properties whose names are returned here are expected to be XML node attributes rather than compl...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flatXMLNameForPropertyName:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a045def193f53f5547de4d27cb594eccc</Anchor>
    <Abstract>Objects have the ability to use a different name from the property name for flat XML &amp;quot;name&amp;quot; attribute...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>newWithNodeName:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>aeed9099cc8ad55d64b1b3225365b48e0</Anchor>
    <Abstract>Returns a fresh node with nodeName set.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeName</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a884c5eedff050615b24d1a8b6866631f</Anchor>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeType</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a442303ee5dee7d6a24013da204753aec</Anchor>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>objectFromAttribute:inNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a499c48080c52224d6e7650c7d7fa9ab8</Anchor>
    <Abstract>This method returns an object created from the string contents of a node attribute.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>objectFromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ad6122063a8025ee62db1469397527b5d</Anchor>
    <Abstract>This method returns an object created representing the the node.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_nodeName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ade43c92af65af424ab16f717ad4d8287</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>INFloat</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>INFloat</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_float.html</Path>
    <Abstract>Represents &amp;quot;xs:float&amp;quot;.</Abstract>
    <DeclaredIn>INFloat.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>asAttribute</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a75c5d68b06350558099044ce3a9d699e</Anchor>
    <Abstract>Returns the value of this node usable as attribute to another node.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributeValue</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a9709e6fee409dd3f7807e8221b5e69e4</Anchor>
    <Abstract>Returns the string that goes into the attribute value.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flatXMLPartsWithPrefix:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ab13beda92d1082fbdd10a3b21c4cfbb7</Anchor>
    <Abstract>Indivo 2.0&amp;#39;s ugly flat XML format needs this.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initFromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>adeead863b5cfa8a5d5e67b972856548b</Anchor>
    <Abstract>The designated initializer.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>innerXML</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>abd3cd1007fc6a53c021c768d8683f59c</Anchor>
    <Abstract>Returns the XML of all child nodes.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNull</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a6e7a7b930974303ba1b8ac4991967d24</Anchor>
    <Abstract>An object can decide that it is null, i.e.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFromFlatParent:prefix:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a1eb0c99c8d591f3a58b588363e4d2565</Anchor>
    <Abstract>Handling incoming Indivo 2.0 flat XML IndivoAbstractDocument, a subclass of INObject, uses a slightly more diverse implementation of this method.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ad4932e0b05bc9d5ef23b89b8d4509400</Anchor>
    <Abstract>The INObject implementation sets the node name and node type (if a &amp;quot;type&amp;quot; attribute is found in the X...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWithAttr:fromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>af329d1bf14adb4c69f32148c418ca4cb</Anchor>
    <Abstract>Tries to interpret the attribute string as representing our value.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tagString</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a6526a4c774e928adecf4d0efad4758ee</Anchor>
    <Abstract>Returns the tag name and, if mustDeclareType is YES, the xsi:type-attribute, ready to be used as tag ...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>xml</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a217d51d9b40673b5009665c3923b12a6</Anchor>
    <Abstract>Return an XML representation of the object.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>newWithDouble:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INDecimal</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_decimal.html</Path>
    <Anchor>a585c6eecad11f25ff3fb38d3291077bb</Anchor>
    <DeclaredIn>INDecimal.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_nodeName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ade43c92af65af424ab16f717ad4d8287</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>number</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INDecimal</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_decimal.html</Path>
    <Anchor>a69d5a1b1343c89f7bee1c8dcd0e5d4e8</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>INGenderType</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>INGenderType</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_gender_type.html</Path>
    <Abstract>A class representing a gender.</Abstract>
    <DeclaredIn>INGenderType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>asAttribute</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a75c5d68b06350558099044ce3a9d699e</Anchor>
    <Abstract>Returns the value of this node usable as attribute to another node.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributeValue</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a9709e6fee409dd3f7807e8221b5e69e4</Anchor>
    <Abstract>Returns the string that goes into the attribute value.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flatXMLPartsWithPrefix:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ab13beda92d1082fbdd10a3b21c4cfbb7</Anchor>
    <Abstract>Indivo 2.0&amp;#39;s ugly flat XML format needs this.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initFromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>adeead863b5cfa8a5d5e67b972856548b</Anchor>
    <Abstract>The designated initializer.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>innerXML</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>abd3cd1007fc6a53c021c768d8683f59c</Anchor>
    <Abstract>Returns the XML of all child nodes.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNull</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a6e7a7b930974303ba1b8ac4991967d24</Anchor>
    <Abstract>An object can decide that it is null, i.e.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFromFlatParent:prefix:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a1eb0c99c8d591f3a58b588363e4d2565</Anchor>
    <Abstract>Handling incoming Indivo 2.0 flat XML IndivoAbstractDocument, a subclass of INObject, uses a slightly more diverse implementation of this method.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ad4932e0b05bc9d5ef23b89b8d4509400</Anchor>
    <Abstract>The INObject implementation sets the node name and node type (if a &amp;quot;type&amp;quot; attribute is found in the X...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWithAttr:fromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>af329d1bf14adb4c69f32148c418ca4cb</Anchor>
    <Abstract>Tries to interpret the attribute string as representing our value.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tagString</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a6526a4c774e928adecf4d0efad4758ee</Anchor>
    <Abstract>Returns the tag name and, if mustDeclareType is YES, the xsi:type-attribute, ready to be used as tag ...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>xml</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a217d51d9b40673b5009665c3923b12a6</Anchor>
    <Abstract>Return an XML representation of the object.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>restrictedTo</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INNormalizedString</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_normalized_string.html</Path>
    <Anchor>a259107696fab8634e59d60ff06aaff01</Anchor>
    <Abstract>Subclasses can be restricted to certain possible strings.</Abstract>
    <DeclaredIn>INNormalizedString.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_nodeName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ade43c92af65af424ab16f717ad4d8287</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>string</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INString</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_string.html</Path>
    <Anchor>a97bf290695d9e0d6a0e8193bcfa0142d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>INInteger</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>INInteger</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_integer.html</Path>
    <Abstract>Represents &amp;quot;xs:integer&amp;quot;.</Abstract>
    <DeclaredIn>INInteger.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>asAttribute</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a75c5d68b06350558099044ce3a9d699e</Anchor>
    <Abstract>Returns the value of this node usable as attribute to another node.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributeValue</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a9709e6fee409dd3f7807e8221b5e69e4</Anchor>
    <Abstract>Returns the string that goes into the attribute value.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flatXMLPartsWithPrefix:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ab13beda92d1082fbdd10a3b21c4cfbb7</Anchor>
    <Abstract>Indivo 2.0&amp;#39;s ugly flat XML format needs this.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initFromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>adeead863b5cfa8a5d5e67b972856548b</Anchor>
    <Abstract>The designated initializer.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>innerXML</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>abd3cd1007fc6a53c021c768d8683f59c</Anchor>
    <Abstract>Returns the XML of all child nodes.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNull</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a6e7a7b930974303ba1b8ac4991967d24</Anchor>
    <Abstract>An object can decide that it is null, i.e.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFromFlatParent:prefix:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a1eb0c99c8d591f3a58b588363e4d2565</Anchor>
    <Abstract>Handling incoming Indivo 2.0 flat XML IndivoAbstractDocument, a subclass of INObject, uses a slightly more diverse implementation of this method.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ad4932e0b05bc9d5ef23b89b8d4509400</Anchor>
    <Abstract>The INObject implementation sets the node name and node type (if a &amp;quot;type&amp;quot; attribute is found in the X...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWithAttr:fromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>af329d1bf14adb4c69f32148c418ca4cb</Anchor>
    <Abstract>Tries to interpret the attribute string as representing our value.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tagString</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a6526a4c774e928adecf4d0efad4758ee</Anchor>
    <Abstract>Returns the tag name and, if mustDeclareType is YES, the xsi:type-attribute, ready to be used as tag ...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>xml</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a217d51d9b40673b5009665c3923b12a6</Anchor>
    <Abstract>Return an XML representation of the object.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>newWithDouble:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INDecimal</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_decimal.html</Path>
    <Anchor>a585c6eecad11f25ff3fb38d3291077bb</Anchor>
    <DeclaredIn>INDecimal.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_nodeName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ade43c92af65af424ab16f717ad4d8287</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>number</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INDecimal</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_decimal.html</Path>
    <Anchor>a69d5a1b1343c89f7bee1c8dcd0e5d4e8</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>INName</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>INName</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_name.html</Path>
    <Abstract>A class representing Indivo Name objects.</Abstract>
    <DeclaredIn>INName.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>familyName</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INName</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_name.html</Path>
    <Anchor>aa394f21fd30786a01317b9d30bfec59f</Anchor>
    <Abstract>minOccurs = 1</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>givenName</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INName</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_name.html</Path>
    <Anchor>a84b8fe5243cda9b5f2b8051b1a707ebc</Anchor>
    <Abstract>minOccurs = 1</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>middleName</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INName</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_name.html</Path>
    <Anchor>ae8a920d813d6dd6e82bcc155f3887071</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prefix</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INName</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_name.html</Path>
    <Anchor>aa10d8ab4f81a271d2f8f787b195471b9</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>suffix</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INName</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_name.html</Path>
    <Anchor>ac9c5c3f69be68c0b72bc49e95849aaca</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>asAttribute</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a75c5d68b06350558099044ce3a9d699e</Anchor>
    <Abstract>Returns the value of this node usable as attribute to another node.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributeValue</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a9709e6fee409dd3f7807e8221b5e69e4</Anchor>
    <Abstract>Returns the string that goes into the attribute value.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flatXMLPartsWithPrefix:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ab13beda92d1082fbdd10a3b21c4cfbb7</Anchor>
    <Abstract>Indivo 2.0&amp;#39;s ugly flat XML format needs this.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initFromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>adeead863b5cfa8a5d5e67b972856548b</Anchor>
    <Abstract>The designated initializer.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>innerXML</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>abd3cd1007fc6a53c021c768d8683f59c</Anchor>
    <Abstract>Returns the XML of all child nodes.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNull</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a6e7a7b930974303ba1b8ac4991967d24</Anchor>
    <Abstract>An object can decide that it is null, i.e.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFromFlatParent:prefix:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a1eb0c99c8d591f3a58b588363e4d2565</Anchor>
    <Abstract>Handling incoming Indivo 2.0 flat XML IndivoAbstractDocument, a subclass of INObject, uses a slightly more diverse implementation of this method.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ad4932e0b05bc9d5ef23b89b8d4509400</Anchor>
    <Abstract>The INObject implementation sets the node name and node type (if a &amp;quot;type&amp;quot; attribute is found in the X...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWithAttr:fromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>af329d1bf14adb4c69f32148c418ca4cb</Anchor>
    <Abstract>Tries to interpret the attribute string as representing our value.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tagString</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a6526a4c774e928adecf4d0efad4758ee</Anchor>
    <Abstract>Returns the tag name and, if mustDeclareType is YES, the xsi:type-attribute, ready to be used as tag ...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>xml</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a217d51d9b40673b5009665c3923b12a6</Anchor>
    <Abstract>Return an XML representation of the object.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributeNames</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a6b32a6cd314574c9ba03e188722bd7ea</Anchor>
    <Abstract>The properties whose names are returned here are expected to be XML node attributes rather than compl...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flatXMLNameForPropertyName:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a045def193f53f5547de4d27cb594eccc</Anchor>
    <Abstract>Objects have the ability to use a different name from the property name for flat XML &amp;quot;name&amp;quot; attribute...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>newWithNodeName:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>aeed9099cc8ad55d64b1b3225365b48e0</Anchor>
    <Abstract>Returns a fresh node with nodeName set.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeName</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a884c5eedff050615b24d1a8b6866631f</Anchor>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeType</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a442303ee5dee7d6a24013da204753aec</Anchor>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>objectFromAttribute:inNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a499c48080c52224d6e7650c7d7fa9ab8</Anchor>
    <Abstract>This method returns an object created from the string contents of a node attribute.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>objectFromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ad6122063a8025ee62db1469397527b5d</Anchor>
    <Abstract>This method returns an object created representing the the node.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_nodeName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ade43c92af65af424ab16f717ad4d8287</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>INNormalizedString</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>INNormalizedString</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_normalized_string.html</Path>
    <Abstract>A class to represent &amp;quot;xs:normalizedString&amp;quot; elements.</Abstract>
    <DeclaredIn>INNormalizedString.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>restrictedTo</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INNormalizedString</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_normalized_string.html</Path>
    <Anchor>a259107696fab8634e59d60ff06aaff01</Anchor>
    <Abstract>Subclasses can be restricted to certain possible strings.</Abstract>
    <DeclaredIn>INNormalizedString.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>newWithString:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INString</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_string.html</Path>
    <Anchor>ad41ff5c3a3916e0428d6b61e4c1eb864</Anchor>
    <DeclaredIn>INString.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributeNames</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a6b32a6cd314574c9ba03e188722bd7ea</Anchor>
    <Abstract>The properties whose names are returned here are expected to be XML node attributes rather than compl...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flatXMLNameForPropertyName:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a045def193f53f5547de4d27cb594eccc</Anchor>
    <Abstract>Objects have the ability to use a different name from the property name for flat XML &amp;quot;name&amp;quot; attribute...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>newWithNodeName:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>aeed9099cc8ad55d64b1b3225365b48e0</Anchor>
    <Abstract>Returns a fresh node with nodeName set.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeName</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a884c5eedff050615b24d1a8b6866631f</Anchor>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeType</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a442303ee5dee7d6a24013da204753aec</Anchor>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>objectFromAttribute:inNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a499c48080c52224d6e7650c7d7fa9ab8</Anchor>
    <Abstract>This method returns an object created from the string contents of a node attribute.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>objectFromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ad6122063a8025ee62db1469397527b5d</Anchor>
    <Abstract>This method returns an object created representing the the node.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>asAttribute</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a75c5d68b06350558099044ce3a9d699e</Anchor>
    <Abstract>Returns the value of this node usable as attribute to another node.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributeValue</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a9709e6fee409dd3f7807e8221b5e69e4</Anchor>
    <Abstract>Returns the string that goes into the attribute value.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flatXMLPartsWithPrefix:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ab13beda92d1082fbdd10a3b21c4cfbb7</Anchor>
    <Abstract>Indivo 2.0&amp;#39;s ugly flat XML format needs this.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initFromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>adeead863b5cfa8a5d5e67b972856548b</Anchor>
    <Abstract>The designated initializer.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>innerXML</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>abd3cd1007fc6a53c021c768d8683f59c</Anchor>
    <Abstract>Returns the XML of all child nodes.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNull</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a6e7a7b930974303ba1b8ac4991967d24</Anchor>
    <Abstract>An object can decide that it is null, i.e.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFromFlatParent:prefix:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a1eb0c99c8d591f3a58b588363e4d2565</Anchor>
    <Abstract>Handling incoming Indivo 2.0 flat XML IndivoAbstractDocument, a subclass of INObject, uses a slightly more diverse implementation of this method.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ad4932e0b05bc9d5ef23b89b8d4509400</Anchor>
    <Abstract>The INObject implementation sets the node name and node type (if a &amp;quot;type&amp;quot; attribute is found in the X...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWithAttr:fromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>af329d1bf14adb4c69f32148c418ca4cb</Anchor>
    <Abstract>Tries to interpret the attribute string as representing our value.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tagString</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a6526a4c774e928adecf4d0efad4758ee</Anchor>
    <Abstract>Returns the tag name and, if mustDeclareType is YES, the xsi:type-attribute, ready to be used as tag ...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>xml</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a217d51d9b40673b5009665c3923b12a6</Anchor>
    <Abstract>Return an XML representation of the object.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_nodeName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ade43c92af65af424ab16f717ad4d8287</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>string</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INString</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_string.html</Path>
    <Anchor>a97bf290695d9e0d6a0e8193bcfa0142d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>INObject</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Abstract>An INObject is a lightweight object representing data in an XML tree.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>asAttribute</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a75c5d68b06350558099044ce3a9d699e</Anchor>
    <Abstract>Returns the value of this node usable as attribute to another node.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributeValue</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a9709e6fee409dd3f7807e8221b5e69e4</Anchor>
    <Abstract>Returns the string that goes into the attribute value.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flatXMLPartsWithPrefix:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ab13beda92d1082fbdd10a3b21c4cfbb7</Anchor>
    <Abstract>Indivo 2.0&amp;#39;s ugly flat XML format needs this.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initFromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>adeead863b5cfa8a5d5e67b972856548b</Anchor>
    <Abstract>The designated initializer.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>innerXML</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>abd3cd1007fc6a53c021c768d8683f59c</Anchor>
    <Abstract>Returns the XML of all child nodes.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNull</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a6e7a7b930974303ba1b8ac4991967d24</Anchor>
    <Abstract>An object can decide that it is null, i.e.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFromFlatParent:prefix:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a1eb0c99c8d591f3a58b588363e4d2565</Anchor>
    <Abstract>Handling incoming Indivo 2.0 flat XML IndivoAbstractDocument, a subclass of INObject, uses a slightly more diverse implementation of this method.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ad4932e0b05bc9d5ef23b89b8d4509400</Anchor>
    <Abstract>The INObject implementation sets the node name and node type (if a &amp;quot;type&amp;quot; attribute is found in the X...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWithAttr:fromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>af329d1bf14adb4c69f32148c418ca4cb</Anchor>
    <Abstract>Tries to interpret the attribute string as representing our value.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tagString</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a6526a4c774e928adecf4d0efad4758ee</Anchor>
    <Abstract>Returns the tag name and, if mustDeclareType is YES, the xsi:type-attribute, ready to be used as tag ...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>xml</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a217d51d9b40673b5009665c3923b12a6</Anchor>
    <Abstract>Return an XML representation of the object.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributeNames</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a6b32a6cd314574c9ba03e188722bd7ea</Anchor>
    <Abstract>The properties whose names are returned here are expected to be XML node attributes rather than compl...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flatXMLNameForPropertyName:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a045def193f53f5547de4d27cb594eccc</Anchor>
    <Abstract>Objects have the ability to use a different name from the property name for flat XML &amp;quot;name&amp;quot; attribute...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>newWithNodeName:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>aeed9099cc8ad55d64b1b3225365b48e0</Anchor>
    <Abstract>Returns a fresh node with nodeName set.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeName</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a884c5eedff050615b24d1a8b6866631f</Anchor>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeType</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a442303ee5dee7d6a24013da204753aec</Anchor>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>objectFromAttribute:inNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a499c48080c52224d6e7650c7d7fa9ab8</Anchor>
    <Abstract>This method returns an object created from the string contents of a node attribute.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>objectFromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ad6122063a8025ee62db1469397527b5d</Anchor>
    <Abstract>This method returns an object created representing the the node.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_nodeName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ade43c92af65af424ab16f717ad4d8287</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mustDeclareType</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a728fb03d744e577a283abd8de40f963f</Anchor>
    <Abstract>NO by default. If YES, the XML output should contain &amp;quot;xsi:type&amp;quot;.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeName</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a973a63722bd2a9ff7637f47530f04d36</Anchor>
    <Abstract>The object&amp;#39;s nodeName.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeType</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a771138093fcd1db3243a4b8c5b8cf04e</Anchor>
    <Abstract>The type, e.g. &amp;quot;indivo:ValueAndUnit&amp;quot; or &amp;quot;xs:date&amp;quot;.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>INOrganization</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>INOrganization</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_organization.html</Path>
    <DeclaredIn>INOrganization.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>asAttribute</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a75c5d68b06350558099044ce3a9d699e</Anchor>
    <Abstract>Returns the value of this node usable as attribute to another node.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributeValue</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a9709e6fee409dd3f7807e8221b5e69e4</Anchor>
    <Abstract>Returns the string that goes into the attribute value.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flatXMLPartsWithPrefix:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ab13beda92d1082fbdd10a3b21c4cfbb7</Anchor>
    <Abstract>Indivo 2.0&amp;#39;s ugly flat XML format needs this.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initFromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>adeead863b5cfa8a5d5e67b972856548b</Anchor>
    <Abstract>The designated initializer.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>innerXML</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>abd3cd1007fc6a53c021c768d8683f59c</Anchor>
    <Abstract>Returns the XML of all child nodes.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNull</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a6e7a7b930974303ba1b8ac4991967d24</Anchor>
    <Abstract>An object can decide that it is null, i.e.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFromFlatParent:prefix:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a1eb0c99c8d591f3a58b588363e4d2565</Anchor>
    <Abstract>Handling incoming Indivo 2.0 flat XML IndivoAbstractDocument, a subclass of INObject, uses a slightly more diverse implementation of this method.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ad4932e0b05bc9d5ef23b89b8d4509400</Anchor>
    <Abstract>The INObject implementation sets the node name and node type (if a &amp;quot;type&amp;quot; attribute is found in the X...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWithAttr:fromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>af329d1bf14adb4c69f32148c418ca4cb</Anchor>
    <Abstract>Tries to interpret the attribute string as representing our value.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tagString</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a6526a4c774e928adecf4d0efad4758ee</Anchor>
    <Abstract>Returns the tag name and, if mustDeclareType is YES, the xsi:type-attribute, ready to be used as tag ...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>xml</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a217d51d9b40673b5009665c3923b12a6</Anchor>
    <Abstract>Return an XML representation of the object.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributeNames</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a6b32a6cd314574c9ba03e188722bd7ea</Anchor>
    <Abstract>The properties whose names are returned here are expected to be XML node attributes rather than compl...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flatXMLNameForPropertyName:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a045def193f53f5547de4d27cb594eccc</Anchor>
    <Abstract>Objects have the ability to use a different name from the property name for flat XML &amp;quot;name&amp;quot; attribute...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>newWithNodeName:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>aeed9099cc8ad55d64b1b3225365b48e0</Anchor>
    <Abstract>Returns a fresh node with nodeName set.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeName</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a884c5eedff050615b24d1a8b6866631f</Anchor>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeType</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a442303ee5dee7d6a24013da204753aec</Anchor>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>objectFromAttribute:inNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a499c48080c52224d6e7650c7d7fa9ab8</Anchor>
    <Abstract>This method returns an object created from the string contents of a node attribute.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>objectFromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ad6122063a8025ee62db1469397527b5d</Anchor>
    <Abstract>This method returns an object created representing the the node.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_nodeName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ade43c92af65af424ab16f717ad4d8287</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mustDeclareType</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a728fb03d744e577a283abd8de40f963f</Anchor>
    <Abstract>NO by default. If YES, the XML output should contain &amp;quot;xsi:type&amp;quot;.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeName</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a973a63722bd2a9ff7637f47530f04d36</Anchor>
    <Abstract>The object&amp;#39;s nodeName.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeType</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a771138093fcd1db3243a4b8c5b8cf04e</Anchor>
    <Abstract>The type, e.g. &amp;quot;indivo:ValueAndUnit&amp;quot; or &amp;quot;xs:date&amp;quot;.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>INParentObject</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>INParentObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_parent_object.html</Path>
    <Abstract>This class is designed as abstract superclass for objects that have a few child elements.</Abstract>
    <DeclaredIn>INParentObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>asAttribute</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a75c5d68b06350558099044ce3a9d699e</Anchor>
    <Abstract>Returns the value of this node usable as attribute to another node.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributeValue</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a9709e6fee409dd3f7807e8221b5e69e4</Anchor>
    <Abstract>Returns the string that goes into the attribute value.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flatXMLPartsWithPrefix:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ab13beda92d1082fbdd10a3b21c4cfbb7</Anchor>
    <Abstract>Indivo 2.0&amp;#39;s ugly flat XML format needs this.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initFromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>adeead863b5cfa8a5d5e67b972856548b</Anchor>
    <Abstract>The designated initializer.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>innerXML</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>abd3cd1007fc6a53c021c768d8683f59c</Anchor>
    <Abstract>Returns the XML of all child nodes.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNull</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a6e7a7b930974303ba1b8ac4991967d24</Anchor>
    <Abstract>An object can decide that it is null, i.e.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFromFlatParent:prefix:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a1eb0c99c8d591f3a58b588363e4d2565</Anchor>
    <Abstract>Handling incoming Indivo 2.0 flat XML IndivoAbstractDocument, a subclass of INObject, uses a slightly more diverse implementation of this method.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ad4932e0b05bc9d5ef23b89b8d4509400</Anchor>
    <Abstract>The INObject implementation sets the node name and node type (if a &amp;quot;type&amp;quot; attribute is found in the X...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWithAttr:fromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>af329d1bf14adb4c69f32148c418ca4cb</Anchor>
    <Abstract>Tries to interpret the attribute string as representing our value.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tagString</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a6526a4c774e928adecf4d0efad4758ee</Anchor>
    <Abstract>Returns the tag name and, if mustDeclareType is YES, the xsi:type-attribute, ready to be used as tag ...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>xml</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a217d51d9b40673b5009665c3923b12a6</Anchor>
    <Abstract>Return an XML representation of the object.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributeNames</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a6b32a6cd314574c9ba03e188722bd7ea</Anchor>
    <Abstract>The properties whose names are returned here are expected to be XML node attributes rather than compl...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flatXMLNameForPropertyName:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a045def193f53f5547de4d27cb594eccc</Anchor>
    <Abstract>Objects have the ability to use a different name from the property name for flat XML &amp;quot;name&amp;quot; attribute...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>newWithNodeName:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>aeed9099cc8ad55d64b1b3225365b48e0</Anchor>
    <Abstract>Returns a fresh node with nodeName set.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeName</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a884c5eedff050615b24d1a8b6866631f</Anchor>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeType</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a442303ee5dee7d6a24013da204753aec</Anchor>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>objectFromAttribute:inNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a499c48080c52224d6e7650c7d7fa9ab8</Anchor>
    <Abstract>This method returns an object created from the string contents of a node attribute.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>objectFromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ad6122063a8025ee62db1469397527b5d</Anchor>
    <Abstract>This method returns an object created representing the the node.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_nodeName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ade43c92af65af424ab16f717ad4d8287</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mustDeclareType</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a728fb03d744e577a283abd8de40f963f</Anchor>
    <Abstract>NO by default. If YES, the XML output should contain &amp;quot;xsi:type&amp;quot;.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeName</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a973a63722bd2a9ff7637f47530f04d36</Anchor>
    <Abstract>The object&amp;#39;s nodeName.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeType</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a771138093fcd1db3243a4b8c5b8cf04e</Anchor>
    <Abstract>The type, e.g. &amp;quot;indivo:ValueAndUnit&amp;quot; or &amp;quot;xs:date&amp;quot;.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>INPharmacy</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>INPharmacy</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_pharmacy.html</Path>
    <Abstract>A class to represent a &amp;quot;Pharmacy&amp;quot; field.</Abstract>
    <DeclaredIn>INPharmacy.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>adr</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INPharmacy</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_pharmacy.html</Path>
    <Anchor>a76838c586e4066c539801c1c1b80fe99</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ncpdpid</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INPharmacy</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_pharmacy.html</Path>
    <Anchor>a36396528047e213e174b75e28095f3ff</Anchor>
    <Abstract>The pharmacy&amp;#39;s National Council for Prescription Drug Programs (NCPDP) ID number.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>org</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INPharmacy</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_pharmacy.html</Path>
    <Anchor>a12a4c0d63ec32cedc78118f0797c4b68</Anchor>
    <Abstract>The organization.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>asAttribute</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a75c5d68b06350558099044ce3a9d699e</Anchor>
    <Abstract>Returns the value of this node usable as attribute to another node.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributeValue</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a9709e6fee409dd3f7807e8221b5e69e4</Anchor>
    <Abstract>Returns the string that goes into the attribute value.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flatXMLPartsWithPrefix:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ab13beda92d1082fbdd10a3b21c4cfbb7</Anchor>
    <Abstract>Indivo 2.0&amp;#39;s ugly flat XML format needs this.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initFromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>adeead863b5cfa8a5d5e67b972856548b</Anchor>
    <Abstract>The designated initializer.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>innerXML</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>abd3cd1007fc6a53c021c768d8683f59c</Anchor>
    <Abstract>Returns the XML of all child nodes.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNull</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a6e7a7b930974303ba1b8ac4991967d24</Anchor>
    <Abstract>An object can decide that it is null, i.e.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFromFlatParent:prefix:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a1eb0c99c8d591f3a58b588363e4d2565</Anchor>
    <Abstract>Handling incoming Indivo 2.0 flat XML IndivoAbstractDocument, a subclass of INObject, uses a slightly more diverse implementation of this method.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ad4932e0b05bc9d5ef23b89b8d4509400</Anchor>
    <Abstract>The INObject implementation sets the node name and node type (if a &amp;quot;type&amp;quot; attribute is found in the X...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWithAttr:fromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>af329d1bf14adb4c69f32148c418ca4cb</Anchor>
    <Abstract>Tries to interpret the attribute string as representing our value.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tagString</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a6526a4c774e928adecf4d0efad4758ee</Anchor>
    <Abstract>Returns the tag name and, if mustDeclareType is YES, the xsi:type-attribute, ready to be used as tag ...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>xml</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a217d51d9b40673b5009665c3923b12a6</Anchor>
    <Abstract>Return an XML representation of the object.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributeNames</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a6b32a6cd314574c9ba03e188722bd7ea</Anchor>
    <Abstract>The properties whose names are returned here are expected to be XML node attributes rather than compl...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flatXMLNameForPropertyName:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a045def193f53f5547de4d27cb594eccc</Anchor>
    <Abstract>Objects have the ability to use a different name from the property name for flat XML &amp;quot;name&amp;quot; attribute...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>newWithNodeName:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>aeed9099cc8ad55d64b1b3225365b48e0</Anchor>
    <Abstract>Returns a fresh node with nodeName set.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeName</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a884c5eedff050615b24d1a8b6866631f</Anchor>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeType</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a442303ee5dee7d6a24013da204753aec</Anchor>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>objectFromAttribute:inNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a499c48080c52224d6e7650c7d7fa9ab8</Anchor>
    <Abstract>This method returns an object created from the string contents of a node attribute.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>objectFromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ad6122063a8025ee62db1469397527b5d</Anchor>
    <Abstract>This method returns an object created representing the the node.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_nodeName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ade43c92af65af424ab16f717ad4d8287</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>INPhoneType</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>INPhoneType</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_phone_type.html</Path>
    <Abstract>A class representing &amp;quot;indivo:PhoneType&amp;quot; objects, generated from /indivo/schemas/data/core/demographic...</Abstract>
    <DeclaredIn>INPhoneType.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>asAttribute</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a75c5d68b06350558099044ce3a9d699e</Anchor>
    <Abstract>Returns the value of this node usable as attribute to another node.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributeValue</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a9709e6fee409dd3f7807e8221b5e69e4</Anchor>
    <Abstract>Returns the string that goes into the attribute value.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flatXMLPartsWithPrefix:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ab13beda92d1082fbdd10a3b21c4cfbb7</Anchor>
    <Abstract>Indivo 2.0&amp;#39;s ugly flat XML format needs this.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initFromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>adeead863b5cfa8a5d5e67b972856548b</Anchor>
    <Abstract>The designated initializer.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>innerXML</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>abd3cd1007fc6a53c021c768d8683f59c</Anchor>
    <Abstract>Returns the XML of all child nodes.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNull</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a6e7a7b930974303ba1b8ac4991967d24</Anchor>
    <Abstract>An object can decide that it is null, i.e.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFromFlatParent:prefix:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a1eb0c99c8d591f3a58b588363e4d2565</Anchor>
    <Abstract>Handling incoming Indivo 2.0 flat XML IndivoAbstractDocument, a subclass of INObject, uses a slightly more diverse implementation of this method.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ad4932e0b05bc9d5ef23b89b8d4509400</Anchor>
    <Abstract>The INObject implementation sets the node name and node type (if a &amp;quot;type&amp;quot; attribute is found in the X...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWithAttr:fromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>af329d1bf14adb4c69f32148c418ca4cb</Anchor>
    <Abstract>Tries to interpret the attribute string as representing our value.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tagString</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a6526a4c774e928adecf4d0efad4758ee</Anchor>
    <Abstract>Returns the tag name and, if mustDeclareType is YES, the xsi:type-attribute, ready to be used as tag ...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>xml</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a217d51d9b40673b5009665c3923b12a6</Anchor>
    <Abstract>Return an XML representation of the object.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>restrictedTo</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INNormalizedString</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_normalized_string.html</Path>
    <Anchor>a259107696fab8634e59d60ff06aaff01</Anchor>
    <Abstract>Subclasses can be restricted to certain possible strings.</Abstract>
    <DeclaredIn>INNormalizedString.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_nodeName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ade43c92af65af424ab16f717ad4d8287</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>string</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INString</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_string.html</Path>
    <Anchor>a97bf290695d9e0d6a0e8193bcfa0142d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>INProvider</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>INProvider</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_provider.html</Path>
    <Abstract>Representing a &amp;quot;Provider&amp;quot; dummy field.</Abstract>
    <DeclaredIn>INProvider.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>adr</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INProvider</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_provider.html</Path>
    <Anchor>a3552ae0cb64d9861055670369847eed0</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bday</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INProvider</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_provider.html</Path>
    <Anchor>a5e2a67aaea2c6d562daf981ad02404ca</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dea_number</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INProvider</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_provider.html</Path>
    <Anchor>a1b07e051346f6164d76bc01c746c4146</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>email</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INProvider</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_provider.html</Path>
    <Anchor>a001ff5282d0231aaaa1f3a5c25116703</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ethnicity</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INProvider</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_provider.html</Path>
    <Anchor>af2d9712662abcb220c2e3e051c5a5f50</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>gender</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INProvider</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_provider.html</Path>
    <Anchor>aa29ccca2e21a76004accb993e14dc74b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>name</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INProvider</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_provider.html</Path>
    <Anchor>a8c4adb338227a11fcb10f324a08b0639</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>npi_number</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INProvider</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_provider.html</Path>
    <Anchor>a0f0a71690f840702ef7ac8468fed3554</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preferred_language</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INProvider</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_provider.html</Path>
    <Anchor>af5e89e99a0609da823db500beae22a7c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>race</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INProvider</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_provider.html</Path>
    <Anchor>a32579b35b4b87f4535a0b3adcc4d215e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tel_1</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INProvider</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_provider.html</Path>
    <Anchor>a5d16ef51b59fc0bfb8f6ee83fcb98668</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tel_2</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INProvider</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_provider.html</Path>
    <Anchor>a445a203756fa0dedff46a35dac4c0767</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>asAttribute</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a75c5d68b06350558099044ce3a9d699e</Anchor>
    <Abstract>Returns the value of this node usable as attribute to another node.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributeValue</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a9709e6fee409dd3f7807e8221b5e69e4</Anchor>
    <Abstract>Returns the string that goes into the attribute value.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flatXMLPartsWithPrefix:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ab13beda92d1082fbdd10a3b21c4cfbb7</Anchor>
    <Abstract>Indivo 2.0&amp;#39;s ugly flat XML format needs this.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initFromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>adeead863b5cfa8a5d5e67b972856548b</Anchor>
    <Abstract>The designated initializer.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>innerXML</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>abd3cd1007fc6a53c021c768d8683f59c</Anchor>
    <Abstract>Returns the XML of all child nodes.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNull</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a6e7a7b930974303ba1b8ac4991967d24</Anchor>
    <Abstract>An object can decide that it is null, i.e.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFromFlatParent:prefix:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a1eb0c99c8d591f3a58b588363e4d2565</Anchor>
    <Abstract>Handling incoming Indivo 2.0 flat XML IndivoAbstractDocument, a subclass of INObject, uses a slightly more diverse implementation of this method.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ad4932e0b05bc9d5ef23b89b8d4509400</Anchor>
    <Abstract>The INObject implementation sets the node name and node type (if a &amp;quot;type&amp;quot; attribute is found in the X...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWithAttr:fromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>af329d1bf14adb4c69f32148c418ca4cb</Anchor>
    <Abstract>Tries to interpret the attribute string as representing our value.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tagString</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a6526a4c774e928adecf4d0efad4758ee</Anchor>
    <Abstract>Returns the tag name and, if mustDeclareType is YES, the xsi:type-attribute, ready to be used as tag ...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>xml</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a217d51d9b40673b5009665c3923b12a6</Anchor>
    <Abstract>Return an XML representation of the object.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributeNames</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a6b32a6cd314574c9ba03e188722bd7ea</Anchor>
    <Abstract>The properties whose names are returned here are expected to be XML node attributes rather than compl...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flatXMLNameForPropertyName:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a045def193f53f5547de4d27cb594eccc</Anchor>
    <Abstract>Objects have the ability to use a different name from the property name for flat XML &amp;quot;name&amp;quot; attribute...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>newWithNodeName:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>aeed9099cc8ad55d64b1b3225365b48e0</Anchor>
    <Abstract>Returns a fresh node with nodeName set.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeName</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a884c5eedff050615b24d1a8b6866631f</Anchor>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeType</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a442303ee5dee7d6a24013da204753aec</Anchor>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>objectFromAttribute:inNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a499c48080c52224d6e7650c7d7fa9ab8</Anchor>
    <Abstract>This method returns an object created from the string contents of a node attribute.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>objectFromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ad6122063a8025ee62db1469397527b5d</Anchor>
    <Abstract>This method returns an object created representing the the node.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_nodeName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ade43c92af65af424ab16f717ad4d8287</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>INQuantitativeResult</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>INQuantitativeResult</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_quantitative_result.html</Path>
    <Abstract>A class representing the &amp;quot;QuantitativeResultField&amp;quot; dummy field.</Abstract>
    <DeclaredIn>INQuantitativeResult.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>non_critical_range</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INQuantitativeResult</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_quantitative_result.html</Path>
    <Anchor>a00a9dd52f0820a8ec48b7f6497b8f0cd</Anchor>
    <Abstract>The non-critical range for this type of results.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>normal_range</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INQuantitativeResult</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_quantitative_result.html</Path>
    <Anchor>a03c2d9bd1570b9da82fe6c4d070cc6d1</Anchor>
    <Abstract>The normal range for this type of results.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INQuantitativeResult</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_quantitative_result.html</Path>
    <Anchor>a87a60445dcafeaab9f6a814b8af09b3a</Anchor>
    <Abstract>The value of the result.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>asAttribute</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a75c5d68b06350558099044ce3a9d699e</Anchor>
    <Abstract>Returns the value of this node usable as attribute to another node.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributeValue</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a9709e6fee409dd3f7807e8221b5e69e4</Anchor>
    <Abstract>Returns the string that goes into the attribute value.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flatXMLPartsWithPrefix:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ab13beda92d1082fbdd10a3b21c4cfbb7</Anchor>
    <Abstract>Indivo 2.0&amp;#39;s ugly flat XML format needs this.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initFromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>adeead863b5cfa8a5d5e67b972856548b</Anchor>
    <Abstract>The designated initializer.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>innerXML</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>abd3cd1007fc6a53c021c768d8683f59c</Anchor>
    <Abstract>Returns the XML of all child nodes.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNull</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a6e7a7b930974303ba1b8ac4991967d24</Anchor>
    <Abstract>An object can decide that it is null, i.e.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFromFlatParent:prefix:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a1eb0c99c8d591f3a58b588363e4d2565</Anchor>
    <Abstract>Handling incoming Indivo 2.0 flat XML IndivoAbstractDocument, a subclass of INObject, uses a slightly more diverse implementation of this method.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ad4932e0b05bc9d5ef23b89b8d4509400</Anchor>
    <Abstract>The INObject implementation sets the node name and node type (if a &amp;quot;type&amp;quot; attribute is found in the X...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWithAttr:fromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>af329d1bf14adb4c69f32148c418ca4cb</Anchor>
    <Abstract>Tries to interpret the attribute string as representing our value.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tagString</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a6526a4c774e928adecf4d0efad4758ee</Anchor>
    <Abstract>Returns the tag name and, if mustDeclareType is YES, the xsi:type-attribute, ready to be used as tag ...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>xml</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a217d51d9b40673b5009665c3923b12a6</Anchor>
    <Abstract>Return an XML representation of the object.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributeNames</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a6b32a6cd314574c9ba03e188722bd7ea</Anchor>
    <Abstract>The properties whose names are returned here are expected to be XML node attributes rather than compl...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flatXMLNameForPropertyName:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a045def193f53f5547de4d27cb594eccc</Anchor>
    <Abstract>Objects have the ability to use a different name from the property name for flat XML &amp;quot;name&amp;quot; attribute...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>newWithNodeName:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>aeed9099cc8ad55d64b1b3225365b48e0</Anchor>
    <Abstract>Returns a fresh node with nodeName set.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeName</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a884c5eedff050615b24d1a8b6866631f</Anchor>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeType</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a442303ee5dee7d6a24013da204753aec</Anchor>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>objectFromAttribute:inNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a499c48080c52224d6e7650c7d7fa9ab8</Anchor>
    <Abstract>This method returns an object created from the string contents of a node attribute.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>objectFromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ad6122063a8025ee62db1469397527b5d</Anchor>
    <Abstract>This method returns an object created representing the the node.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_nodeName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ade43c92af65af424ab16f717ad4d8287</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>INQueryParameter</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>INQueryParameter</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_query_parameter.html</Path>
    <Abstract>Simplified use of Indivo&amp;#39;s Query API.</Abstract>
    <DeclaredIn>INQueryParameter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addFilter:withValue:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INQueryParameter</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_query_parameter.html</Path>
    <Anchor>aadaafd1c9805e41fb23788aa34abb447</Anchor>
    <Abstract>Adds a filter.</Abstract>
    <DeclaredIn>INQueryParameter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addParameter:withValue:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INQueryParameter</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_query_parameter.html</Path>
    <Anchor>a0ee2b4c566f373964220369f697b64ee</Anchor>
    <Abstract>Adds a custom parameter.</Abstract>
    <DeclaredIn>INQueryParameter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithQueryString:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INQueryParameter</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_query_parameter.html</Path>
    <Anchor>a75de063dfdc04efdd342e3ee99d9255c</Anchor>
    <Abstract>Initializes the receiver with information found in the query string.</Abstract>
    <DeclaredIn>INQueryParameter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>queryParameters</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INQueryParameter</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_query_parameter.html</Path>
    <Anchor>a32599b2b9136c621e707e3ea92ca3257</Anchor>
    <Abstract>The query parameters currently defined in the receiver.</Abstract>
    <DeclaredIn>INQueryParameter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeFilterForKey:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INQueryParameter</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_query_parameter.html</Path>
    <Anchor>a5903638521e9c8758404aaed07b4387c</Anchor>
    <Abstract>Removes a filter, if it exists.</Abstract>
    <DeclaredIn>INQueryParameter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeParameterForKey:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INQueryParameter</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_query_parameter.html</Path>
    <Anchor>a06abb3555ac6a2c5d28afad9c5ff113e</Anchor>
    <Abstract>Unsets a custom parameter.</Abstract>
    <DeclaredIn>INQueryParameter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFromQueryString:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INQueryParameter</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_query_parameter.html</Path>
    <Anchor>a5065bd152df2c5a3d7eb672ec2a02682</Anchor>
    <Abstract>Sets the receivers properties from the supplied query string.</Abstract>
    <DeclaredIn>INQueryParameter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateFromParameter:withValue:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INQueryParameter</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_query_parameter.html</Path>
    <Anchor>afb10aaf0026fb03cdf5190da71bdba85</Anchor>
    <Abstract>Sets the internal state represented by the given parameter string, according to the key...</Abstract>
    <DeclaredIn>INQueryParameter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>aggregateBy</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INQueryParameter</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_query_parameter.html</Path>
    <Anchor>a7e28232735dba6fbb55e79100f6a426c</Anchor>
    <Abstract>The field by which to aggregate.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>aggregateOperator</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INQueryParameter</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_query_parameter.html</Path>
    <Anchor>af02c002aae589850de852ed48dcc1af6</Anchor>
    <Abstract>The operator to apply to the &amp;quot;aggregateBy&amp;quot; field.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dateGroupField</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INQueryParameter</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_query_parameter.html</Path>
    <Anchor>ab41d57245fe7f94ace55bf54605a0a3e</Anchor>
    <Abstract>The field which to group according to &amp;quot;dateGroupIncrement&amp;quot;.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dateGroupIncrement</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INQueryParameter</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_query_parameter.html</Path>
    <Anchor>a59f8a3d1f9cf86ff74e0e1099af3702c</Anchor>
    <Abstract>The increment for date grouping.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dateRangeEnd</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INQueryParameter</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_query_parameter.html</Path>
    <Anchor>a659845bed7fe8e43667cc8cbf872a492</Anchor>
    <Abstract>End date of the date range in field &amp;quot;dateRangeField&amp;quot;.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dateRangeField</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INQueryParameter</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_query_parameter.html</Path>
    <Anchor>a4ee8cd835c44f44491fe3ff00156b2fb</Anchor>
    <Abstract>The field upon which to limit the date range.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dateRangeStart</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INQueryParameter</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_query_parameter.html</Path>
    <Anchor>a3de05925ed234844311708add5189cf3</Anchor>
    <Abstract>Starting date of the date range in field &amp;quot;dateRangeField&amp;quot;.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>descending</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INQueryParameter</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_query_parameter.html</Path>
    <Anchor>a20ff1e12e82a1fa3dbbf5b4427b2d021</Anchor>
    <Abstract>NO by default, if YES the ordering is reversed.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>filters</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INQueryParameter</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_query_parameter.html</Path>
    <Anchor>a0e505829c1f9fcf24258a75e47431c5d</Anchor>
    <Abstract>The filters to be applied, not URL-escaped (this will be done for you)</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>groupBy</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INQueryParameter</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_query_parameter.html</Path>
    <Anchor>a448871a8444ae7e2484697920e36956d</Anchor>
    <Abstract>Group by values of this field. If &amp;quot;orderBy&amp;quot; is not nil it will be reset to this value.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>limit</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INQueryParameter</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_query_parameter.html</Path>
    <Anchor>a933c98d14571608bfde2fbab2d07f101</Anchor>
    <Abstract>How many items to get, 0 by default which will return the server&amp;#39;s default.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>offset</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INQueryParameter</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_query_parameter.html</Path>
    <Anchor>a2b70d47cead7b6bad0c969ed49ecfe59</Anchor>
    <Abstract>The offset where to start, 0 by default.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>orderBy</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INQueryParameter</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_query_parameter.html</Path>
    <Anchor>aac6fc592a237cfd06233ff68ab6613e2</Anchor>
    <Abstract>The field by which to order.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>status</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INQueryParameter</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_query_parameter.html</Path>
    <Anchor>ada980aa7c930aca5dd141199cff84709</Anchor>
    <Abstract>The status of the documents, INDocumentStatusUnknown by default.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>INSchemaParser</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>INSchemaParser</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_schema_parser.html</Path>
    <Abstract>An abstract schema parser class.</Abstract>
    <DeclaredIn>INSchemaParser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>runFileAtPath:error:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INSchemaParser</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_schema_parser.html</Path>
    <Anchor>a3510d4b4d2e0533ad7133cecc14d64c6</Anchor>
    <DeclaredIn>INSchemaParser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>newWithDelegate:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INSchemaParser</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_schema_parser.html</Path>
    <Anchor>add38aece4d06adc605aaa8e694146bb2</Anchor>
    <DeclaredIn>INSchemaParser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>delegate</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INSchemaParser</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_schema_parser.html</Path>
    <Anchor>a95dacd49e986c3fd3a0260b90e4ff50f</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>INSchemaParserDelegate</Name>
      <APILanguage>c</APILanguage>
      <Type>intf</Type>
      <Scope>INSchemaParserDelegate</Scope>
    </TokenIdentifier>
    <Path>protocol_i_n_schema_parser_delegate-p.html</Path>
    <DeclaredIn>INSchemaParser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>schemaParser:classNameForType:effectiveType:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>INSchemaParserDelegate-p</Scope>
    </TokenIdentifier>
    <Path>protocol_i_n_schema_parser_delegate-p.html</Path>
    <Anchor>a38fbced08cd26548b419aca834790e45</Anchor>
    <DeclaredIn>INSchemaParser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>schemaParser:didParseClass:forName:superclass:forType:properties:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>INSchemaParserDelegate-p</Scope>
    </TokenIdentifier>
    <Path>protocol_i_n_schema_parser_delegate-p.html</Path>
    <Anchor>a4086fc82416e2ff9c96e279ae3a13df4</Anchor>
    <DeclaredIn>INSchemaParser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>schemaParser:existingClassNameForType:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>INSchemaParserDelegate-p</Scope>
    </TokenIdentifier>
    <Path>protocol_i_n_schema_parser_delegate-p.html</Path>
    <Anchor>a5486b9ca92a6f0d4a807ab6d07598cdd</Anchor>
    <DeclaredIn>INSchemaParser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>schemaParser:isProcessingFileAtPath:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>INSchemaParserDelegate-p</Scope>
    </TokenIdentifier>
    <Path>protocol_i_n_schema_parser_delegate-p.html</Path>
    <Anchor>a54d8a4650a43d1b0e959990fdde073fa</Anchor>
    <DeclaredIn>INSchemaParser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>schemaParser:sendsMessage:ofType:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>INSchemaParserDelegate-p</Scope>
    </TokenIdentifier>
    <Path>protocol_i_n_schema_parser_delegate-p.html</Path>
    <Anchor>acb63ee1454186095beb2cbd3bb9fd098</Anchor>
    <DeclaredIn>INSchemaParser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>INSDMLParser</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>INSDMLParser</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_s_d_m_l_parser.html</Path>
    <Abstract>Tries to create Obj-C classes from the Indivo-specific SDML files.</Abstract>
    <DeclaredIn>INSDMLParser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>runFileAtPath:error:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INSchemaParser</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_schema_parser.html</Path>
    <Anchor>a3510d4b4d2e0533ad7133cecc14d64c6</Anchor>
    <DeclaredIn>INSchemaParser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>newWithDelegate:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INSchemaParser</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_schema_parser.html</Path>
    <Anchor>add38aece4d06adc605aaa8e694146bb2</Anchor>
    <DeclaredIn>INSchemaParser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>delegate</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INSchemaParser</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_schema_parser.html</Path>
    <Anchor>a95dacd49e986c3fd3a0260b90e4ff50f</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>INServerCall</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>INServerCall</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_call.html</Path>
    <Abstract>Our internal class to handle a call to the server.</Abstract>
    <DeclaredIn>INServerCall.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>abortWithError:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INServerCall</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_call.html</Path>
    <Anchor>a3099a8356375f418d24f4f303ceb4c79</Anchor>
    <Abstract>This method can be called to abort a call and have it send the provided error with its callback...</Abstract>
    <DeclaredIn>INServerCall.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cancel</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INServerCall</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_call.html</Path>
    <Anchor>a08389c04d1d7c2df09d02df6aaf77848</Anchor>
    <Abstract>Cancels the call, calling &amp;quot;abortWithError:nil&amp;quot; has the same effect.</Abstract>
    <DeclaredIn>INServerCall.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>finishWith:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INServerCall</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_call.html</Path>
    <Anchor>a4b0381215687a15147fc3c45ac2ff9fc</Anchor>
    <Abstract>A method to finish the call early, but successfully.</Abstract>
    <DeclaredIn>INServerCall.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fire</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INServerCall</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_call.html</Path>
    <Anchor>a23338662529f5488be91b7b987b9109e</Anchor>
    <Abstract>Fires the request as currently prepared.</Abstract>
    <DeclaredIn>INServerCall.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fire:withParameters:httpMethod:oauth:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INServerCall</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_call.html</Path>
    <Anchor>a36011a97c52da399abf6cefe6984f476</Anchor>
    <Abstract>Most versatile fire method, used internally from the get: and post: methods.</Abstract>
    <DeclaredIn>INServerCall.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get:withParameters:oauth:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INServerCall</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_call.html</Path>
    <Anchor>a0dd4938f82359d87c07dd61308b6f800</Anchor>
    <Abstract>Sends off as a GET request.</Abstract>
    <DeclaredIn>INServerCall.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithServer:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INServerCall</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_call.html</Path>
    <Anchor>aebbdec3646c01f9a04636b6af20cb013</Anchor>
    <DeclaredIn>INServerCall.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAuthenticationCall</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INServerCall</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_call.html</Path>
    <Anchor>a1c3d0af8341034abe2fe0561937727ef</Anchor>
    <DeclaredIn>INServerCall.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parseXML:intoResponseDictionary:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INServerCall</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_call.html</Path>
    <Anchor>aeab031fe36bd26200593e8cbc0ff07e4</Anchor>
    <DeclaredIn>INServerCall+XMLParsing.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>post:body:oauth:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INServerCall</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_call.html</Path>
    <Anchor>ab170e083cdda5ff23ad5aea6ecc41093</Anchor>
    <Abstract>Sends off a POST request with the given body.</Abstract>
    <DeclaredIn>INServerCall.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>post:withParameters:oauth:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INServerCall</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_call.html</Path>
    <Anchor>a470b1ceee76c351fa9d487ef19f5abab</Anchor>
    <Abstract>Sends off as a POST request.</Abstract>
    <DeclaredIn>INServerCall.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>newForServer:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INServerCall</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_call.html</Path>
    <Anchor>a3df5068426befa4627edb689f40818e1</Anchor>
    <DeclaredIn>INServerCall.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>body</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INServerCall</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_call.html</Path>
    <Anchor>ae364ded0a225d8877e7f5315570791e1</Anchor>
    <Abstract>Body data, takes precedence over &amp;quot;parameters&amp;quot; if length is &amp;gt; 0.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>finishIfAuthenticated</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INServerCall</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_call.html</Path>
    <Anchor>a26a588563f323f29a672e6ed847aae43</Anchor>
    <Abstract>If YES the call is merely a proxy to the OAuth authentication call.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasBeenFired</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INServerCall</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_call.html</Path>
    <Anchor>a3eba9c39efcdf195fc2c370ea642c94b</Anchor>
    <Abstract>As the name suggests, tells us whether it has been sent on the journey.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HTTPMethod</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INServerCall</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_call.html</Path>
    <Anchor>a36a7f1944d13f04c544e4d0ec94b0e56</Anchor>
    <Abstract>Will be GET by default.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>method</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INServerCall</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_call.html</Path>
    <Anchor>a3c0d65ae021a5673cfb49cfbfaf32f41</Anchor>
    <Abstract>The method to call on the server URL.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>myCallback</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INServerCall</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_call.html</Path>
    <Anchor>a8e16f2c91a61a8a2fa6220efe76ebcd8</Anchor>
    <Abstract>The callback after finishing our call.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>oauth</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INServerCall</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_call.html</Path>
    <Anchor>afd94cc4e2582bab6bc506c98efffeb13</Anchor>
    <Abstract>The call will retain a copy of the oauth instance.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parameters</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INServerCall</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_call.html</Path>
    <Anchor>a429956c1613bff2a42414271886973c2</Anchor>
    <Abstract>An array with &quot;key=value&amp;quot; strings to be passed to the server, overridden by &amp;quot;body&quot;.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>server</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INServerCall</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_call.html</Path>
    <Anchor>a00589f18a3af5cf4f36629989e731280</Anchor>
    <Abstract>The server upon which we are called.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>INServerCall(XMLParsing)</Name>
      <APILanguage>c</APILanguage>
      <Type>cat</Type>
      <Scope>INServerCall(XMLParsing)</Scope>
    </TokenIdentifier>
    <Path>category_i_n_server_call_07_x_m_l_parsing_08.html</Path>
    <Abstract>Category on INServerCall that automatically parses XML returns.</Abstract>
    <DeclaredIn>INServerCall+XMLParsing.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parseXML:intoResponseDictionary:</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
      <Scope>INServerCall(XMLParsing)</Scope>
    </TokenIdentifier>
    <Path>category_i_n_server_call_07_x_m_l_parsing_08.html</Path>
    <Anchor>aeab031fe36bd26200593e8cbc0ff07e4</Anchor>
    <DeclaredIn>INServerCall+XMLParsing.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>INServerObject</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Abstract>INServerObject extends INObject in that it represents an XML document tree &amp;quot;belonging&amp;quot; to a given ser...</Abstract>
    <DeclaredIn>INServerObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>forceNotOnServer</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>ac274479305ae9b3f49c9dd24572afe96</Anchor>
    <Abstract>This is provided for subclasses, the fact that onServer is readonly but settable by this and markOnSe...</Abstract>
    <DeclaredIn>INServerObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a45970634b7aa5f86e7479c1599a7d98c</Anchor>
    <Abstract>Shortcut for GETting data.</Abstract>
    <DeclaredIn>INServerObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get:parameters:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a17f98bd457ac77a451c6b730f97beae2</Anchor>
    <Abstract>Shortcut for GETting data with parameters.</Abstract>
    <DeclaredIn>INServerObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initFromNode:withServer:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a4828394e023d6346442ec59512198300</Anchor>
    <Abstract>The designated initializer.</Abstract>
    <DeclaredIn>INServerObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a40df090a1813e6d965efce8fbf58295e</Anchor>
    <Abstract>Shortcut method to test if the document has the given ID.</Abstract>
    <DeclaredIn>INServerObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>markOnServer</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a08067a7fd061216248615f841984c608</Anchor>
    <Abstract>Sets onServer to YES for the receiver.</Abstract>
    <DeclaredIn>INServerObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>performMethod:withBody:orParameters:httpMethod:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a3e995d3df3fe4fb6769f63d4f3c6e216</Anchor>
    <Abstract>The basic method to perform REST methods on the server with App credentials.</Abstract>
    <DeclaredIn>INServerObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>post:body:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a7b1df3e6eb0a567205156e9826a7d0c0</Anchor>
    <Abstract>Shortcut for POSTing body data.</Abstract>
    <DeclaredIn>INServerObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>post:parameters:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a070d06400465144dd85cd731a8aab5bf</Anchor>
    <Abstract>Shortcut for POSTing parameters.</Abstract>
    <DeclaredIn>INServerObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>put:body:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a914bdf0c6dffcea761cd795937d03271</Anchor>
    <Abstract>Shortcut for PUTting data.</Abstract>
    <DeclaredIn>INServerObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onServer</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>ab0a5a28ab2950cee434c1ffe3588be68</Anchor>
    <Abstract>Indicates whether this document lives on the server.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>server</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a16eaad9d8c1852f6d59b595d9748bc22</Anchor>
    <Abstract>Our beloved server.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uuid</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INServerObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_server_object.html</Path>
    <Anchor>a3bbdea7b50f5b42650336852c6c401ff</Anchor>
    <Abstract>This object&amp;#39;s udid.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributeNames</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a6b32a6cd314574c9ba03e188722bd7ea</Anchor>
    <Abstract>The properties whose names are returned here are expected to be XML node attributes rather than compl...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flatXMLNameForPropertyName:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a045def193f53f5547de4d27cb594eccc</Anchor>
    <Abstract>Objects have the ability to use a different name from the property name for flat XML &amp;quot;name&amp;quot; attribute...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>newWithNodeName:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>aeed9099cc8ad55d64b1b3225365b48e0</Anchor>
    <Abstract>Returns a fresh node with nodeName set.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeName</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a884c5eedff050615b24d1a8b6866631f</Anchor>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeType</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a442303ee5dee7d6a24013da204753aec</Anchor>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>objectFromAttribute:inNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a499c48080c52224d6e7650c7d7fa9ab8</Anchor>
    <Abstract>This method returns an object created from the string contents of a node attribute.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>objectFromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ad6122063a8025ee62db1469397527b5d</Anchor>
    <Abstract>This method returns an object created representing the the node.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_nodeName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ade43c92af65af424ab16f717ad4d8287</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>INString</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>INString</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_string.html</Path>
    <Abstract>A class to represent &amp;quot;xs:string&amp;quot; elements.</Abstract>
    <DeclaredIn>INString.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>newWithString:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INString</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_string.html</Path>
    <Anchor>ad41ff5c3a3916e0428d6b61e4c1eb864</Anchor>
    <DeclaredIn>INString.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributeNames</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a6b32a6cd314574c9ba03e188722bd7ea</Anchor>
    <Abstract>The properties whose names are returned here are expected to be XML node attributes rather than compl...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flatXMLNameForPropertyName:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a045def193f53f5547de4d27cb594eccc</Anchor>
    <Abstract>Objects have the ability to use a different name from the property name for flat XML &amp;quot;name&amp;quot; attribute...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>newWithNodeName:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>aeed9099cc8ad55d64b1b3225365b48e0</Anchor>
    <Abstract>Returns a fresh node with nodeName set.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeName</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a884c5eedff050615b24d1a8b6866631f</Anchor>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeType</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a442303ee5dee7d6a24013da204753aec</Anchor>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>objectFromAttribute:inNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a499c48080c52224d6e7650c7d7fa9ab8</Anchor>
    <Abstract>This method returns an object created from the string contents of a node attribute.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>objectFromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ad6122063a8025ee62db1469397527b5d</Anchor>
    <Abstract>This method returns an object created representing the the node.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>string</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INString</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_string.html</Path>
    <Anchor>a97bf290695d9e0d6a0e8193bcfa0142d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mustDeclareType</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a728fb03d744e577a283abd8de40f963f</Anchor>
    <Abstract>NO by default. If YES, the XML output should contain &amp;quot;xsi:type&amp;quot;.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeName</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a973a63722bd2a9ff7637f47530f04d36</Anchor>
    <Abstract>The object&amp;#39;s nodeName.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeType</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a771138093fcd1db3243a4b8c5b8cf04e</Anchor>
    <Abstract>The type, e.g. &amp;quot;indivo:ValueAndUnit&amp;quot; or &amp;quot;xs:date&amp;quot;.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>asAttribute</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a75c5d68b06350558099044ce3a9d699e</Anchor>
    <Abstract>Returns the value of this node usable as attribute to another node.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributeValue</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a9709e6fee409dd3f7807e8221b5e69e4</Anchor>
    <Abstract>Returns the string that goes into the attribute value.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flatXMLPartsWithPrefix:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ab13beda92d1082fbdd10a3b21c4cfbb7</Anchor>
    <Abstract>Indivo 2.0&amp;#39;s ugly flat XML format needs this.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initFromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>adeead863b5cfa8a5d5e67b972856548b</Anchor>
    <Abstract>The designated initializer.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>innerXML</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>abd3cd1007fc6a53c021c768d8683f59c</Anchor>
    <Abstract>Returns the XML of all child nodes.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNull</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a6e7a7b930974303ba1b8ac4991967d24</Anchor>
    <Abstract>An object can decide that it is null, i.e.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFromFlatParent:prefix:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a1eb0c99c8d591f3a58b588363e4d2565</Anchor>
    <Abstract>Handling incoming Indivo 2.0 flat XML IndivoAbstractDocument, a subclass of INObject, uses a slightly more diverse implementation of this method.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ad4932e0b05bc9d5ef23b89b8d4509400</Anchor>
    <Abstract>The INObject implementation sets the node name and node type (if a &amp;quot;type&amp;quot; attribute is found in the X...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWithAttr:fromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>af329d1bf14adb4c69f32148c418ca4cb</Anchor>
    <Abstract>Tries to interpret the attribute string as representing our value.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tagString</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a6526a4c774e928adecf4d0efad4758ee</Anchor>
    <Abstract>Returns the tag name and, if mustDeclareType is YES, the xsi:type-attribute, ready to be used as tag ...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>xml</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a217d51d9b40673b5009665c3923b12a6</Anchor>
    <Abstract>Return an XML representation of the object.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_nodeName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ade43c92af65af424ab16f717ad4d8287</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>INTelephone</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>INTelephone</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_telephone.html</Path>
    <Abstract>A class representing a Telephone object.</Abstract>
    <DeclaredIn>INTelephone.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>number</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INTelephone</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_telephone.html</Path>
    <Anchor>ac707f2db7e27f6337c27d60c3fefd4c2</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preferred</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INTelephone</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_telephone.html</Path>
    <Anchor>a07fd2ce959d95f3a495a9c3086651bb5</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INTelephone</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_telephone.html</Path>
    <Anchor>a9040aff870ac9ccdbd1ab3297a79980a</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>asAttribute</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a75c5d68b06350558099044ce3a9d699e</Anchor>
    <Abstract>Returns the value of this node usable as attribute to another node.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributeValue</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a9709e6fee409dd3f7807e8221b5e69e4</Anchor>
    <Abstract>Returns the string that goes into the attribute value.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flatXMLPartsWithPrefix:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ab13beda92d1082fbdd10a3b21c4cfbb7</Anchor>
    <Abstract>Indivo 2.0&amp;#39;s ugly flat XML format needs this.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initFromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>adeead863b5cfa8a5d5e67b972856548b</Anchor>
    <Abstract>The designated initializer.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>innerXML</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>abd3cd1007fc6a53c021c768d8683f59c</Anchor>
    <Abstract>Returns the XML of all child nodes.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNull</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a6e7a7b930974303ba1b8ac4991967d24</Anchor>
    <Abstract>An object can decide that it is null, i.e.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFromFlatParent:prefix:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a1eb0c99c8d591f3a58b588363e4d2565</Anchor>
    <Abstract>Handling incoming Indivo 2.0 flat XML IndivoAbstractDocument, a subclass of INObject, uses a slightly more diverse implementation of this method.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ad4932e0b05bc9d5ef23b89b8d4509400</Anchor>
    <Abstract>The INObject implementation sets the node name and node type (if a &amp;quot;type&amp;quot; attribute is found in the X...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWithAttr:fromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>af329d1bf14adb4c69f32148c418ca4cb</Anchor>
    <Abstract>Tries to interpret the attribute string as representing our value.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tagString</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a6526a4c774e928adecf4d0efad4758ee</Anchor>
    <Abstract>Returns the tag name and, if mustDeclareType is YES, the xsi:type-attribute, ready to be used as tag ...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>xml</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a217d51d9b40673b5009665c3923b12a6</Anchor>
    <Abstract>Return an XML representation of the object.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributeNames</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a6b32a6cd314574c9ba03e188722bd7ea</Anchor>
    <Abstract>The properties whose names are returned here are expected to be XML node attributes rather than compl...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flatXMLNameForPropertyName:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a045def193f53f5547de4d27cb594eccc</Anchor>
    <Abstract>Objects have the ability to use a different name from the property name for flat XML &amp;quot;name&amp;quot; attribute...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>newWithNodeName:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>aeed9099cc8ad55d64b1b3225365b48e0</Anchor>
    <Abstract>Returns a fresh node with nodeName set.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeName</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a884c5eedff050615b24d1a8b6866631f</Anchor>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeType</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a442303ee5dee7d6a24013da204753aec</Anchor>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>objectFromAttribute:inNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a499c48080c52224d6e7650c7d7fa9ab8</Anchor>
    <Abstract>This method returns an object created from the string contents of a node attribute.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>objectFromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ad6122063a8025ee62db1469397527b5d</Anchor>
    <Abstract>This method returns an object created representing the the node.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_nodeName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ade43c92af65af424ab16f717ad4d8287</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>INUnitValue</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>INUnitValue</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_unit_value.html</Path>
    <Abstract>Represents a ValueAndUnitField dummy field.</Abstract>
    <DeclaredIn>INUnitValue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unit</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INUnitValue</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_unit_value.html</Path>
    <Anchor>ab4c89f0d1154994635dca00a29b1be60</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INUnitValue</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_unit_value.html</Path>
    <Anchor>a7d7a8610e4e0f02cb18f2a994c028163</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>asAttribute</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a75c5d68b06350558099044ce3a9d699e</Anchor>
    <Abstract>Returns the value of this node usable as attribute to another node.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributeValue</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a9709e6fee409dd3f7807e8221b5e69e4</Anchor>
    <Abstract>Returns the string that goes into the attribute value.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flatXMLPartsWithPrefix:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ab13beda92d1082fbdd10a3b21c4cfbb7</Anchor>
    <Abstract>Indivo 2.0&amp;#39;s ugly flat XML format needs this.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initFromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>adeead863b5cfa8a5d5e67b972856548b</Anchor>
    <Abstract>The designated initializer.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>innerXML</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>abd3cd1007fc6a53c021c768d8683f59c</Anchor>
    <Abstract>Returns the XML of all child nodes.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNull</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a6e7a7b930974303ba1b8ac4991967d24</Anchor>
    <Abstract>An object can decide that it is null, i.e.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFromFlatParent:prefix:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a1eb0c99c8d591f3a58b588363e4d2565</Anchor>
    <Abstract>Handling incoming Indivo 2.0 flat XML IndivoAbstractDocument, a subclass of INObject, uses a slightly more diverse implementation of this method.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ad4932e0b05bc9d5ef23b89b8d4509400</Anchor>
    <Abstract>The INObject implementation sets the node name and node type (if a &amp;quot;type&amp;quot; attribute is found in the X...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWithAttr:fromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>af329d1bf14adb4c69f32148c418ca4cb</Anchor>
    <Abstract>Tries to interpret the attribute string as representing our value.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tagString</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a6526a4c774e928adecf4d0efad4758ee</Anchor>
    <Abstract>Returns the tag name and, if mustDeclareType is YES, the xsi:type-attribute, ready to be used as tag ...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>xml</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a217d51d9b40673b5009665c3923b12a6</Anchor>
    <Abstract>Return an XML representation of the object.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributeNames</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a6b32a6cd314574c9ba03e188722bd7ea</Anchor>
    <Abstract>The properties whose names are returned here are expected to be XML node attributes rather than compl...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flatXMLNameForPropertyName:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a045def193f53f5547de4d27cb594eccc</Anchor>
    <Abstract>Objects have the ability to use a different name from the property name for flat XML &amp;quot;name&amp;quot; attribute...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>newWithNodeName:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>aeed9099cc8ad55d64b1b3225365b48e0</Anchor>
    <Abstract>Returns a fresh node with nodeName set.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeName</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a884c5eedff050615b24d1a8b6866631f</Anchor>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeType</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a442303ee5dee7d6a24013da204753aec</Anchor>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>objectFromAttribute:inNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a499c48080c52224d6e7650c7d7fa9ab8</Anchor>
    <Abstract>This method returns an object created from the string contents of a node attribute.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>objectFromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ad6122063a8025ee62db1469397527b5d</Anchor>
    <Abstract>This method returns an object created representing the the node.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_nodeName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ade43c92af65af424ab16f717ad4d8287</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>INURLFetcher</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>INURLFetcher</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_u_r_l_fetcher.html</Path>
    <Abstract>The fetcher is an accessor-class to INURLLoader objects; for example if you want to queue up loading ...</Abstract>
    <DeclaredIn>INURLFetcher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cancel</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INURLFetcher</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_u_r_l_fetcher.html</Path>
    <Anchor>a3475c114916e5a90539500583c10edad</Anchor>
    <Abstract>Abort loading.</Abstract>
    <DeclaredIn>INURLFetcher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getURLs:callback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INURLFetcher</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_u_r_l_fetcher.html</Path>
    <Anchor>a120bd0689fd44b07802a38387b465b45</Anchor>
    <Abstract>Fetches all URLs sequentially and calls callback when finished.</Abstract>
    <DeclaredIn>INURLFetcher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isIdle</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INURLFetcher</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_u_r_l_fetcher.html</Path>
    <Anchor>a98425b2f15209f80cbb0902d70090f7e</Anchor>
    <Abstract>Returns YES if the queue is empty, which is true before loading has begun and after it has completed...</Abstract>
    <DeclaredIn>INURLFetcher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>failedLoads</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INURLFetcher</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_u_r_l_fetcher.html</Path>
    <Anchor>a518c3c7035f891e05bcb9e082a483e32</Anchor>
    <Abstract>Contains all INURLLoader instances that failed to load for any reason.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>successfulLoads</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INURLFetcher</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_u_r_l_fetcher.html</Path>
    <Anchor>a9ddecd26b1eef428fa0c2a052e7f24c6</Anchor>
    <Abstract>Contains INURLLoader instances which loaded with an HTTP response &amp;lt; 400.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>INURLLoader</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>INURLLoader</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_u_r_l_loader.html</Path>
    <Abstract>This class simplifies loading data from a URL.</Abstract>
    <DeclaredIn>INURLLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cancel</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INURLLoader</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_u_r_l_loader.html</Path>
    <Anchor>acef94924ff7ca941dfd5dfbe91fe2e33</Anchor>
    <Abstract>Aborting the loader.</Abstract>
    <DeclaredIn>INURLLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWithCallback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INURLLoader</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_u_r_l_loader.html</Path>
    <Anchor>a7d689f92c1f36961b4caac6b235ca191</Anchor>
    <Abstract>Start loading data from an URL.</Abstract>
    <DeclaredIn>INURLLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithURL:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INURLLoader</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_u_r_l_loader.html</Path>
    <Anchor>ad3b5ae6a787044b2134d54cf3d169b18</Anchor>
    <DeclaredIn>INURLLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>performRequest:withCallback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INURLLoader</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_u_r_l_loader.html</Path>
    <Anchor>aa565c2642ad792515d980ec5c459c79a</Anchor>
    <Abstract>Perform an NSURLRequest asynchronically.</Abstract>
    <DeclaredIn>INURLLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>post:withCallback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INURLLoader</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_u_r_l_loader.html</Path>
    <Anchor>aec79a59944c7c576c227417bfad3ed1f</Anchor>
    <Abstract>POST body values to our URL.</Abstract>
    <DeclaredIn>INURLLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loaderWithURL:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INURLLoader</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_u_r_l_loader.html</Path>
    <Anchor>a892c08e284d73d28a5de856eac80bdfa</Anchor>
    <DeclaredIn>INURLLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>queryFromRequest:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INURLLoader</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_u_r_l_loader.html</Path>
    <Anchor>aebbdc65ed69ddbbdb9c23365a1655a67</Anchor>
    <Abstract>Parses arguments from a request.</Abstract>
    <DeclaredIn>INURLLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>queryFromRequestString:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INURLLoader</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_u_r_l_loader.html</Path>
    <Anchor>ac60c389c41f5c7dc19b935de9331c080</Anchor>
    <Abstract>Parses arguments from a request URL string.</Abstract>
    <DeclaredIn>INURLLoader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>expectBinaryData</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INURLLoader</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_u_r_l_loader.html</Path>
    <Anchor>aaf6ced6f4276ae9e6c7e7bfea5236458</Anchor>
    <Abstract>NO by default. Set to YES if you expect binary data; &amp;quot;responseString&amp;quot; will be left nil!...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>responseData</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INURLLoader</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_u_r_l_loader.html</Path>
    <Anchor>a1b4f3bcec4f7c5ceed56ee052cba63d5</Anchor>
    <Abstract>Will contain the response data as loaded from url.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>responseStatus</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INURLLoader</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_u_r_l_loader.html</Path>
    <Anchor>aaeb22f9764a24dc8f0081c9cbc0a583d</Anchor>
    <Abstract>The HTTP response status code.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>responseString</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INURLLoader</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_u_r_l_loader.html</Path>
    <Anchor>a03e7e307ef2f7dc2dfd71bc59a12ca6d</Anchor>
    <Abstract>Will contain the response as NSString as loaded from url.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>url</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INURLLoader</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_u_r_l_loader.html</Path>
    <Anchor>aadeedecdeae142ce7cd59979ceb0e882</Anchor>
    <Abstract>The URL we will load from.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>INValueRange</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>INValueRange</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_value_range.html</Path>
    <Abstract>A ValueRangeField dummy field.</Abstract>
    <DeclaredIn>INValueRange.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>max</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INValueRange</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_value_range.html</Path>
    <Anchor>acaea3573eed5629a0793251c1f9a4168</Anchor>
    <Abstract>The upper bound on the range.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>min</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INValueRange</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_value_range.html</Path>
    <Anchor>a31ae8608d3a79d374e533d61080273db</Anchor>
    <Abstract>The lower bound on the range.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>asAttribute</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a75c5d68b06350558099044ce3a9d699e</Anchor>
    <Abstract>Returns the value of this node usable as attribute to another node.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributeValue</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a9709e6fee409dd3f7807e8221b5e69e4</Anchor>
    <Abstract>Returns the string that goes into the attribute value.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flatXMLPartsWithPrefix:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ab13beda92d1082fbdd10a3b21c4cfbb7</Anchor>
    <Abstract>Indivo 2.0&amp;#39;s ugly flat XML format needs this.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initFromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>adeead863b5cfa8a5d5e67b972856548b</Anchor>
    <Abstract>The designated initializer.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>innerXML</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>abd3cd1007fc6a53c021c768d8683f59c</Anchor>
    <Abstract>Returns the XML of all child nodes.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNull</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a6e7a7b930974303ba1b8ac4991967d24</Anchor>
    <Abstract>An object can decide that it is null, i.e.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFromFlatParent:prefix:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a1eb0c99c8d591f3a58b588363e4d2565</Anchor>
    <Abstract>Handling incoming Indivo 2.0 flat XML IndivoAbstractDocument, a subclass of INObject, uses a slightly more diverse implementation of this method.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ad4932e0b05bc9d5ef23b89b8d4509400</Anchor>
    <Abstract>The INObject implementation sets the node name and node type (if a &amp;quot;type&amp;quot; attribute is found in the X...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWithAttr:fromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>af329d1bf14adb4c69f32148c418ca4cb</Anchor>
    <Abstract>Tries to interpret the attribute string as representing our value.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tagString</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a6526a4c774e928adecf4d0efad4758ee</Anchor>
    <Abstract>Returns the tag name and, if mustDeclareType is YES, the xsi:type-attribute, ready to be used as tag ...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>xml</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a217d51d9b40673b5009665c3923b12a6</Anchor>
    <Abstract>Return an XML representation of the object.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributeNames</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a6b32a6cd314574c9ba03e188722bd7ea</Anchor>
    <Abstract>The properties whose names are returned here are expected to be XML node attributes rather than compl...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flatXMLNameForPropertyName:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a045def193f53f5547de4d27cb594eccc</Anchor>
    <Abstract>Objects have the ability to use a different name from the property name for flat XML &amp;quot;name&amp;quot; attribute...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>newWithNodeName:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>aeed9099cc8ad55d64b1b3225365b48e0</Anchor>
    <Abstract>Returns a fresh node with nodeName set.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeName</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a884c5eedff050615b24d1a8b6866631f</Anchor>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeType</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a442303ee5dee7d6a24013da204753aec</Anchor>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>objectFromAttribute:inNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a499c48080c52224d6e7650c7d7fa9ab8</Anchor>
    <Abstract>This method returns an object created from the string contents of a node attribute.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>objectFromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ad6122063a8025ee62db1469397527b5d</Anchor>
    <Abstract>This method returns an object created representing the the node.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_nodeName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ade43c92af65af424ab16f717ad4d8287</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>INVitalSign</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>INVitalSign</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_vital_sign.html</Path>
    <Abstract>A &amp;quot;VitalSigns&amp;quot; object (yes, note the &amp;quot;s&amp;quot;)</Abstract>
    <DeclaredIn>INVitalSign.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>name</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INVitalSign</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_vital_sign.html</Path>
    <Anchor>a6fba5dbf3948e588f2db771f1c400b2c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unit</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INVitalSign</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_vital_sign.html</Path>
    <Anchor>a876b9c89cfe0bd039921e0b028d08bb1</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INVitalSign</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_vital_sign.html</Path>
    <Anchor>a1451aaccf0eebed505412f76e0c58208</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mustDeclareType</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a728fb03d744e577a283abd8de40f963f</Anchor>
    <Abstract>NO by default. If YES, the XML output should contain &amp;quot;xsi:type&amp;quot;.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeName</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a973a63722bd2a9ff7637f47530f04d36</Anchor>
    <Abstract>The object&amp;#39;s nodeName.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeType</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a771138093fcd1db3243a4b8c5b8cf04e</Anchor>
    <Abstract>The type, e.g. &amp;quot;indivo:ValueAndUnit&amp;quot; or &amp;quot;xs:date&amp;quot;.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>asAttribute</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a75c5d68b06350558099044ce3a9d699e</Anchor>
    <Abstract>Returns the value of this node usable as attribute to another node.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributeValue</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a9709e6fee409dd3f7807e8221b5e69e4</Anchor>
    <Abstract>Returns the string that goes into the attribute value.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flatXMLPartsWithPrefix:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ab13beda92d1082fbdd10a3b21c4cfbb7</Anchor>
    <Abstract>Indivo 2.0&amp;#39;s ugly flat XML format needs this.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initFromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>adeead863b5cfa8a5d5e67b972856548b</Anchor>
    <Abstract>The designated initializer.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>innerXML</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>abd3cd1007fc6a53c021c768d8683f59c</Anchor>
    <Abstract>Returns the XML of all child nodes.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNull</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a6e7a7b930974303ba1b8ac4991967d24</Anchor>
    <Abstract>An object can decide that it is null, i.e.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFromFlatParent:prefix:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a1eb0c99c8d591f3a58b588363e4d2565</Anchor>
    <Abstract>Handling incoming Indivo 2.0 flat XML IndivoAbstractDocument, a subclass of INObject, uses a slightly more diverse implementation of this method.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ad4932e0b05bc9d5ef23b89b8d4509400</Anchor>
    <Abstract>The INObject implementation sets the node name and node type (if a &amp;quot;type&amp;quot; attribute is found in the X...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWithAttr:fromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>af329d1bf14adb4c69f32148c418ca4cb</Anchor>
    <Abstract>Tries to interpret the attribute string as representing our value.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tagString</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a6526a4c774e928adecf4d0efad4758ee</Anchor>
    <Abstract>Returns the tag name and, if mustDeclareType is YES, the xsi:type-attribute, ready to be used as tag ...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>xml</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a217d51d9b40673b5009665c3923b12a6</Anchor>
    <Abstract>Return an XML representation of the object.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributeNames</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a6b32a6cd314574c9ba03e188722bd7ea</Anchor>
    <Abstract>The properties whose names are returned here are expected to be XML node attributes rather than compl...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flatXMLNameForPropertyName:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a045def193f53f5547de4d27cb594eccc</Anchor>
    <Abstract>Objects have the ability to use a different name from the property name for flat XML &amp;quot;name&amp;quot; attribute...</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>newWithNodeName:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>aeed9099cc8ad55d64b1b3225365b48e0</Anchor>
    <Abstract>Returns a fresh node with nodeName set.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeName</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a884c5eedff050615b24d1a8b6866631f</Anchor>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeType</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a442303ee5dee7d6a24013da204753aec</Anchor>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>objectFromAttribute:inNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>a499c48080c52224d6e7650c7d7fa9ab8</Anchor>
    <Abstract>This method returns an object created from the string contents of a node attribute.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>objectFromNode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ad6122063a8025ee62db1469397527b5d</Anchor>
    <Abstract>This method returns an object created representing the the node.</Abstract>
    <DeclaredIn>INObject.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_nodeName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>INObject</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_object.html</Path>
    <Anchor>ade43c92af65af424ab16f717ad4d8287</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>INXMLNode</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>INXMLNode</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_x_m_l_node.html</Path>
    <Abstract>A class to represent one node in an XML document.</Abstract>
    <DeclaredIn>INXMLNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addChild:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INXMLNode</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_x_m_l_node.html</Path>
    <Anchor>a32ac9a6e72ce33d6c0da50e4d5b20134</Anchor>
    <Abstract>Add a child node.</Abstract>
    <DeclaredIn>INXMLNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attr:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INXMLNode</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_x_m_l_node.html</Path>
    <Anchor>af8269be69ddb889c410e0e55b8c9e19f</Anchor>
    <Abstract>A shortcut to get the object representing the attribute with the given name.</Abstract>
    <DeclaredIn>INXMLNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>boolAttr:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INXMLNode</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_x_m_l_node.html</Path>
    <Anchor>a5f0b296962057e61c4a4b037f460f204</Anchor>
    <Abstract>Tries to interpret an attribute as a bool value.</Abstract>
    <DeclaredIn>INXMLNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>boolValue</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INXMLNode</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_x_m_l_node.html</Path>
    <Anchor>afa2dd2a68ac760f46569e84e6e800c75</Anchor>
    <Abstract>Returns a boolean value by interpreting the text content.</Abstract>
    <DeclaredIn>INXMLNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>childNamed:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INXMLNode</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_x_m_l_node.html</Path>
    <Anchor>adaf901572203e9bde863fc9a2b0f3cb5</Anchor>
    <Abstract>Returns the first child node matching the given name.</Abstract>
    <DeclaredIn>INXMLNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>childrenNamed:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INXMLNode</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_x_m_l_node.html</Path>
    <Anchor>aa17a700f7321febdc1b81710ab6d15e5</Anchor>
    <Abstract>Searches child nodes for a node with given name.</Abstract>
    <DeclaredIn>INXMLNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>childXML</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INXMLNode</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_x_m_l_node.html</Path>
    <Anchor>a512d4f6c74aed92f732a1c821428a1df</Anchor>
    <DeclaredIn>INXMLNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>firstChild</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INXMLNode</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_x_m_l_node.html</Path>
    <Anchor>a3592679223a0ae583a39f07ad44d8e02</Anchor>
    <Abstract>Return the first child node or nil, if there are none.</Abstract>
    <DeclaredIn>INXMLNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numAttr:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INXMLNode</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_x_m_l_node.html</Path>
    <Anchor>afe5deb6140af472de68d38c6f1f93add</Anchor>
    <Abstract>Returns the attribute as an NSNumber.</Abstract>
    <DeclaredIn>INXMLNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAttr:forKey:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INXMLNode</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_x_m_l_node.html</Path>
    <Anchor>a9a57468beefc4f459bb4cee9132ae3c9</Anchor>
    <Abstract>Sets an attribute.</Abstract>
    <DeclaredIn>INXMLNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>xml</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INXMLNode</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_x_m_l_node.html</Path>
    <Anchor>afa4dac413da80d5252a93be48bcc084f</Anchor>
    <DeclaredIn>INXMLNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeWithName:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INXMLNode</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_x_m_l_node.html</Path>
    <Anchor>aa88c78a2e8b0342baf572920541b5197</Anchor>
    <Abstract>Returns an empty node with given node name.</Abstract>
    <DeclaredIn>INXMLNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeWithName:attributes:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INXMLNode</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_x_m_l_node.html</Path>
    <Anchor>adaf2298e7391b43a4c9ef0337a627371</Anchor>
    <Abstract>Returns a node with given name and attributes.</Abstract>
    <DeclaredIn>INXMLNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributes</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INXMLNode</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_x_m_l_node.html</Path>
    <Anchor>abaeaec7156afc77b31d1847c51c0e8a4</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>children</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INXMLNode</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_x_m_l_node.html</Path>
    <Anchor>ac58b98a9587eb672fc78e6b670fd57bf</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>name</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INXMLNode</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_x_m_l_node.html</Path>
    <Anchor>aeef93c823a30c4447fea79985369b15b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parent</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INXMLNode</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_x_m_l_node.html</Path>
    <Anchor>ab0095783bc3586dbb697f7ce5bf93894</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>text</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INXMLNode</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_x_m_l_node.html</Path>
    <Anchor>ae6d74144254df9f649349e05a557db14</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>INXMLParser</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>INXMLParser</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_x_m_l_parser.html</Path>
    <Abstract>A simle XML Parser to parse XML into our XML nodes.</Abstract>
    <DeclaredIn>INXMLParser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parseXML:error:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INXMLParser</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_x_m_l_parser.html</Path>
    <Anchor>a17e0c1be9ab533e329bea071092febfc</Anchor>
    <Abstract>Returns a dictionary generated from parsing the given XML string.</Abstract>
    <DeclaredIn>INXMLParser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>validateXML:againstXSD:error:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INXMLParser</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_x_m_l_parser.html</Path>
    <Anchor>aed111d5cbdbab0dcde4504fcb72f1276</Anchor>
    <Abstract>Validates an XML string against an XSD at the given path.</Abstract>
    <DeclaredIn>INXMLParser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>INXMLReport</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>INXMLReport</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_x_m_l_report.html</Path>
    <Abstract>A class to represent a &amp;quot;Report&amp;quot; node in an XML document.</Abstract>
    <DeclaredIn>INXMLReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>aggregateReportNode</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INXMLReport</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_x_m_l_report.html</Path>
    <Anchor>ade9bc48826ed7e25bd666d24548e440c</Anchor>
    <Abstract>Returns the aggregate report node.</Abstract>
    <DeclaredIn>INXMLReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>documentNode</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INXMLReport</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_x_m_l_report.html</Path>
    <Anchor>a97db7a0701de612a31d4fe97e710f992</Anchor>
    <Abstract>Returns the node representing the document.</Abstract>
    <DeclaredIn>INXMLReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>metaDocumentNode</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INXMLReport</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_x_m_l_report.html</Path>
    <Anchor>a18ddb541acfc8fadf561c7013479cdab</Anchor>
    <Abstract>Returns the node representing the meta document.</Abstract>
    <DeclaredIn>INXMLReport.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addChild:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INXMLNode</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_x_m_l_node.html</Path>
    <Anchor>a32ac9a6e72ce33d6c0da50e4d5b20134</Anchor>
    <Abstract>Add a child node.</Abstract>
    <DeclaredIn>INXMLNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attr:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INXMLNode</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_x_m_l_node.html</Path>
    <Anchor>af8269be69ddb889c410e0e55b8c9e19f</Anchor>
    <Abstract>A shortcut to get the object representing the attribute with the given name.</Abstract>
    <DeclaredIn>INXMLNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>boolAttr:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INXMLNode</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_x_m_l_node.html</Path>
    <Anchor>a5f0b296962057e61c4a4b037f460f204</Anchor>
    <Abstract>Tries to interpret an attribute as a bool value.</Abstract>
    <DeclaredIn>INXMLNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>boolValue</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INXMLNode</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_x_m_l_node.html</Path>
    <Anchor>afa2dd2a68ac760f46569e84e6e800c75</Anchor>
    <Abstract>Returns a boolean value by interpreting the text content.</Abstract>
    <DeclaredIn>INXMLNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>childNamed:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INXMLNode</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_x_m_l_node.html</Path>
    <Anchor>adaf901572203e9bde863fc9a2b0f3cb5</Anchor>
    <Abstract>Returns the first child node matching the given name.</Abstract>
    <DeclaredIn>INXMLNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>childrenNamed:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INXMLNode</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_x_m_l_node.html</Path>
    <Anchor>aa17a700f7321febdc1b81710ab6d15e5</Anchor>
    <Abstract>Searches child nodes for a node with given name.</Abstract>
    <DeclaredIn>INXMLNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>childXML</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INXMLNode</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_x_m_l_node.html</Path>
    <Anchor>a512d4f6c74aed92f732a1c821428a1df</Anchor>
    <DeclaredIn>INXMLNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>firstChild</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INXMLNode</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_x_m_l_node.html</Path>
    <Anchor>a3592679223a0ae583a39f07ad44d8e02</Anchor>
    <Abstract>Return the first child node or nil, if there are none.</Abstract>
    <DeclaredIn>INXMLNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numAttr:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INXMLNode</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_x_m_l_node.html</Path>
    <Anchor>afe5deb6140af472de68d38c6f1f93add</Anchor>
    <Abstract>Returns the attribute as an NSNumber.</Abstract>
    <DeclaredIn>INXMLNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAttr:forKey:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INXMLNode</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_x_m_l_node.html</Path>
    <Anchor>a9a57468beefc4f459bb4cee9132ae3c9</Anchor>
    <Abstract>Sets an attribute.</Abstract>
    <DeclaredIn>INXMLNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>xml</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INXMLNode</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_x_m_l_node.html</Path>
    <Anchor>afa4dac413da80d5252a93be48bcc084f</Anchor>
    <DeclaredIn>INXMLNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeWithName:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INXMLNode</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_x_m_l_node.html</Path>
    <Anchor>aa88c78a2e8b0342baf572920541b5197</Anchor>
    <Abstract>Returns an empty node with given node name.</Abstract>
    <DeclaredIn>INXMLNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeWithName:attributes:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INXMLNode</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_x_m_l_node.html</Path>
    <Anchor>adaf2298e7391b43a4c9ef0337a627371</Anchor>
    <Abstract>Returns a node with given name and attributes.</Abstract>
    <DeclaredIn>INXMLNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attributes</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INXMLNode</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_x_m_l_node.html</Path>
    <Anchor>abaeaec7156afc77b31d1847c51c0e8a4</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>children</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INXMLNode</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_x_m_l_node.html</Path>
    <Anchor>ac58b98a9587eb672fc78e6b670fd57bf</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>name</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INXMLNode</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_x_m_l_node.html</Path>
    <Anchor>aeef93c823a30c4447fea79985369b15b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parent</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INXMLNode</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_x_m_l_node.html</Path>
    <Anchor>ab0095783bc3586dbb697f7ce5bf93894</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>text</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INXMLNode</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_x_m_l_node.html</Path>
    <Anchor>ae6d74144254df9f649349e05a557db14</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>INXSDParser</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>INXSDParser</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_x_s_d_parser.html</Path>
    <Abstract>This class parses XSD files and tries to create Obj-C classes for the types it encounters.</Abstract>
    <DeclaredIn>INXSDParser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>runFileAtPath:error:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>INSchemaParser</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_schema_parser.html</Path>
    <Anchor>a3510d4b4d2e0533ad7133cecc14d64c6</Anchor>
    <DeclaredIn>INSchemaParser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>newWithDelegate:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>INSchemaParser</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_schema_parser.html</Path>
    <Anchor>add38aece4d06adc605aaa8e694146bb2</Anchor>
    <DeclaredIn>INSchemaParser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>delegate</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>INSchemaParser</Scope>
    </TokenIdentifier>
    <Path>interface_i_n_schema_parser.html</Path>
    <Anchor>a95dacd49e986c3fd3a0260b90e4ff50f</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NSArray(NilProtection)</Name>
      <APILanguage>c</APILanguage>
      <Type>cat</Type>
      <Scope>NSArray(NilProtection)</Scope>
    </TokenIdentifier>
    <Path>category_n_s_array_07_nil_protection_08.html</Path>
    <DeclaredIn>NSArray+NilProtection.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>firstObject</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
      <Scope>NSArray(NilProtection)</Scope>
    </TokenIdentifier>
    <Path>category_n_s_array_07_nil_protection_08.html</Path>
    <Anchor>a300066329e3d4049df04b2f97f3d954a</Anchor>
    <Abstract>Returns the first object or nil.</Abstract>
    <DeclaredIn>NSArray+NilProtection.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>objectOrNilAtIndex:</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
      <Scope>NSArray(NilProtection)</Scope>
    </TokenIdentifier>
    <Path>category_n_s_array_07_nil_protection_08.html</Path>
    <Anchor>ae8ed57d5e9971b4b5f8dd2393bf25140</Anchor>
    <Abstract>Returns the object at given index or nil, if the index is out of bounds.</Abstract>
    <DeclaredIn>NSArray+NilProtection.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NSCharacterSet(Extension)</Name>
      <APILanguage>c</APILanguage>
      <Type>cat</Type>
      <Scope>NSCharacterSet(Extension)</Scope>
    </TokenIdentifier>
    <Path>category_n_s_character_set_07_extension_08.html</Path>
    <DeclaredIn>NSCharacterSet+Extension.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numericCharacterSet</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
      <Scope>NSCharacterSet(Extension)</Scope>
    </TokenIdentifier>
    <Path>category_n_s_character_set_07_extension_08.html</Path>
    <Anchor>aea325e051b138818ae111d3a026f7a32</Anchor>
    <Abstract>Returns a union between decimalDigitCharacteSet and &amp;quot;.&amp;quot;.</Abstract>
    <DeclaredIn>NSCharacterSet+Extension.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NSMutableArray(NilProtection)</Name>
      <APILanguage>c</APILanguage>
      <Type>cat</Type>
      <Scope>NSMutableArray(NilProtection)</Scope>
    </TokenIdentifier>
    <Path>category_n_s_mutable_array_07_nil_protection_08.html</Path>
    <DeclaredIn>NSArray+NilProtection.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addObjectIfNotNil:</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
      <Scope>NSMutableArray(NilProtection)</Scope>
    </TokenIdentifier>
    <Path>category_n_s_mutable_array_07_nil_protection_08.html</Path>
    <Anchor>a3ed16df32f5bace1baa795a9c06affaf</Anchor>
    <DeclaredIn>NSArray+NilProtection.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unshiftObjectIfNotNil:</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
      <Scope>NSMutableArray(NilProtection)</Scope>
    </TokenIdentifier>
    <Path>category_n_s_mutable_array_07_nil_protection_08.html</Path>
    <Anchor>a4a229b355dc23c26fe29ce7275a2a459</Anchor>
    <DeclaredIn>NSArray+NilProtection.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NSMutableString(XML)</Name>
      <APILanguage>c</APILanguage>
      <Type>cat</Type>
      <Scope>NSMutableString(XML)</Scope>
    </TokenIdentifier>
    <Path>category_n_s_mutable_string_07_x_m_l_08.html</Path>
    <DeclaredIn>NSString+XML.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>xmlEscape</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
      <Scope>NSMutableString(XML)</Scope>
    </TokenIdentifier>
    <Path>category_n_s_mutable_string_07_x_m_l_08.html</Path>
    <Anchor>aa959871f7bc355af4c5de1fc0760f418</Anchor>
    <DeclaredIn>NSString+XML.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NSObject(ClassUtils)</Name>
      <APILanguage>c</APILanguage>
      <Type>cat</Type>
      <Scope>NSObject(ClassUtils)</Scope>
    </TokenIdentifier>
    <Path>category_n_s_object_07_class_utils_08.html</Path>
    <Abstract>Provides functions for runtime class querying.</Abstract>
    <DeclaredIn>NSObject+ClassUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NSString(XML)</Name>
      <APILanguage>c</APILanguage>
      <Type>cat</Type>
      <Scope>NSString(XML)</Scope>
    </TokenIdentifier>
    <Path>category_n_s_string_07_x_m_l_08.html</Path>
    <DeclaredIn>NSString+XML.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numericString</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
      <Scope>NSString(XML)</Scope>
    </TokenIdentifier>
    <Path>category_n_s_string_07_x_m_l_08.html</Path>
    <Anchor>aa4b867769ec9675d0fed0521bd6f4184</Anchor>
    <Abstract>Returns only the number-representing part of a string.</Abstract>
    <DeclaredIn>NSString+XML.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>xmlSafe</Name>
      <APILanguage>occ</APILanguage>
      <Type>func</Type>
      <Scope>NSString(XML)</Scope>
    </TokenIdentifier>
    <Path>category_n_s_string_07_x_m_l_08.html</Path>
    <Anchor>a2fb00af0117a0287f7eec698931a9f3e</Anchor>
    <Abstract>Escapes XML special chars (see &amp;quot;xmlEscape&amp;quot;)</Abstract>
    <DeclaredIn>NSString+XML.h</DeclaredIn>
  </Token>
</Tokens>
